enum _Scalar { Boolean Enum Number String Union }

output _TypeScalar {
    | _ScalarBoolean
    | _ScalarEnum
    | _ScalarNumber
    | _ScalarString
    | _ScalarUnion
    }

output _ScalarRef<$base> {
    : _TypeRef<_TypeKind.Scalar>
        scalar: $base
    }

output _BaseScalar<$base> {
    : _BaseType<_TypeKind.Scalar>
        extends: _ScalarRef<$base>?
    }

output _BaseScalarItem {
        exclude: Boolean
    }

output _ScalarBoolean {
    : _BaseScalar<_Scalar.Boolean>
    }

output _ScalarRange<$of> {
    : _BaseScalarItem
        from: $of?
        to: $of?
    }

output _ScalarEnum {
    : _BaseScalar<_Scalar.Enum>
        enum: _TypeRef<_TypeKind.Enum>
        ranges: _ScalarRange<_EnumValue>[]
    }

output _ScalarNumber {
    : _BaseScalar<_Scalar.Number>
        ranges: _ScalarRange<Number>[]
    }

output _ScalarString {
    : _BaseScalar<_Scalar.String>
        regexes: _ScalarRegex[]
    }

output _ScalarRegex {
    : _BaseScalarItem
        regex: String
    }

output _ScalarUnion {
    : _BaseScalar<_Scalar.Union>
        references: _TypeSimple[]
    }

output _ScalarValue<$base $value> {
    : _ScalarRef<$base>
        value: $value
}
