enum _Scalar { Boolean Enum Number String Union }

output _TypeScalar {
    | _BaseScalar<_Scalar.Boolean _ScalarBoolean>
    | _BaseScalar<_Scalar.Enum _ScalarEnum>
    | _BaseScalar<_Scalar.Number _ScalarRange>
    | _BaseScalar<_Scalar.String _ScalarRegex>
    | _BaseScalar<_Scalar.Union _TypeSimple>
    }

output _ScalarRef<$base> {
    : _TypeRef<_TypeKind.Scalar>
        scalar: $base
    }

output _BaseScalar<$base $item> {
    : _BaseType<_TypeKind.Scalar>
        extends: _ScalarRef<$base>?
        items: $item[]
        allItems: _ScalarItem<$item>[]
    }

output _BaseScalarItem {
        exclude: Boolean
    }

output _ScalarBoolean {
    }

output _ScalarEnum {
    : _BaseScalarItem
        member: _EnumValue
    }

output _ScalarRange {
    : _BaseScalarItem
        from: Number?
        to: Number?
    }

output _ScalarRegex {
    : _BaseScalarItem
        regex: String
    }

output _ScalarItem<$item> {
    : $item
        scalar: String
    }

output _ScalarValue<$base $value> {
    : _ScalarRef<$base>
        value: $value
    }
