!Sc I@001/0001
Failure
<
  !!! P@023/0091 : Invalid Output. Expected type parameter. - ':_TypeKind' !!!
  !!! P@023/0091 : Invalid Schema. Expected no more text. - ':_TypeKind' !!!
>
{
  !Ou I@008/0001
  _Schema
  :
  I@007/0002
  _Named
  {
    !OF I@009/0003
    categories
    (
      !Pa
      I@020/0003
      _CategoryFilter
      ?
    )
    :
    I@039/0003
    _Categories
    [_Identifier]
    !OF I@009/0004
    directives
    (
      !Pa
      I@020/0004
      _Filter
      ?
    )
    :
    I@031/0004
    _Directives
    [_Identifier]
    !OF I@009/0005
    types
    (
      !Pa
      I@015/0005
      _TypeFilter
      ?
    )
    :
    I@030/0005
    _Type
    [_Identifier]
    !OF I@009/0006
    settings
    (
      !Pa
      I@018/0006
      _Filter
      ?
    )
    :
    I@029/0006
    _Setting
    [_Identifier]
  }
}
{
  !Do I@008/0009
  _Identifier
  String
  !DX R@029/0009
  /[A-Za-z_]+/
}
{
  !In I@007/0011
  _Filter
  {
    !IF I@009/0012
    names
    :
    I@016/0012
    _NameFilter
    []
    !IF I@009/0013
    matchAliases
    :
    I@023/0013
    Boolean
    ?
    =( !k I@034/0013 Boolean.true )
    !IF I@009/0014
    aliases
    :
    I@018/0014
    _NameFilter
    []
    !IF I@009/0015
    returnByAlias
    :
    I@024/0015
    Boolean
    ?
    =( !k I@035/0015 Boolean.false )
    !IF I@009/0016
    returnReferencedTypes
    :
    I@032/0016
    Boolean
    ?
    =( !k I@043/0016 Boolean.false )
  }
  |
  !IA I@007/0017
  I@007/0017
  _NameFilter
  []
}
{
  "_NameFilter is a simple match expression against _Identifier where '.' matches any single character and '*' matches zero or more of any character."
  !Do I@008/0021
  _NameFilter
  String
  !DX R@029/0021
  /[A-Za-z_.*]+/
}
{
  !In I@007/0023
  _CategoryFilter
  :
  I@007/0024
  _Filter
  {
    !IF I@009/0025
    resolutions
    :
    I@022/0025
    _Resolution
    []
  }
}
{
  !In I@007/0028
  _TypeFilter
  :
  I@007/0029
  _Filter
  {
    !IF I@009/0030
    kinds
    :
    I@016/0030
    _TypeKind
    []
  }
}
{
  !Du I@006/0032
  _Aliased
  :
  I@007/0033
  _Named
  {
    !DF I@009/0034
    aliases
    :
    I@018/0034
    _Identifier
    []
  }
}
{
  !Du I@006/0037
  _Named
  :
  I@007/0038
  _Described
  {
    !DF I@009/0039
    name
    :
    I@015/0039
    _Identifier
  }
}
{
  !Du I@006/0042
  _Described
  {
    !DF I@009/0043
    description
    :
    I@022/0043
    String
    []
  }
}
{
  !Ou I@008/0045
  _Categories
  {
    !OF I@009/0046
    category
    :
    I@019/0046
    _Category
    !OF I@009/0047
    type
    :
    I@015/0047
    _Type
  }
  |
  !OA I@007/0048
  I@007/0048
  _Category
  !OA I@007/0049
  I@007/0049
  _Type
}
{
  !Ou I@008/0052
  _Category
  :
  I@007/0053
  _Aliased
  {
    !OF I@009/0054
    resolution
    :
    I@021/0054
    _Resolution
    !OF I@009/0055
    output
    :
    I@017/0055
    _TypeRef
    <
      I@026/0055
      _TypeKind.Output
    >
    !OF I@009/0056
    modifiers
    :
    I@020/0056
    _Modifiers
    []
  }
}
{
  !En I@006/0059
  _Resolution
  !EL I@020/0059
  Parallel
  !EL I@029/0059
  Sequential
  !EL I@040/0059
  Single
}
{
  !Ou I@008/0060
  _Directives
  {
    !OF I@009/0061
    directive
    :
    I@020/0061
    _Directive
    !OF I@009/0062
    type
    :
    I@015/0062
    _Type
  }
  |
  !OA I@007/0063
  I@007/0063
  _Directive
  !OA I@007/0064
  I@007/0064
  _Type
}
{
  !Ou I@008/0067
  _Directive
  :
  I@007/0068
  _Aliased
  {
    !OF I@009/0069
    parameters
    :
    I@021/0069
    _InputParam
    []
    !OF I@009/0070
    repeatable
    :
    I@021/0070
    Boolean
    !OF I@009/0071
    locations
    :
    I@020/0071
    _
    [_Location]
  }
}
{
  !En I@006/0074
  _Location
  !EL I@018/0074
  Operation
  !EL I@028/0074
  Variable
  !EL I@037/0074
  Field
  !EL I@043/0074
  Inline
  !EL I@050/0074
  Spread
  !EL I@057/0074
  Fragment
}
{
  !Ou I@008/0076
  _Setting
  :
  I@007/0077
  _Named
  {
    !OF I@009/0078
    value
    :
    I@016/0078
    _Constant
  }
}
{
  !Ou I@008/0080
  _Type
  |
  !OA I@007/0081
  I@007/0081
  _BaseType
  <
    I@017/0081
    _TypeKind.Basic
  >
  !OA I@007/0082
  I@007/0082
  _BaseType
  <
    I@017/0082
    _TypeKind.Internal
  >
  !OA I@007/0083
  I@007/0083
  _TypeDual
  !OA I@007/0084
  I@007/0084
  _TypeEnum
  !OA I@007/0085
  I@007/0085
  _TypeInput
  !OA I@007/0086
  I@007/0086
  _TypeOutput
  !OA I@007/0087
  I@007/0087
  _TypeDomain
  !OA I@007/0088
  I@007/0088
  _TypeUnion
}
{
  !Ou I@008/0091
  _BaseType
}