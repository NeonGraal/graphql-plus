/* all
"A Category"
category { "Category Result" All }
"A Directive"
directive @all { All }
"An Option"
option Schema { "Schema Setting" all="test" }
"A Domain"
domain Guid { String "Guid Regex" /[0-9a-f]{8}(-[0-9a-f]{4}){3}-[0-9a-f]{12}/ }
"An Enum"
enum One { "Label 2" Two "Label 3" Three }
"A Union"
union Many { "Guid Id" Guid "Numeric Id" Number }
"A Dual"
dual Field { "Some strings" strings: "Strings array" String[] }
"An Input"
input Param {
    "First Id" afterId: "Guid or Int" Many?
    "Last Id" beforeId: "Guid or Int" Many
    | "Alternate parameter" String
    }
"An Output"
output All {
    "Some items" items(Param?): Field
    | "Alternates" String
    }
*/

// Generated from Schema all

/*
Category all
Directive all
Option Schema
*/

namespace GqlPlus.Model_Schema_all;

public interface IGuid
{
}
public class DomainGuid
  : IGuid
{
}

public enum One
{
  Two,
  Three,
}

public interface IMany
{
  Guid AsGuid { get; }
  Number AsNumber { get; }
}
public class UnionMany
  : IMany
{
  public Guid AsGuid { get; set; }
  public Number AsNumber { get; set; }
}

public interface IDualField {}

public interface IInputParam {}

public interface IOutputAll {}