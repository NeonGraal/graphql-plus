!Sc I@001/0001
Failure
<
  !!! P@045/0196 : Invalid Output. Expected constraint for $value. - '>\ \{\n\ \ \ \ :\ ' !!!
  !!! P@045/0196 : Invalid Spec. Expected no more text. - '>\ \{\n\ \ \ \ :\ ' !!!
>
{
  !Ou I@008/0001
  _Schema
  :
  I@007/0002
  _Named
  {
    !OF I@009/0003
    categories
    (
      !Pa
      I@020/0003
      _CategoryFilter
      ?
    )
    :
    I@039/0003
    _Categories
    [_Identifier]
    !OF I@009/0004
    directives
    (
      !Pa
      I@020/0004
      _Filter
      ?
    )
    :
    I@031/0004
    _Directives
    [_Identifier]
    !OF I@009/0005
    types
    (
      !Pa
      I@015/0005
      _TypeFilter
      ?
    )
    :
    I@030/0005
    _Type
    [_Identifier]
    !OF I@009/0006
    settings
    (
      !Pa
      I@018/0006
      _Filter
      ?
    )
    :
    I@029/0006
    _Setting
    [_Identifier]
  }
}
{
  !Do I@008/0009
  _Identifier
  String
  !DX R@029/0009
  /[A-Za-z_]+/
}
{
  !In I@007/0011
  _Filter
  {
    !IF I@009/0012
    names
    :
    I@016/0012
    _NameFilter
    []
    !IF I@009/0013
    matchAliases
    :
    I@023/0013
    Boolean
    ?
    =( !k I@034/0013 Boolean.true )
    !IF I@009/0014
    aliases
    :
    I@018/0014
    _NameFilter
    []
    !IF I@009/0015
    returnByAlias
    :
    I@024/0015
    Boolean
    ?
    =( !k I@035/0015 Boolean.false )
    !IF I@009/0016
    returnReferencedTypes
    :
    I@032/0016
    Boolean
    ?
    =( !k I@043/0016 Boolean.false )
  }
  |
  I@007/0017
  _NameFilter
  []
}
{
  '_NameFilter is a simple match expression against _Identifier where \'.\' matches any single character and \'*\' matches zero or more of any character.'
  !Do I@008/0022
  _NameFilter
  String
  !DX R@029/0022
  /[A-Za-z_.*]+/
}
{
  !In I@007/0024
  _CategoryFilter
  :
  I@007/0025
  _Filter
  {
    !IF I@009/0026
    resolutions
    :
    I@022/0026
    _Resolution
    []
  }
}
{
  !In I@007/0029
  _TypeFilter
  :
  I@007/0030
  _Filter
  {
    !IF I@009/0031
    kinds
    :
    I@016/0031
    _TypeKind
    []
  }
}
{
  !Du I@006/0033
  _Aliased
  :
  I@007/0034
  _Named
  {
    !DF I@009/0035
    aliases
    :
    I@018/0035
    _Identifier
    []
  }
}
{
  !Du I@006/0038
  _Named
  :
  I@007/0039
  _Described
  {
    !DF I@009/0040
    name
    :
    I@015/0040
    _Identifier
  }
}
{
  !Du I@006/0043
  _Described
  {
    !DF I@009/0044
    description
    :
    I@022/0044
    String
    []
  }
}
{
  !Ou I@008/0046
  _Categories
  {
    !OF I@009/0047
    category
    :
    I@019/0047
    _Category
    !OF I@009/0048
    type
    :
    I@015/0048
    _Type
  }
  |
  I@007/0049
  _Category
  I@007/0050
  _Type
}
{
  !Ou I@008/0053
  _Category
  :
  I@007/0054
  _Aliased
  {
    !OF I@009/0055
    resolution
    :
    I@021/0055
    _Resolution
    !OF I@009/0056
    output
    :
    I@017/0056
    _TypeRef
    <
      I@026/0056
      _TypeKind.Output
    >
    !OF I@009/0057
    modifiers
    :
    I@020/0057
    _Modifiers
    []
  }
}
{
  !En I@006/0060
  _Resolution
  !EL I@020/0060
  Parallel
  !EL I@029/0060
  Sequential
  !EL I@040/0060
  Single
}
{
  !Ou I@008/0061
  _Directives
  {
    !OF I@009/0062
    directive
    :
    I@020/0062
    _Directive
    !OF I@009/0063
    type
    :
    I@015/0063
    _Type
  }
  |
  I@007/0064
  _Directive
  I@007/0065
  _Type
}
{
  !Ou I@008/0068
  _Directive
  :
  I@007/0069
  _Aliased
  {
    !OF I@009/0070
    parameters
    :
    I@021/0070
    _InputParam
    []
    !OF I@009/0071
    repeatable
    :
    I@021/0071
    Boolean
    !OF I@009/0072
    locations
    :
    I@020/0072
    _
    [_Location]
  }
}
{
  !En I@006/0075
  _Location
  !EL I@018/0075
  Operation
  !EL I@028/0075
  Variable
  !EL I@037/0075
  Field
  !EL I@043/0075
  Inline
  !EL I@050/0075
  Spread
  !EL I@057/0075
  Fragment
}
{
  !Ou I@008/0077
  _Setting
  :
  I@007/0078
  _Named
  {
    !OF I@009/0079
    value
    :
    I@016/0079
    _Constant
  }
}
{
  !Ou I@008/0081
  _Type
  |
  I@007/0082
  _BaseType
  <
    I@017/0082
    _TypeKind.Basic
  >
  I@007/0083
  _BaseType
  <
    I@017/0083
    _TypeKind.Internal
  >
  I@007/0084
  _TypeDual
  I@007/0085
  _TypeEnum
  I@007/0086
  _TypeInput
  I@007/0087
  _TypeOutput
  I@007/0088
  _TypeDomain
  I@007/0089
  _TypeUnion
}
{
  !Ou I@008/0092
  _BaseType
  <
    I@019/0092
    $kind
    :_TypeKind
  >
  :
  I@007/0093
  _Aliased
  {
    !OF I@009/0094
    typeKind
    :
    I@020/0094
    $kind
  }
}
{
  !Ou I@008/0097
  _ChildType
  <
    I@020/0097
    $kind
    :_TypeKind
    I@036/0097
    $parent
    :_Described
  >
  :
  I@007/0098
  _BaseType
  <
    I@018/0098
    $kind
  >
  {
    !OF I@009/0099
    parent
    :
    I@018/0099
    $parent
  }
}
{
  !Ou I@008/0102
  _ParentType
  <
    I@021/0102
    $kind
    :_TypeKind
    I@037/0102
    $item
    :_Described
    I@054/0102
    $allItem
    :_Described
  >
  :
  I@007/0103
  _ChildType
  <
    I@019/0103
    $kind
    I@024/0103
    _Named
  >
  {
    !OF I@009/0104
    items
    :
    I@017/0104
    $item
    []
    !OF I@009/0105
    allItems
    :
    I@020/0105
    $allItem
    []
  }
}
{
  !En I@006/0108
  _SimpleKind
  !EL I@020/0108
  Basic
  !EL I@026/0108
  Enum
  !EL I@031/0108
  Internal
  !EL I@040/0108
  Domain
  !EL I@047/0108
  Union
}
{
  !En I@006/0110
  _TypeKind
  :_SimpleKind
  !EL I@031/0110
  Dual
  !EL I@036/0110
  Input
  !EL I@042/0110
  Output
}
{
  !Ou I@008/0112
  _TypeRef
  <
    I@018/0112
    $kind
    :_TypeKind
  >
  :
  I@007/0113
  _Described
  {
    !OF I@009/0114
    typeKind
    :
    I@020/0114
    $kind
    !OF I@009/0115
    typeName
    :
    I@019/0115
    _Identifier
  }
}
{
  !Ou I@008/0118
  _TypeSimple
  |
  I@007/0119
  _TypeRef
  <
    I@016/0119
    _TypeKind.Basic
  >
  I@007/0120
  _TypeRef
  <
    I@016/0120
    _TypeKind.Enum
  >
  I@007/0121
  _TypeRef
  <
    I@016/0121
    _TypeKind.Domain
  >
  I@007/0122
  _TypeRef
  <
    I@016/0122
    _TypeKind.Union
  >
}
{
  !Ou I@008/0124
  _Constant
  |
  I@007/0125
  _Simple
  I@007/0126
  _ConstantList
  I@007/0127
  _ConstantMap
}
{
  !Ou I@008/0130
  _Simple
  |
  I@007/0131
  Boolean
  I@007/0132
  _DomainValue
  <
    I@020/0132
    _DomainKind.Number
    I@039/0132
    Number
  >
  I@007/0133
  _DomainValue
  <
    I@020/0133
    _DomainKind.String
    I@039/0133
    String
  >
  I@007/0134
  _EnumValue
}
{
  !Ou I@008/0137
  _ConstantList
  |
  I@007/0138
  _Constant
  []
}
{
  !Ou I@008/0141
  _ConstantMap
  |
  I@007/0142
  _Constant
  [Simple]
}
{
  !Ou I@008/0145
  _Collections
  |
  I@007/0146
  _Modifier
  <
    I@017/0146
    _ModifierKind.List
  >
  I@007/0147
  _ModifierKeyed
  <
    I@022/0147
    _ModifierKind.Dictionary
  >
  I@007/0148
  _ModifierKeyed
  <
    I@022/0148
    _ModifierKind.TypeParam
  >
}
{
  !Ou I@008/0151
  _ModifierKeyed
  <
    I@024/0151
    $kind
    :_ModifierKind
  >
  :
  I@007/0152
  _Modifier
  <
    I@018/0152
    $kind
  >
  {
    !OF I@009/0153
    by
    :
    I@013/0153
    _TypeSimple
    !OF I@009/0154
    optional
    :
    I@019/0154
    Boolean
  }
}
{
  !Ou I@008/0157
  _Modifiers
  |
  I@007/0158
  _Modifier
  <
    I@017/0158
    _ModifierKind.Optional
  >
  I@007/0159
  _Collections
}
{
  !En I@006/0162
  _ModifierKind
  !EL I@022/0162
  Opt
  [
    Optional
  ]
  !EL I@036/0162
  List
  !EL I@041/0162
  Dict
  [
    Dictionary
  ]
  !EL I@058/0162
  Param
  [
    TypeParam
  ]
}
{
  !Ou I@008/0164
  _Modifier
  <
    I@019/0164
    $kind
    :_ModifierKind
  >
  {
    !OF I@009/0165
    modifierKind
    :
    I@024/0165
    $kind
  }
}
{
  !En I@006/0167
  _DomainKind
  !EL I@020/0167
  Boolean
  !EL I@028/0167
  Enum
  !EL I@033/0167
  Number
  !EL I@040/0167
  String
}
{
  !Ou I@008/0169
  _TypeDomain
  |
  I@007/0170
  _BaseDomain
  <
    I@019/0170
    _DomainKind.Boolean
    I@039/0170
    _DomainTrueFalse
    I@056/0170
    _DomainItemTrueFalse
  >
  I@007/0171
  _BaseDomain
  <
    I@019/0171
    _DomainKind.Enum
    I@036/0171
    _DomainLabel
    I@049/0171
    _DomainItemLabel
  >
  I@007/0172
  _BaseDomain
  <
    I@019/0172
    _DomainKind.Number
    I@038/0172
    _DomainRange
    I@051/0172
    _DomainItemRange
  >
  I@007/0173
  _BaseDomain
  <
    I@019/0173
    _DomainKind.String
    I@038/0173
    _DomainRegex
    I@051/0173
    _DomainItemRegex
  >
}
{
  !Ou I@008/0176
  _DomainRef
  <
    I@020/0176
    $kind
    :_DomainKind
  >
  :
  I@007/0177
  _TypeRef
  <
    I@016/0177
    _TypeKind.Domain
  >
  {
    !OF I@009/0178
    domainKind
    :
    I@022/0178
    $kind
  }
}
{
  !Ou I@008/0181
  _BaseDomain
  <
    I@021/0181
    $domain
    :_DomainKind
    I@041/0181
    $item
    :_BaseDomainItem
    I@063/0181
    $domainItem
    :_DomainItem
  >
  :
  I@007/0182
  _ParentType
  <
    I@019/0182
    _TypeKind.Domain
    I@037/0182
    $item
    I@043/0182
    $domainItem
  >
  {
    !OF I@009/0183
    domainKind
    :
    I@022/0183
    $domain
  }
}
{
  !Du I@006/0186
  _BaseDomainItem
  :
  I@007/0187
  _Described
  {
    !DF I@009/0188
    exclude
    :
    I@018/0188
    Boolean
  }
}
{
  !Ou I@008/0191
  _DomainItem
  <
    I@021/0191
    $item
    :_BaseDomainItem
  >
  :
  I@008/0192
  $item
  {
    !OF I@009/0193
    domain
    :
    I@017/0193
    _Identifier
  }
}
{
  !Ou I@008/0196
  _DomainValue
}