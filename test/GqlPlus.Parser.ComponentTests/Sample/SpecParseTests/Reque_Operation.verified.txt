!Sc I@001/0001
Success
{
  !In I@007/0001
  _Operation
  {
    !IF I@009/0002
    variables
    :
    I@020/0002
    _OpVariable
    []
    !IF I@009/0003
    directives
    :
    I@021/0003
    _OpDirective
    []
    !IF I@009/0004
    fragments
    :
    I@020/0004
    _OpFragment
    []
    !IF I@009/0005
    result
    :
    I@017/0005
    _OpResult
  }
  |
  'Parsed into above fields'
  S@007/0006
  String
}
{
  !In I@007/0009
  _OpVariable
  {
    !IF I@009/0010
    name
    :
    I@015/0010
    _Identifier
    !IF I@009/0011
    type
    :
    I@015/0011
    _Identifier
    ?
    =( !k I@030/0011 Null.null )
    !IF I@009/0012
    modifiers
    :
    I@020/0012
    _Modifier
    []
    !IF I@009/0013
    default
    :
    'Todo: _OpDefault'
    I@037/0013
    String
    ?
    !IF I@009/0014
    directives
    :
    I@021/0014
    _OpDirective
    []
  }
}
{
  !Du I@006/0017
  _OpDirective
  {
    !DF I@009/0018
    name
    :
    I@015/0018
    _Identifier
    !DF I@009/0019
    argument
    :
    'Todo: _OpArgument'
    I@039/0019
    String
    ?
  }
}
{
  !In I@007/0022
  _OpFragment
  {
    !IF I@009/0023
    name
    :
    I@015/0023
    _Identifier
    !IF I@009/0024
    type
    :
    I@015/0024
    _Identifier
    ?
    =( !k I@030/0024 Null.null )
    !IF I@009/0025
    directives
    :
    I@021/0025
    _OpDirective
    []
    !IF I@009/0026
    body
    :
    I@015/0026
    _OpObject
    []
  }
}
{
  !In I@007/0029
  _OpResult
  {
    !IF I@009/0030
    domain
    :
    I@017/0030
    _Identifier
    ?
    =( !k I@032/0030 Null.null )
    !IF I@009/0031
    argument
    :
    'Todo: _OpArgument'
    I@039/0031
    String
    ?
    !IF I@009/0032
    body
    :
    I@015/0032
    _OpObject
    []
  }
}
{
  !En I@006/0035
  _ModifierKind
  !EL I@022/0035
  Opt
  [
    Optional
  ]
  !EL I@036/0035
  List
  !EL I@041/0035
  Dict
  [
    Dictionary
  ]
  !EL I@058/0035
  Param
  [
    TypeParam
  ]
}
{
  !In I@007/0037
  _Modifier
  {
    !IF I@009/0038
    modifierKind
    :
    I@023/0038
    _ModifierKind
    !IF I@009/0039
    by
    :
    I@013/0039
    _Identifier
    ?
    !IF I@009/0040
    optional
    :
    I@019/0040
    Boolean
    ?
  }
}
{
  !In I@007/0043
  _OpObject
  |
  I@009/0044
  _OpField
  I@009/0045
  _OpSpread
  I@009/0046
  _OpInline
}
{
  !In I@007/0049
  _OpField
  {
    !IF I@009/0050
    alias
    :
    I@016/0050
    _Identifier
    ?
    =( !k I@031/0050 Null.null )
    !IF I@009/0051
    field
    :
    I@016/0051
    _Identifier
    !IF I@009/0052
    argument
    :
    'Todo: _OpArgument'
    I@039/0052
    String
    ?
    !IF I@009/0053
    modifiers
    :
    I@020/0053
    _Modifier
    []
    !IF I@009/0054
    directives
    :
    I@021/0054
    _OpDirective
    []
    !IF I@009/0055
    body
    :
    I@015/0055
    _OpObject
    []
  }
}
{
  !In I@007/0058
  _OpInline
  {
    !IF I@009/0059
    type
    :
    I@015/0059
    _Identifier
    ?
    =( !k I@030/0059 Null.null )
    !IF I@009/0060
    directives
    :
    I@021/0060
    _OpDirective
    []
    !IF I@009/0061
    body
    :
    I@015/0061
    _OpObject
    []
  }
}
{
  !Du I@006/0064
  _OpSpread
  {
    !DF I@009/0065
    fragment
    :
    I@019/0065
    _Identifier
    !DF I@009/0066
    directives
    :
    I@021/0066
    _OpDirective
    []
  }
}