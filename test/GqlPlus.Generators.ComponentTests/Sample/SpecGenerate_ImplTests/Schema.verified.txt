/* Schema
"$T?"
dual _Opt<$T:_Any> [Opt] { | $T | Null }

dual _List<$T:_Any> [List] { | $T[] }

dual _Dict<$K:_Key $T:_Any> [Dict] { | $T[$K] }

dual _Map<$T:_Any> [Map] { | $T[*] }

dual _Array<$T:_Any> [Array] { | $T[0] }

dual _IfElse<$T:_Any> [IfElse] { | $T[^] }

dual _Set<$K:_Key> [Set] { | _[$K] }

dual _Mask<$K:_Key> [Mask] { | ^[$K] }

union _Key { }
dual _Any { }
*/

// Generated from Spec Schema for Impl

/*
*/
namespace Components.Gqlp_Spec_Schema;

public class DualCmpt_Opt<TT>
  : ICmpt_Opt<TT>
{
  public TT AsT { get; set; }
  public Null AsNull { get; set; }
}

public class DualCmpt_List<TT>
  : ICmpt_List<TT>
{
  public TT AsT { get; set; }
}

public class DualCmpt_Dict<TK,TT>
  : ICmpt_Dict<TK,TT>
{
  public TT AsT { get; set; }
}

public class DualCmpt_Map<TT>
  : ICmpt_Map<TT>
{
  public TT AsT { get; set; }
}

public class DualCmpt_Array<TT>
  : ICmpt_Array<TT>
{
  public TT AsT { get; set; }
}

public class DualCmpt_IfElse<TT>
  : ICmpt_IfElse<TT>
{
  public TT AsT { get; set; }
}

public class DualCmpt_Set<TK>
  : ICmpt_Set<TK>
{
  public Unit AsUnit { get; set; }
}

public class DualCmpt_Mask<TK>
  : ICmpt_Mask<TK>
{
  public Boolean As^ { get; set; }
}

public class UnionCmpt_Key
  : ICmpt_Key
{
}

public class DualCmpt_Any
  : ICmpt_Any
{
}