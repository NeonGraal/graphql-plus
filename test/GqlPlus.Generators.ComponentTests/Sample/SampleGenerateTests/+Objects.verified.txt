// Generated from Sample +Objects

/*
*/

namespace GqlPlus.Model_Sample_Objects;

public interface IAltDual
{
  AltAltDual AsAltAltDual { get; }
}
public class DualAltDual
  : IAltDual
{
  public AltAltDual AsAltAltDual { get; set; }
}

public interface IAltAltDual
{
  Number alt { get; }
  String AsString { get; }
}
public class DualAltAltDual
  : IAltAltDual
{
  public Number alt { get; set; }
  public String AsString { get; set; }
}

public interface IAltInp
{
  AltAltInp AsAltAltInp { get; }
}
public class InputAltInp
  : IAltInp
{
  public AltAltInp AsAltAltInp { get; set; }
}

public interface IAltAltInp
{
  Number alt { get; }
  String AsString { get; }
}
public class InputAltAltInp
  : IAltAltInp
{
  public Number alt { get; set; }
  public String AsString { get; set; }
}

public interface IAltOutp
{
  AltAltOutp AsAltAltOutp { get; }
}
public class OutputAltOutp
  : IAltOutp
{
  public AltAltOutp AsAltAltOutp { get; set; }
}

public interface IAltAltOutp
{
  Number alt { get; }
  String AsString { get; }
}
public class OutputAltAltOutp
  : IAltAltOutp
{
  public Number alt { get; set; }
  public String AsString { get; set; }
}

public interface IAltDescrDual
{
  String AsString { get; }
}
public class DualAltDescrDual
  : IAltDescrDual
{
  public String AsString { get; set; }
}

public interface IAltDescrInp
{
  String AsString { get; }
}
public class InputAltDescrInp
  : IAltDescrInp
{
  public String AsString { get; set; }
}

public interface IAltDescrOutp
{
  String AsString { get; }
}
public class OutputAltDescrOutp
  : IAltDescrOutp
{
  public String AsString { get; set; }
}

public interface IAltDualDual
{
  ObjDualAltDualDual AsObjDualAltDualDual { get; }
}
public class DualAltDualDual
  : IAltDualDual
{
  public ObjDualAltDualDual AsObjDualAltDualDual { get; set; }
}

public interface IObjDualAltDualDual
{
  Number alt { get; }
  String AsString { get; }
}
public class DualObjDualAltDualDual
  : IObjDualAltDualDual
{
  public Number alt { get; set; }
  public String AsString { get; set; }
}

public interface IAltDualInp
{
  ObjDualAltDualInp AsObjDualAltDualInp { get; }
}
public class InputAltDualInp
  : IAltDualInp
{
  public ObjDualAltDualInp AsObjDualAltDualInp { get; set; }
}

public interface IObjDualAltDualInp
{
  Number alt { get; }
  String AsString { get; }
}
public class DualObjDualAltDualInp
  : IObjDualAltDualInp
{
  public Number alt { get; set; }
  public String AsString { get; set; }
}

public interface IAltDualOutp
{
  ObjDualAltDualOutp AsObjDualAltDualOutp { get; }
}
public class OutputAltDualOutp
  : IAltDualOutp
{
  public ObjDualAltDualOutp AsObjDualAltDualOutp { get; set; }
}

public interface IObjDualAltDualOutp
{
  Number alt { get; }
  String AsString { get; }
}
public class DualObjDualAltDualOutp
  : IObjDualAltDualOutp
{
  public Number alt { get; set; }
  public String AsString { get; set; }
}

public interface IAltModBoolDual
{
  AltAltModBoolDual AsAltAltModBoolDual { get; }
}
public class DualAltModBoolDual
  : IAltModBoolDual
{
  public AltAltModBoolDual AsAltAltModBoolDual { get; set; }
}

public interface IAltAltModBoolDual
{
  Number alt { get; }
  String AsString { get; }
}
public class DualAltAltModBoolDual
  : IAltAltModBoolDual
{
  public Number alt { get; set; }
  public String AsString { get; set; }
}

public interface IAltModBoolInp
{
  AltAltModBoolInp AsAltAltModBoolInp { get; }
}
public class InputAltModBoolInp
  : IAltModBoolInp
{
  public AltAltModBoolInp AsAltAltModBoolInp { get; set; }
}

public interface IAltAltModBoolInp
{
  Number alt { get; }
  String AsString { get; }
}
public class InputAltAltModBoolInp
  : IAltAltModBoolInp
{
  public Number alt { get; set; }
  public String AsString { get; set; }
}

public interface IAltModBoolOutp
{
  AltAltModBoolOutp AsAltAltModBoolOutp { get; }
}
public class OutputAltModBoolOutp
  : IAltModBoolOutp
{
  public AltAltModBoolOutp AsAltAltModBoolOutp { get; set; }
}

public interface IAltAltModBoolOutp
{
  Number alt { get; }
  String AsString { get; }
}
public class OutputAltAltModBoolOutp
  : IAltAltModBoolOutp
{
  public Number alt { get; set; }
  public String AsString { get; set; }
}

public interface IAltModParamDual<Tmod>
{
  AltAltModParamDual AsAltAltModParamDual { get; }
}
public class DualAltModParamDual<Tmod>
  : IAltModParamDual<Tmod>
{
  public AltAltModParamDual AsAltAltModParamDual { get; set; }
}

public interface IAltAltModParamDual
{
  Number alt { get; }
  String AsString { get; }
}
public class DualAltAltModParamDual
  : IAltAltModParamDual
{
  public Number alt { get; set; }
  public String AsString { get; set; }
}

public interface IAltModParamInp<Tmod>
{
  AltAltModParamInp AsAltAltModParamInp { get; }
}
public class InputAltModParamInp<Tmod>
  : IAltModParamInp<Tmod>
{
  public AltAltModParamInp AsAltAltModParamInp { get; set; }
}

public interface IAltAltModParamInp
{
  Number alt { get; }
  String AsString { get; }
}
public class InputAltAltModParamInp
  : IAltAltModParamInp
{
  public Number alt { get; set; }
  public String AsString { get; set; }
}

public interface IAltModParamOutp<Tmod>
{
  AltAltModParamOutp AsAltAltModParamOutp { get; }
}
public class OutputAltModParamOutp<Tmod>
  : IAltModParamOutp<Tmod>
{
  public AltAltModParamOutp AsAltAltModParamOutp { get; set; }
}

public interface IAltAltModParamOutp
{
  Number alt { get; }
  String AsString { get; }
}
public class OutputAltAltModParamOutp
  : IAltAltModParamOutp
{
  public Number alt { get; set; }
  public String AsString { get; set; }
}

public interface IAltSmplDual
{
  String AsString { get; }
}
public class DualAltSmplDual
  : IAltSmplDual
{
  public String AsString { get; set; }
}

public interface IAltSmplInp
{
  String AsString { get; }
}
public class InputAltSmplInp
  : IAltSmplInp
{
  public String AsString { get; set; }
}

public interface IAltSmplOutp
{
  String AsString { get; }
}
public class OutputAltSmplOutp
  : IAltSmplOutp
{
  public String AsString { get; set; }
}

public interface ICnstAltDual<Ttype>
{
  Ttype Astype { get; }
}
public class DualCnstAltDual<Ttype>
  : ICnstAltDual<Ttype>
{
  public Ttype Astype { get; set; }
}

public interface ICnstAltInp<Ttype>
{
  Ttype Astype { get; }
}
public class InputCnstAltInp<Ttype>
  : ICnstAltInp<Ttype>
{
  public Ttype Astype { get; set; }
}

public interface ICnstAltOutp<Ttype>
{
  Ttype Astype { get; }
}
public class OutputCnstAltOutp<Ttype>
  : ICnstAltOutp<Ttype>
{
  public Ttype Astype { get; set; }
}

public interface ICnstAltDmnDual
{
  RefCnstAltDmnDual<DomCnstAltDmnDual> AsRefCnstAltDmnDual { get; }
}
public class DualCnstAltDmnDual
  : ICnstAltDmnDual
{
  public RefCnstAltDmnDual<DomCnstAltDmnDual> AsRefCnstAltDmnDual { get; set; }
}

public interface IRefCnstAltDmnDual<Tref>
{
  Tref Asref { get; }
}
public class DualRefCnstAltDmnDual<Tref>
  : IRefCnstAltDmnDual<Tref>
{
  public Tref Asref { get; set; }
}

public interface IDomCnstAltDmnDual
{
}
public class DomainDomCnstAltDmnDual
  : IDomCnstAltDmnDual
{
}

public interface ICnstAltDmnInp
{
  RefCnstAltDmnInp<DomCnstAltDmnInp> AsRefCnstAltDmnInp { get; }
}
public class InputCnstAltDmnInp
  : ICnstAltDmnInp
{
  public RefCnstAltDmnInp<DomCnstAltDmnInp> AsRefCnstAltDmnInp { get; set; }
}

public interface IRefCnstAltDmnInp<Tref>
{
  Tref Asref { get; }
}
public class InputRefCnstAltDmnInp<Tref>
  : IRefCnstAltDmnInp<Tref>
{
  public Tref Asref { get; set; }
}

public interface IDomCnstAltDmnInp
{
}
public class DomainDomCnstAltDmnInp
  : IDomCnstAltDmnInp
{
}

public interface ICnstAltDmnOutp
{
  RefCnstAltDmnOutp<DomCnstAltDmnOutp> AsRefCnstAltDmnOutp { get; }
}
public class OutputCnstAltDmnOutp
  : ICnstAltDmnOutp
{
  public RefCnstAltDmnOutp<DomCnstAltDmnOutp> AsRefCnstAltDmnOutp { get; set; }
}

public interface IRefCnstAltDmnOutp<Tref>
{
  Tref Asref { get; }
}
public class OutputRefCnstAltDmnOutp<Tref>
  : IRefCnstAltDmnOutp<Tref>
{
  public Tref Asref { get; set; }
}

public interface IDomCnstAltDmnOutp
{
}
public class DomainDomCnstAltDmnOutp
  : IDomCnstAltDmnOutp
{
}

public interface ICnstAltDualDual
{
  RefCnstAltDualDual<AltCnstAltDualDual> AsRefCnstAltDualDual { get; }
}
public class DualCnstAltDualDual
  : ICnstAltDualDual
{
  public RefCnstAltDualDual<AltCnstAltDualDual> AsRefCnstAltDualDual { get; set; }
}

public interface IRefCnstAltDualDual<Tref>
{
  Tref Asref { get; }
}
public class DualRefCnstAltDualDual<Tref>
  : IRefCnstAltDualDual<Tref>
{
  public Tref Asref { get; set; }
}

public interface IPrntCnstAltDualDual
{
  String AsString { get; }
}
public class DualPrntCnstAltDualDual
  : IPrntCnstAltDualDual
{
  public String AsString { get; set; }
}

public interface IAltCnstAltDualDual
  : IPrntCnstAltDualDual
{
  Number alt { get; }
}
public class DualAltCnstAltDualDual
  : DualPrntCnstAltDualDual
  , IAltCnstAltDualDual
{
  public Number alt { get; set; }
}

public interface ICnstAltDualInp
{
  RefCnstAltDualInp<AltCnstAltDualInp> AsRefCnstAltDualInp { get; }
}
public class InputCnstAltDualInp
  : ICnstAltDualInp
{
  public RefCnstAltDualInp<AltCnstAltDualInp> AsRefCnstAltDualInp { get; set; }
}

public interface IRefCnstAltDualInp<Tref>
{
  Tref Asref { get; }
}
public class InputRefCnstAltDualInp<Tref>
  : IRefCnstAltDualInp<Tref>
{
  public Tref Asref { get; set; }
}

public interface IPrntCnstAltDualInp
{
  String AsString { get; }
}
public class DualPrntCnstAltDualInp
  : IPrntCnstAltDualInp
{
  public String AsString { get; set; }
}

public interface IAltCnstAltDualInp
  : IPrntCnstAltDualInp
{
  Number alt { get; }
}
public class InputAltCnstAltDualInp
  : InputPrntCnstAltDualInp
  , IAltCnstAltDualInp
{
  public Number alt { get; set; }
}

public interface ICnstAltDualOutp
{
  RefCnstAltDualOutp<AltCnstAltDualOutp> AsRefCnstAltDualOutp { get; }
}
public class OutputCnstAltDualOutp
  : ICnstAltDualOutp
{
  public RefCnstAltDualOutp<AltCnstAltDualOutp> AsRefCnstAltDualOutp { get; set; }
}

public interface IRefCnstAltDualOutp<Tref>
{
  Tref Asref { get; }
}
public class OutputRefCnstAltDualOutp<Tref>
  : IRefCnstAltDualOutp<Tref>
{
  public Tref Asref { get; set; }
}

public interface IPrntCnstAltDualOutp
{
  String AsString { get; }
}
public class DualPrntCnstAltDualOutp
  : IPrntCnstAltDualOutp
{
  public String AsString { get; set; }
}

public interface IAltCnstAltDualOutp
  : IPrntCnstAltDualOutp
{
  Number alt { get; }
}
public class OutputAltCnstAltDualOutp
  : OutputPrntCnstAltDualOutp
  , IAltCnstAltDualOutp
{
  public Number alt { get; set; }
}

public interface ICnstAltObjDual
{
  RefCnstAltObjDual<AltCnstAltObjDual> AsRefCnstAltObjDual { get; }
}
public class DualCnstAltObjDual
  : ICnstAltObjDual
{
  public RefCnstAltObjDual<AltCnstAltObjDual> AsRefCnstAltObjDual { get; set; }
}

public interface IRefCnstAltObjDual<Tref>
{
  Tref Asref { get; }
}
public class DualRefCnstAltObjDual<Tref>
  : IRefCnstAltObjDual<Tref>
{
  public Tref Asref { get; set; }
}

public interface IPrntCnstAltObjDual
{
  String AsString { get; }
}
public class DualPrntCnstAltObjDual
  : IPrntCnstAltObjDual
{
  public String AsString { get; set; }
}

public interface IAltCnstAltObjDual
  : IPrntCnstAltObjDual
{
  Number alt { get; }
}
public class DualAltCnstAltObjDual
  : DualPrntCnstAltObjDual
  , IAltCnstAltObjDual
{
  public Number alt { get; set; }
}

public interface ICnstAltObjInp
{
  RefCnstAltObjInp<AltCnstAltObjInp> AsRefCnstAltObjInp { get; }
}
public class InputCnstAltObjInp
  : ICnstAltObjInp
{
  public RefCnstAltObjInp<AltCnstAltObjInp> AsRefCnstAltObjInp { get; set; }
}

public interface IRefCnstAltObjInp<Tref>
{
  Tref Asref { get; }
}
public class InputRefCnstAltObjInp<Tref>
  : IRefCnstAltObjInp<Tref>
{
  public Tref Asref { get; set; }
}

public interface IPrntCnstAltObjInp
{
  String AsString { get; }
}
public class InputPrntCnstAltObjInp
  : IPrntCnstAltObjInp
{
  public String AsString { get; set; }
}

public interface IAltCnstAltObjInp
  : IPrntCnstAltObjInp
{
  Number alt { get; }
}
public class InputAltCnstAltObjInp
  : InputPrntCnstAltObjInp
  , IAltCnstAltObjInp
{
  public Number alt { get; set; }
}

public interface ICnstAltObjOutp
{
  RefCnstAltObjOutp<AltCnstAltObjOutp> AsRefCnstAltObjOutp { get; }
}
public class OutputCnstAltObjOutp
  : ICnstAltObjOutp
{
  public RefCnstAltObjOutp<AltCnstAltObjOutp> AsRefCnstAltObjOutp { get; set; }
}

public interface IRefCnstAltObjOutp<Tref>
{
  Tref Asref { get; }
}
public class OutputRefCnstAltObjOutp<Tref>
  : IRefCnstAltObjOutp<Tref>
{
  public Tref Asref { get; set; }
}

public interface IPrntCnstAltObjOutp
{
  String AsString { get; }
}
public class OutputPrntCnstAltObjOutp
  : IPrntCnstAltObjOutp
{
  public String AsString { get; set; }
}

public interface IAltCnstAltObjOutp
  : IPrntCnstAltObjOutp
{
  Number alt { get; }
}
public class OutputAltCnstAltObjOutp
  : OutputPrntCnstAltObjOutp
  , IAltCnstAltObjOutp
{
  public Number alt { get; set; }
}

public interface ICnstFieldDmnDual
  : IRefCnstFieldDmnDual
{
}
public class DualCnstFieldDmnDual
  : DualRefCnstFieldDmnDual
  , ICnstFieldDmnDual
{
}

public interface IRefCnstFieldDmnDual<Tref>
{
  Tref field { get; }
}
public class DualRefCnstFieldDmnDual<Tref>
  : IRefCnstFieldDmnDual<Tref>
{
  public Tref field { get; set; }
}

public interface IDomCnstFieldDmnDual
{
}
public class DomainDomCnstFieldDmnDual
  : IDomCnstFieldDmnDual
{
}

public interface ICnstFieldDmnInp
  : IRefCnstFieldDmnInp
{
}
public class InputCnstFieldDmnInp
  : InputRefCnstFieldDmnInp
  , ICnstFieldDmnInp
{
}

public interface IRefCnstFieldDmnInp<Tref>
{
  Tref field { get; }
}
public class InputRefCnstFieldDmnInp<Tref>
  : IRefCnstFieldDmnInp<Tref>
{
  public Tref field { get; set; }
}

public interface IDomCnstFieldDmnInp
{
}
public class DomainDomCnstFieldDmnInp
  : IDomCnstFieldDmnInp
{
}

public interface ICnstFieldDmnOutp
  : IRefCnstFieldDmnOutp
{
}
public class OutputCnstFieldDmnOutp
  : OutputRefCnstFieldDmnOutp
  , ICnstFieldDmnOutp
{
}

public interface IRefCnstFieldDmnOutp<Tref>
{
  Tref field { get; }
}
public class OutputRefCnstFieldDmnOutp<Tref>
  : IRefCnstFieldDmnOutp<Tref>
{
  public Tref field { get; set; }
}

public interface IDomCnstFieldDmnOutp
{
}
public class DomainDomCnstFieldDmnOutp
  : IDomCnstFieldDmnOutp
{
}

public interface ICnstFieldDualDual
  : IRefCnstFieldDualDual
{
}
public class DualCnstFieldDualDual
  : DualRefCnstFieldDualDual
  , ICnstFieldDualDual
{
}

public interface IRefCnstFieldDualDual<Tref>
{
  Tref field { get; }
}
public class DualRefCnstFieldDualDual<Tref>
  : IRefCnstFieldDualDual<Tref>
{
  public Tref field { get; set; }
}

public interface IPrntCnstFieldDualDual
{
  String AsString { get; }
}
public class DualPrntCnstFieldDualDual
  : IPrntCnstFieldDualDual
{
  public String AsString { get; set; }
}

public interface IAltCnstFieldDualDual
  : IPrntCnstFieldDualDual
{
  Number alt { get; }
}
public class DualAltCnstFieldDualDual
  : DualPrntCnstFieldDualDual
  , IAltCnstFieldDualDual
{
  public Number alt { get; set; }
}

public interface ICnstFieldDualInp
  : IRefCnstFieldDualInp
{
}
public class InputCnstFieldDualInp
  : InputRefCnstFieldDualInp
  , ICnstFieldDualInp
{
}

public interface IRefCnstFieldDualInp<Tref>
{
  Tref field { get; }
}
public class InputRefCnstFieldDualInp<Tref>
  : IRefCnstFieldDualInp<Tref>
{
  public Tref field { get; set; }
}

public interface IPrntCnstFieldDualInp
{
  String AsString { get; }
}
public class DualPrntCnstFieldDualInp
  : IPrntCnstFieldDualInp
{
  public String AsString { get; set; }
}

public interface IAltCnstFieldDualInp
  : IPrntCnstFieldDualInp
{
  Number alt { get; }
}
public class InputAltCnstFieldDualInp
  : InputPrntCnstFieldDualInp
  , IAltCnstFieldDualInp
{
  public Number alt { get; set; }
}

public interface ICnstFieldDualOutp
  : IRefCnstFieldDualOutp
{
}
public class OutputCnstFieldDualOutp
  : OutputRefCnstFieldDualOutp
  , ICnstFieldDualOutp
{
}

public interface IRefCnstFieldDualOutp<Tref>
{
  Tref field { get; }
}
public class OutputRefCnstFieldDualOutp<Tref>
  : IRefCnstFieldDualOutp<Tref>
{
  public Tref field { get; set; }
}

public interface IPrntCnstFieldDualOutp
{
  String AsString { get; }
}
public class DualPrntCnstFieldDualOutp
  : IPrntCnstFieldDualOutp
{
  public String AsString { get; set; }
}

public interface IAltCnstFieldDualOutp
  : IPrntCnstFieldDualOutp
{
  Number alt { get; }
}
public class OutputAltCnstFieldDualOutp
  : OutputPrntCnstFieldDualOutp
  , IAltCnstFieldDualOutp
{
  public Number alt { get; set; }
}

public interface ICnstFieldObjDual
  : IRefCnstFieldObjDual
{
}
public class DualCnstFieldObjDual
  : DualRefCnstFieldObjDual
  , ICnstFieldObjDual
{
}

public interface IRefCnstFieldObjDual<Tref>
{
  Tref field { get; }
}
public class DualRefCnstFieldObjDual<Tref>
  : IRefCnstFieldObjDual<Tref>
{
  public Tref field { get; set; }
}

public interface IPrntCnstFieldObjDual
{
  String AsString { get; }
}
public class DualPrntCnstFieldObjDual
  : IPrntCnstFieldObjDual
{
  public String AsString { get; set; }
}

public interface IAltCnstFieldObjDual
  : IPrntCnstFieldObjDual
{
  Number alt { get; }
}
public class DualAltCnstFieldObjDual
  : DualPrntCnstFieldObjDual
  , IAltCnstFieldObjDual
{
  public Number alt { get; set; }
}

public interface ICnstFieldObjInp
  : IRefCnstFieldObjInp
{
}
public class InputCnstFieldObjInp
  : InputRefCnstFieldObjInp
  , ICnstFieldObjInp
{
}

public interface IRefCnstFieldObjInp<Tref>
{
  Tref field { get; }
}
public class InputRefCnstFieldObjInp<Tref>
  : IRefCnstFieldObjInp<Tref>
{
  public Tref field { get; set; }
}

public interface IPrntCnstFieldObjInp
{
  String AsString { get; }
}
public class InputPrntCnstFieldObjInp
  : IPrntCnstFieldObjInp
{
  public String AsString { get; set; }
}

public interface IAltCnstFieldObjInp
  : IPrntCnstFieldObjInp
{
  Number alt { get; }
}
public class InputAltCnstFieldObjInp
  : InputPrntCnstFieldObjInp
  , IAltCnstFieldObjInp
{
  public Number alt { get; set; }
}

public interface ICnstFieldObjOutp
  : IRefCnstFieldObjOutp
{
}
public class OutputCnstFieldObjOutp
  : OutputRefCnstFieldObjOutp
  , ICnstFieldObjOutp
{
}

public interface IRefCnstFieldObjOutp<Tref>
{
  Tref field { get; }
}
public class OutputRefCnstFieldObjOutp<Tref>
  : IRefCnstFieldObjOutp<Tref>
{
  public Tref field { get; set; }
}

public interface IPrntCnstFieldObjOutp
{
  String AsString { get; }
}
public class OutputPrntCnstFieldObjOutp
  : IPrntCnstFieldObjOutp
{
  public String AsString { get; set; }
}

public interface IAltCnstFieldObjOutp
  : IPrntCnstFieldObjOutp
{
  Number alt { get; }
}
public class OutputAltCnstFieldObjOutp
  : OutputPrntCnstFieldObjOutp
  , IAltCnstFieldObjOutp
{
  public Number alt { get; set; }
}

public interface ICnstPrntDualPrntDual
  : IRefCnstPrntDualPrntDual
{
}
public class DualCnstPrntDualPrntDual
  : DualRefCnstPrntDualPrntDual
  , ICnstPrntDualPrntDual
{
}

public interface IRefCnstPrntDualPrntDual<Tref>
  : Iref
{
}
public class DualRefCnstPrntDualPrntDual<Tref>
  : Dualref
  , IRefCnstPrntDualPrntDual<Tref>
{
}

public interface IPrntCnstPrntDualPrntDual
{
  String AsString { get; }
}
public class DualPrntCnstPrntDualPrntDual
  : IPrntCnstPrntDualPrntDual
{
  public String AsString { get; set; }
}

public interface IAltCnstPrntDualPrntDual
  : IPrntCnstPrntDualPrntDual
{
  Number alt { get; }
}
public class DualAltCnstPrntDualPrntDual
  : DualPrntCnstPrntDualPrntDual
  , IAltCnstPrntDualPrntDual
{
  public Number alt { get; set; }
}

public interface ICnstPrntDualPrntInp
  : IRefCnstPrntDualPrntInp
{
}
public class InputCnstPrntDualPrntInp
  : InputRefCnstPrntDualPrntInp
  , ICnstPrntDualPrntInp
{
}

public interface IRefCnstPrntDualPrntInp<Tref>
  : Iref
{
}
public class InputRefCnstPrntDualPrntInp<Tref>
  : Inputref
  , IRefCnstPrntDualPrntInp<Tref>
{
}

public interface IPrntCnstPrntDualPrntInp
{
  String AsString { get; }
}
public class DualPrntCnstPrntDualPrntInp
  : IPrntCnstPrntDualPrntInp
{
  public String AsString { get; set; }
}

public interface IAltCnstPrntDualPrntInp
  : IPrntCnstPrntDualPrntInp
{
  Number alt { get; }
}
public class InputAltCnstPrntDualPrntInp
  : InputPrntCnstPrntDualPrntInp
  , IAltCnstPrntDualPrntInp
{
  public Number alt { get; set; }
}

public interface ICnstPrntDualPrntOutp
  : IRefCnstPrntDualPrntOutp
{
}
public class OutputCnstPrntDualPrntOutp
  : OutputRefCnstPrntDualPrntOutp
  , ICnstPrntDualPrntOutp
{
}

public interface IRefCnstPrntDualPrntOutp<Tref>
  : Iref
{
}
public class OutputRefCnstPrntDualPrntOutp<Tref>
  : Outputref
  , IRefCnstPrntDualPrntOutp<Tref>
{
}

public interface IPrntCnstPrntDualPrntOutp
{
  String AsString { get; }
}
public class DualPrntCnstPrntDualPrntOutp
  : IPrntCnstPrntDualPrntOutp
{
  public String AsString { get; set; }
}

public interface IAltCnstPrntDualPrntOutp
  : IPrntCnstPrntDualPrntOutp
{
  Number alt { get; }
}
public class OutputAltCnstPrntDualPrntOutp
  : OutputPrntCnstPrntDualPrntOutp
  , IAltCnstPrntDualPrntOutp
{
  public Number alt { get; set; }
}

public interface ICnstPrntObjPrntDual
  : IRefCnstPrntObjPrntDual
{
}
public class DualCnstPrntObjPrntDual
  : DualRefCnstPrntObjPrntDual
  , ICnstPrntObjPrntDual
{
}

public interface IRefCnstPrntObjPrntDual<Tref>
  : Iref
{
}
public class DualRefCnstPrntObjPrntDual<Tref>
  : Dualref
  , IRefCnstPrntObjPrntDual<Tref>
{
}

public interface IPrntCnstPrntObjPrntDual
{
  String AsString { get; }
}
public class DualPrntCnstPrntObjPrntDual
  : IPrntCnstPrntObjPrntDual
{
  public String AsString { get; set; }
}

public interface IAltCnstPrntObjPrntDual
  : IPrntCnstPrntObjPrntDual
{
  Number alt { get; }
}
public class DualAltCnstPrntObjPrntDual
  : DualPrntCnstPrntObjPrntDual
  , IAltCnstPrntObjPrntDual
{
  public Number alt { get; set; }
}

public interface ICnstPrntObjPrntInp
  : IRefCnstPrntObjPrntInp
{
}
public class InputCnstPrntObjPrntInp
  : InputRefCnstPrntObjPrntInp
  , ICnstPrntObjPrntInp
{
}

public interface IRefCnstPrntObjPrntInp<Tref>
  : Iref
{
}
public class InputRefCnstPrntObjPrntInp<Tref>
  : Inputref
  , IRefCnstPrntObjPrntInp<Tref>
{
}

public interface IPrntCnstPrntObjPrntInp
{
  String AsString { get; }
}
public class InputPrntCnstPrntObjPrntInp
  : IPrntCnstPrntObjPrntInp
{
  public String AsString { get; set; }
}

public interface IAltCnstPrntObjPrntInp
  : IPrntCnstPrntObjPrntInp
{
  Number alt { get; }
}
public class InputAltCnstPrntObjPrntInp
  : InputPrntCnstPrntObjPrntInp
  , IAltCnstPrntObjPrntInp
{
  public Number alt { get; set; }
}

public interface ICnstPrntObjPrntOutp
  : IRefCnstPrntObjPrntOutp
{
}
public class OutputCnstPrntObjPrntOutp
  : OutputRefCnstPrntObjPrntOutp
  , ICnstPrntObjPrntOutp
{
}

public interface IRefCnstPrntObjPrntOutp<Tref>
  : Iref
{
}
public class OutputRefCnstPrntObjPrntOutp<Tref>
  : Outputref
  , IRefCnstPrntObjPrntOutp<Tref>
{
}

public interface IPrntCnstPrntObjPrntOutp
{
  String AsString { get; }
}
public class OutputPrntCnstPrntObjPrntOutp
  : IPrntCnstPrntObjPrntOutp
{
  public String AsString { get; set; }
}

public interface IAltCnstPrntObjPrntOutp
  : IPrntCnstPrntObjPrntOutp
{
  Number alt { get; }
}
public class OutputAltCnstPrntObjPrntOutp
  : OutputPrntCnstPrntObjPrntOutp
  , IAltCnstPrntObjPrntOutp
{
  public Number alt { get; set; }
}

public interface IFieldDual
{
  String field { get; }
}
public class DualFieldDual
  : IFieldDual
{
  public String field { get; set; }
}

public interface IFieldInp
{
  String field { get; }
}
public class InputFieldInp
  : IFieldInp
{
  public String field { get; set; }
}

public interface IFieldOutp
{
  String field { get; }
}
public class OutputFieldOutp
  : IFieldOutp
{
  public String field { get; set; }
}

public interface IFieldDescrDual
{
  String field { get; }
}
public class DualFieldDescrDual
  : IFieldDescrDual
{
  public String field { get; set; }
}

public interface IFieldDescrInp
{
  String field { get; }
}
public class InputFieldDescrInp
  : IFieldDescrInp
{
  public String field { get; set; }
}

public interface IFieldDescrOutp
{
  String field { get; }
}
public class OutputFieldDescrOutp
  : IFieldDescrOutp
{
  public String field { get; set; }
}

public interface IFieldDualDual
{
  FldFieldDualDual field { get; }
}
public class DualFieldDualDual
  : IFieldDualDual
{
  public FldFieldDualDual field { get; set; }
}

public interface IFldFieldDualDual
{
  Number field { get; }
  String AsString { get; }
}
public class DualFldFieldDualDual
  : IFldFieldDualDual
{
  public Number field { get; set; }
  public String AsString { get; set; }
}

public interface IFieldDualInp
{
  FldFieldDualInp field { get; }
}
public class InputFieldDualInp
  : IFieldDualInp
{
  public FldFieldDualInp field { get; set; }
}

public interface IFldFieldDualInp
{
  Number field { get; }
  String AsString { get; }
}
public class DualFldFieldDualInp
  : IFldFieldDualInp
{
  public Number field { get; set; }
  public String AsString { get; set; }
}

public interface IFieldDualOutp
{
  FldFieldDualOutp field { get; }
}
public class OutputFieldDualOutp
  : IFieldDualOutp
{
  public FldFieldDualOutp field { get; set; }
}

public interface IFldFieldDualOutp
{
  Number field { get; }
  String AsString { get; }
}
public class DualFldFieldDualOutp
  : IFldFieldDualOutp
{
  public Number field { get; set; }
  public String AsString { get; set; }
}

public interface IFieldModEnumDual
{
  String field { get; }
}
public class DualFieldModEnumDual
  : IFieldModEnumDual
{
  public String field { get; set; }
}

public enum EnumFieldModEnumDual
{
  value,
}

public interface IFieldModEnumInp
{
  String field { get; }
}
public class InputFieldModEnumInp
  : IFieldModEnumInp
{
  public String field { get; set; }
}

public enum EnumFieldModEnumInp
{
  value,
}

public interface IFieldModEnumOutp
{
  String field { get; }
}
public class OutputFieldModEnumOutp
  : IFieldModEnumOutp
{
  public String field { get; set; }
}

public enum EnumFieldModEnumOutp
{
  value,
}

public interface IFieldModParamDual<Tmod>
{
  FldFieldModParamDual field { get; }
}
public class DualFieldModParamDual<Tmod>
  : IFieldModParamDual<Tmod>
{
  public FldFieldModParamDual field { get; set; }
}

public interface IFldFieldModParamDual
{
  Number field { get; }
  String AsString { get; }
}
public class DualFldFieldModParamDual
  : IFldFieldModParamDual
{
  public Number field { get; set; }
  public String AsString { get; set; }
}

public interface IFieldModParamInp<Tmod>
{
  FldFieldModParamInp field { get; }
}
public class InputFieldModParamInp<Tmod>
  : IFieldModParamInp<Tmod>
{
  public FldFieldModParamInp field { get; set; }
}

public interface IFldFieldModParamInp
{
  Number field { get; }
  String AsString { get; }
}
public class InputFldFieldModParamInp
  : IFldFieldModParamInp
{
  public Number field { get; set; }
  public String AsString { get; set; }
}

public interface IFieldModParamOutp<Tmod>
{
  FldFieldModParamOutp field { get; }
}
public class OutputFieldModParamOutp<Tmod>
  : IFieldModParamOutp<Tmod>
{
  public FldFieldModParamOutp field { get; set; }
}

public interface IFldFieldModParamOutp
{
  Number field { get; }
  String AsString { get; }
}
public class OutputFldFieldModParamOutp
  : IFldFieldModParamOutp
{
  public Number field { get; set; }
  public String AsString { get; set; }
}

public interface IFieldObjDual
{
  FldFieldObjDual field { get; }
}
public class DualFieldObjDual
  : IFieldObjDual
{
  public FldFieldObjDual field { get; set; }
}

public interface IFldFieldObjDual
{
  Number field { get; }
  String AsString { get; }
}
public class DualFldFieldObjDual
  : IFldFieldObjDual
{
  public Number field { get; set; }
  public String AsString { get; set; }
}

public interface IFieldObjInp
{
  FldFieldObjInp field { get; }
}
public class InputFieldObjInp
  : IFieldObjInp
{
  public FldFieldObjInp field { get; set; }
}

public interface IFldFieldObjInp
{
  Number field { get; }
  String AsString { get; }
}
public class InputFldFieldObjInp
  : IFldFieldObjInp
{
  public Number field { get; set; }
  public String AsString { get; set; }
}

public interface IFieldObjOutp
{
  FldFieldObjOutp field { get; }
}
public class OutputFieldObjOutp
  : IFieldObjOutp
{
  public FldFieldObjOutp field { get; set; }
}

public interface IFldFieldObjOutp
{
  Number field { get; }
  String AsString { get; }
}
public class OutputFldFieldObjOutp
  : IFldFieldObjOutp
{
  public Number field { get; set; }
  public String AsString { get; set; }
}

public interface IFieldSmplDual
{
  Number field { get; }
}
public class DualFieldSmplDual
  : IFieldSmplDual
{
  public Number field { get; set; }
}

public interface IFieldSmplInp
{
  Number field { get; }
}
public class InputFieldSmplInp
  : IFieldSmplInp
{
  public Number field { get; set; }
}

public interface IFieldSmplOutp
{
  Number field { get; }
}
public class OutputFieldSmplOutp
  : IFieldSmplOutp
{
  public Number field { get; set; }
}

public interface IFieldTypeDescrDual
{
  Number field { get; }
}
public class DualFieldTypeDescrDual
  : IFieldTypeDescrDual
{
  public Number field { get; set; }
}

public interface IFieldTypeDescrInp
{
  Number field { get; }
}
public class InputFieldTypeDescrInp
  : IFieldTypeDescrInp
{
  public Number field { get; set; }
}

public interface IFieldTypeDescrOutp
{
  Number field { get; }
}
public class OutputFieldTypeDescrOutp
  : IFieldTypeDescrOutp
{
  public Number field { get; set; }
}

public interface IGnrcAltDual<Ttype>
{
  Ttype Astype { get; }
}
public class DualGnrcAltDual<Ttype>
  : IGnrcAltDual<Ttype>
{
  public Ttype Astype { get; set; }
}

public interface IGnrcAltInp<Ttype>
{
  Ttype Astype { get; }
}
public class InputGnrcAltInp<Ttype>
  : IGnrcAltInp<Ttype>
{
  public Ttype Astype { get; set; }
}

public interface IGnrcAltOutp<Ttype>
{
  Ttype Astype { get; }
}
public class OutputGnrcAltOutp<Ttype>
  : IGnrcAltOutp<Ttype>
{
  public Ttype Astype { get; set; }
}

public interface IGnrcAltArgDual<Ttype>
{
  RefGnrcAltArgDual<Ttype> AsRefGnrcAltArgDual { get; }
}
public class DualGnrcAltArgDual<Ttype>
  : IGnrcAltArgDual<Ttype>
{
  public RefGnrcAltArgDual<Ttype> AsRefGnrcAltArgDual { get; set; }
}

public interface IRefGnrcAltArgDual<Tref>
{
  Tref Asref { get; }
}
public class DualRefGnrcAltArgDual<Tref>
  : IRefGnrcAltArgDual<Tref>
{
  public Tref Asref { get; set; }
}

public interface IGnrcAltArgInp<Ttype>
{
  RefGnrcAltArgInp<Ttype> AsRefGnrcAltArgInp { get; }
}
public class InputGnrcAltArgInp<Ttype>
  : IGnrcAltArgInp<Ttype>
{
  public RefGnrcAltArgInp<Ttype> AsRefGnrcAltArgInp { get; set; }
}

public interface IRefGnrcAltArgInp<Tref>
{
  Tref Asref { get; }
}
public class InputRefGnrcAltArgInp<Tref>
  : IRefGnrcAltArgInp<Tref>
{
  public Tref Asref { get; set; }
}

public interface IGnrcAltArgOutp<Ttype>
{
  RefGnrcAltArgOutp<Ttype> AsRefGnrcAltArgOutp { get; }
}
public class OutputGnrcAltArgOutp<Ttype>
  : IGnrcAltArgOutp<Ttype>
{
  public RefGnrcAltArgOutp<Ttype> AsRefGnrcAltArgOutp { get; set; }
}

public interface IRefGnrcAltArgOutp<Tref>
{
  Tref Asref { get; }
}
public class OutputRefGnrcAltArgOutp<Tref>
  : IRefGnrcAltArgOutp<Tref>
{
  public Tref Asref { get; set; }
}

public interface IGnrcAltArgDescrDual<Ttype>
{
  RefGnrcAltArgDescrDual<Ttype> AsRefGnrcAltArgDescrDual { get; }
}
public class DualGnrcAltArgDescrDual<Ttype>
  : IGnrcAltArgDescrDual<Ttype>
{
  public RefGnrcAltArgDescrDual<Ttype> AsRefGnrcAltArgDescrDual { get; set; }
}

public interface IRefGnrcAltArgDescrDual<Tref>
{
  Tref Asref { get; }
}
public class DualRefGnrcAltArgDescrDual<Tref>
  : IRefGnrcAltArgDescrDual<Tref>
{
  public Tref Asref { get; set; }
}

public interface IGnrcAltArgDescrInp<Ttype>
{
  RefGnrcAltArgDescrInp<Ttype> AsRefGnrcAltArgDescrInp { get; }
}
public class InputGnrcAltArgDescrInp<Ttype>
  : IGnrcAltArgDescrInp<Ttype>
{
  public RefGnrcAltArgDescrInp<Ttype> AsRefGnrcAltArgDescrInp { get; set; }
}

public interface IRefGnrcAltArgDescrInp<Tref>
{
  Tref Asref { get; }
}
public class InputRefGnrcAltArgDescrInp<Tref>
  : IRefGnrcAltArgDescrInp<Tref>
{
  public Tref Asref { get; set; }
}

public interface IGnrcAltArgDescrOutp<Ttype>
{
  RefGnrcAltArgDescrOutp<Ttype> AsRefGnrcAltArgDescrOutp { get; }
}
public class OutputGnrcAltArgDescrOutp<Ttype>
  : IGnrcAltArgDescrOutp<Ttype>
{
  public RefGnrcAltArgDescrOutp<Ttype> AsRefGnrcAltArgDescrOutp { get; set; }
}

public interface IRefGnrcAltArgDescrOutp<Tref>
{
  Tref Asref { get; }
}
public class OutputRefGnrcAltArgDescrOutp<Tref>
  : IRefGnrcAltArgDescrOutp<Tref>
{
  public Tref Asref { get; set; }
}

public interface IGnrcAltDualDual
{
  RefGnrcAltDualDual<AltGnrcAltDualDual> AsRefGnrcAltDualDual { get; }
}
public class DualGnrcAltDualDual
  : IGnrcAltDualDual
{
  public RefGnrcAltDualDual<AltGnrcAltDualDual> AsRefGnrcAltDualDual { get; set; }
}

public interface IRefGnrcAltDualDual<Tref>
{
  Tref Asref { get; }
}
public class DualRefGnrcAltDualDual<Tref>
  : IRefGnrcAltDualDual<Tref>
{
  public Tref Asref { get; set; }
}

public interface IAltGnrcAltDualDual
{
  Number alt { get; }
  String AsString { get; }
}
public class DualAltGnrcAltDualDual
  : IAltGnrcAltDualDual
{
  public Number alt { get; set; }
  public String AsString { get; set; }
}

public interface IGnrcAltDualInp
{
  RefGnrcAltDualInp<AltGnrcAltDualInp> AsRefGnrcAltDualInp { get; }
}
public class InputGnrcAltDualInp
  : IGnrcAltDualInp
{
  public RefGnrcAltDualInp<AltGnrcAltDualInp> AsRefGnrcAltDualInp { get; set; }
}

public interface IRefGnrcAltDualInp<Tref>
{
  Tref Asref { get; }
}
public class InputRefGnrcAltDualInp<Tref>
  : IRefGnrcAltDualInp<Tref>
{
  public Tref Asref { get; set; }
}

public interface IAltGnrcAltDualInp
{
  Number alt { get; }
  String AsString { get; }
}
public class DualAltGnrcAltDualInp
  : IAltGnrcAltDualInp
{
  public Number alt { get; set; }
  public String AsString { get; set; }
}

public interface IGnrcAltDualOutp
{
  RefGnrcAltDualOutp<AltGnrcAltDualOutp> AsRefGnrcAltDualOutp { get; }
}
public class OutputGnrcAltDualOutp
  : IGnrcAltDualOutp
{
  public RefGnrcAltDualOutp<AltGnrcAltDualOutp> AsRefGnrcAltDualOutp { get; set; }
}

public interface IRefGnrcAltDualOutp<Tref>
{
  Tref Asref { get; }
}
public class OutputRefGnrcAltDualOutp<Tref>
  : IRefGnrcAltDualOutp<Tref>
{
  public Tref Asref { get; set; }
}

public interface IAltGnrcAltDualOutp
{
  Number alt { get; }
  String AsString { get; }
}
public class DualAltGnrcAltDualOutp
  : IAltGnrcAltDualOutp
{
  public Number alt { get; set; }
  public String AsString { get; set; }
}

public interface IRefGnrcAltModParamDual<Tref,Tmod>
{
  Tref Asref { get; }
}
public class DualRefGnrcAltModParamDual<Tref,Tmod>
  : IRefGnrcAltModParamDual<Tref,Tmod>
{
  public Tref Asref { get; set; }
}

public interface IRefGnrcAltModParamInp<Tref,Tmod>
{
  Tref Asref { get; }
}
public class InputRefGnrcAltModParamInp<Tref,Tmod>
  : IRefGnrcAltModParamInp<Tref,Tmod>
{
  public Tref Asref { get; set; }
}

public interface IRefGnrcAltModParamOutp<Tref,Tmod>
{
  Tref Asref { get; }
}
public class OutputRefGnrcAltModParamOutp<Tref,Tmod>
  : IRefGnrcAltModParamOutp<Tref,Tmod>
{
  public Tref Asref { get; set; }
}

public interface IRefGnrcAltModStrDual<Tref>
{
  Tref Asref { get; }
}
public class DualRefGnrcAltModStrDual<Tref>
  : IRefGnrcAltModStrDual<Tref>
{
  public Tref Asref { get; set; }
}

public interface IRefGnrcAltModStrInp<Tref>
{
  Tref Asref { get; }
}
public class InputRefGnrcAltModStrInp<Tref>
  : IRefGnrcAltModStrInp<Tref>
{
  public Tref Asref { get; set; }
}

public interface IRefGnrcAltModStrOutp<Tref>
{
  Tref Asref { get; }
}
public class OutputRefGnrcAltModStrOutp<Tref>
  : IRefGnrcAltModStrOutp<Tref>
{
  public Tref Asref { get; set; }
}

public interface IGnrcAltParamDual
{
  RefGnrcAltParamDual<AltGnrcAltParamDual> AsRefGnrcAltParamDual { get; }
}
public class DualGnrcAltParamDual
  : IGnrcAltParamDual
{
  public RefGnrcAltParamDual<AltGnrcAltParamDual> AsRefGnrcAltParamDual { get; set; }
}

public interface IRefGnrcAltParamDual<Tref>
{
  Tref Asref { get; }
}
public class DualRefGnrcAltParamDual<Tref>
  : IRefGnrcAltParamDual<Tref>
{
  public Tref Asref { get; set; }
}

public interface IAltGnrcAltParamDual
{
  Number alt { get; }
  String AsString { get; }
}
public class DualAltGnrcAltParamDual
  : IAltGnrcAltParamDual
{
  public Number alt { get; set; }
  public String AsString { get; set; }
}

public interface IGnrcAltParamInp
{
  RefGnrcAltParamInp<AltGnrcAltParamInp> AsRefGnrcAltParamInp { get; }
}
public class InputGnrcAltParamInp
  : IGnrcAltParamInp
{
  public RefGnrcAltParamInp<AltGnrcAltParamInp> AsRefGnrcAltParamInp { get; set; }
}

public interface IRefGnrcAltParamInp<Tref>
{
  Tref Asref { get; }
}
public class InputRefGnrcAltParamInp<Tref>
  : IRefGnrcAltParamInp<Tref>
{
  public Tref Asref { get; set; }
}

public interface IAltGnrcAltParamInp
{
  Number alt { get; }
  String AsString { get; }
}
public class InputAltGnrcAltParamInp
  : IAltGnrcAltParamInp
{
  public Number alt { get; set; }
  public String AsString { get; set; }
}

public interface IGnrcAltParamOutp
{
  RefGnrcAltParamOutp<AltGnrcAltParamOutp> AsRefGnrcAltParamOutp { get; }
}
public class OutputGnrcAltParamOutp
  : IGnrcAltParamOutp
{
  public RefGnrcAltParamOutp<AltGnrcAltParamOutp> AsRefGnrcAltParamOutp { get; set; }
}

public interface IRefGnrcAltParamOutp<Tref>
{
  Tref Asref { get; }
}
public class OutputRefGnrcAltParamOutp<Tref>
  : IRefGnrcAltParamOutp<Tref>
{
  public Tref Asref { get; set; }
}

public interface IAltGnrcAltParamOutp
{
  Number alt { get; }
  String AsString { get; }
}
public class OutputAltGnrcAltParamOutp
  : IAltGnrcAltParamOutp
{
  public Number alt { get; set; }
  public String AsString { get; set; }
}

public interface IGnrcAltSmplDual
{
  RefGnrcAltSmplDual<String> AsRefGnrcAltSmplDual { get; }
}
public class DualGnrcAltSmplDual
  : IGnrcAltSmplDual
{
  public RefGnrcAltSmplDual<String> AsRefGnrcAltSmplDual { get; set; }
}

public interface IRefGnrcAltSmplDual<Tref>
{
  Tref Asref { get; }
}
public class DualRefGnrcAltSmplDual<Tref>
  : IRefGnrcAltSmplDual<Tref>
{
  public Tref Asref { get; set; }
}

public interface IGnrcAltSmplInp
{
  RefGnrcAltSmplInp<String> AsRefGnrcAltSmplInp { get; }
}
public class InputGnrcAltSmplInp
  : IGnrcAltSmplInp
{
  public RefGnrcAltSmplInp<String> AsRefGnrcAltSmplInp { get; set; }
}

public interface IRefGnrcAltSmplInp<Tref>
{
  Tref Asref { get; }
}
public class InputRefGnrcAltSmplInp<Tref>
  : IRefGnrcAltSmplInp<Tref>
{
  public Tref Asref { get; set; }
}

public interface IGnrcAltSmplOutp
{
  RefGnrcAltSmplOutp<String> AsRefGnrcAltSmplOutp { get; }
}
public class OutputGnrcAltSmplOutp
  : IGnrcAltSmplOutp
{
  public RefGnrcAltSmplOutp<String> AsRefGnrcAltSmplOutp { get; set; }
}

public interface IRefGnrcAltSmplOutp<Tref>
{
  Tref Asref { get; }
}
public class OutputRefGnrcAltSmplOutp<Tref>
  : IRefGnrcAltSmplOutp<Tref>
{
  public Tref Asref { get; set; }
}

public interface IGnrcDescrDual<Ttype>
{
  Ttype field { get; }
}
public class DualGnrcDescrDual<Ttype>
  : IGnrcDescrDual<Ttype>
{
  public Ttype field { get; set; }
}

public interface IGnrcDescrInp<Ttype>
{
  Ttype field { get; }
}
public class InputGnrcDescrInp<Ttype>
  : IGnrcDescrInp<Ttype>
{
  public Ttype field { get; set; }
}

public interface IGnrcDescrOutp<Ttype>
{
  Ttype field { get; }
}
public class OutputGnrcDescrOutp<Ttype>
  : IGnrcDescrOutp<Ttype>
{
  public Ttype field { get; set; }
}

public interface IGnrcFieldDual<Ttype>
{
  Ttype field { get; }
}
public class DualGnrcFieldDual<Ttype>
  : IGnrcFieldDual<Ttype>
{
  public Ttype field { get; set; }
}

public interface IGnrcFieldInp<Ttype>
{
  Ttype field { get; }
}
public class InputGnrcFieldInp<Ttype>
  : IGnrcFieldInp<Ttype>
{
  public Ttype field { get; set; }
}

public interface IGnrcFieldOutp<Ttype>
{
  Ttype field { get; }
}
public class OutputGnrcFieldOutp<Ttype>
  : IGnrcFieldOutp<Ttype>
{
  public Ttype field { get; set; }
}

public interface IGnrcFieldArgDual<Ttype>
{
  RefGnrcFieldArgDual<Ttype> field { get; }
}
public class DualGnrcFieldArgDual<Ttype>
  : IGnrcFieldArgDual<Ttype>
{
  public RefGnrcFieldArgDual<Ttype> field { get; set; }
}

public interface IRefGnrcFieldArgDual<Tref>
{
  Tref Asref { get; }
}
public class DualRefGnrcFieldArgDual<Tref>
  : IRefGnrcFieldArgDual<Tref>
{
  public Tref Asref { get; set; }
}

public interface IGnrcFieldArgInp<Ttype>
{
  RefGnrcFieldArgInp<Ttype> field { get; }
}
public class InputGnrcFieldArgInp<Ttype>
  : IGnrcFieldArgInp<Ttype>
{
  public RefGnrcFieldArgInp<Ttype> field { get; set; }
}

public interface IRefGnrcFieldArgInp<Tref>
{
  Tref Asref { get; }
}
public class InputRefGnrcFieldArgInp<Tref>
  : IRefGnrcFieldArgInp<Tref>
{
  public Tref Asref { get; set; }
}

public interface IGnrcFieldArgOutp<Ttype>
{
  RefGnrcFieldArgOutp<Ttype> field { get; }
}
public class OutputGnrcFieldArgOutp<Ttype>
  : IGnrcFieldArgOutp<Ttype>
{
  public RefGnrcFieldArgOutp<Ttype> field { get; set; }
}

public interface IRefGnrcFieldArgOutp<Tref>
{
  Tref Asref { get; }
}
public class OutputRefGnrcFieldArgOutp<Tref>
  : IRefGnrcFieldArgOutp<Tref>
{
  public Tref Asref { get; set; }
}

public interface IGnrcFieldDualDual
{
  RefGnrcFieldDualDual<AltGnrcFieldDualDual> field { get; }
}
public class DualGnrcFieldDualDual
  : IGnrcFieldDualDual
{
  public RefGnrcFieldDualDual<AltGnrcFieldDualDual> field { get; set; }
}

public interface IRefGnrcFieldDualDual<Tref>
{
  Tref Asref { get; }
}
public class DualRefGnrcFieldDualDual<Tref>
  : IRefGnrcFieldDualDual<Tref>
{
  public Tref Asref { get; set; }
}

public interface IAltGnrcFieldDualDual
{
  Number alt { get; }
  String AsString { get; }
}
public class DualAltGnrcFieldDualDual
  : IAltGnrcFieldDualDual
{
  public Number alt { get; set; }
  public String AsString { get; set; }
}

public interface IGnrcFieldDualInp
{
  RefGnrcFieldDualInp<AltGnrcFieldDualInp> field { get; }
}
public class InputGnrcFieldDualInp
  : IGnrcFieldDualInp
{
  public RefGnrcFieldDualInp<AltGnrcFieldDualInp> field { get; set; }
}

public interface IRefGnrcFieldDualInp<Tref>
{
  Tref Asref { get; }
}
public class InputRefGnrcFieldDualInp<Tref>
  : IRefGnrcFieldDualInp<Tref>
{
  public Tref Asref { get; set; }
}

public interface IAltGnrcFieldDualInp
{
  Number alt { get; }
  String AsString { get; }
}
public class DualAltGnrcFieldDualInp
  : IAltGnrcFieldDualInp
{
  public Number alt { get; set; }
  public String AsString { get; set; }
}

public interface IGnrcFieldDualOutp
{
  RefGnrcFieldDualOutp<AltGnrcFieldDualOutp> field { get; }
}
public class OutputGnrcFieldDualOutp
  : IGnrcFieldDualOutp
{
  public RefGnrcFieldDualOutp<AltGnrcFieldDualOutp> field { get; set; }
}

public interface IRefGnrcFieldDualOutp<Tref>
{
  Tref Asref { get; }
}
public class OutputRefGnrcFieldDualOutp<Tref>
  : IRefGnrcFieldDualOutp<Tref>
{
  public Tref Asref { get; set; }
}

public interface IAltGnrcFieldDualOutp
{
  Number alt { get; }
  String AsString { get; }
}
public class DualAltGnrcFieldDualOutp
  : IAltGnrcFieldDualOutp
{
  public Number alt { get; set; }
  public String AsString { get; set; }
}

public interface IGnrcFieldParamDual
{
  RefGnrcFieldParamDual<AltGnrcFieldParamDual> field { get; }
}
public class DualGnrcFieldParamDual
  : IGnrcFieldParamDual
{
  public RefGnrcFieldParamDual<AltGnrcFieldParamDual> field { get; set; }
}

public interface IRefGnrcFieldParamDual<Tref>
{
  Tref Asref { get; }
}
public class DualRefGnrcFieldParamDual<Tref>
  : IRefGnrcFieldParamDual<Tref>
{
  public Tref Asref { get; set; }
}

public interface IAltGnrcFieldParamDual
{
  Number alt { get; }
  String AsString { get; }
}
public class DualAltGnrcFieldParamDual
  : IAltGnrcFieldParamDual
{
  public Number alt { get; set; }
  public String AsString { get; set; }
}

public interface IGnrcFieldParamInp
{
  RefGnrcFieldParamInp<AltGnrcFieldParamInp> field { get; }
}
public class InputGnrcFieldParamInp
  : IGnrcFieldParamInp
{
  public RefGnrcFieldParamInp<AltGnrcFieldParamInp> field { get; set; }
}

public interface IRefGnrcFieldParamInp<Tref>
{
  Tref Asref { get; }
}
public class InputRefGnrcFieldParamInp<Tref>
  : IRefGnrcFieldParamInp<Tref>
{
  public Tref Asref { get; set; }
}

public interface IAltGnrcFieldParamInp
{
  Number alt { get; }
  String AsString { get; }
}
public class InputAltGnrcFieldParamInp
  : IAltGnrcFieldParamInp
{
  public Number alt { get; set; }
  public String AsString { get; set; }
}

public interface IGnrcFieldParamOutp
{
  RefGnrcFieldParamOutp<AltGnrcFieldParamOutp> field { get; }
}
public class OutputGnrcFieldParamOutp
  : IGnrcFieldParamOutp
{
  public RefGnrcFieldParamOutp<AltGnrcFieldParamOutp> field { get; set; }
}

public interface IRefGnrcFieldParamOutp<Tref>
{
  Tref Asref { get; }
}
public class OutputRefGnrcFieldParamOutp<Tref>
  : IRefGnrcFieldParamOutp<Tref>
{
  public Tref Asref { get; set; }
}

public interface IAltGnrcFieldParamOutp
{
  Number alt { get; }
  String AsString { get; }
}
public class OutputAltGnrcFieldParamOutp
  : IAltGnrcFieldParamOutp
{
  public Number alt { get; set; }
  public String AsString { get; set; }
}

public interface IGnrcPrntDual<Ttype>
  : Itype
{
}
public class DualGnrcPrntDual<Ttype>
  : Dualtype
  , IGnrcPrntDual<Ttype>
{
}

public interface IGnrcPrntInp<Ttype>
  : Itype
{
}
public class InputGnrcPrntInp<Ttype>
  : Inputtype
  , IGnrcPrntInp<Ttype>
{
}

public interface IGnrcPrntOutp<Ttype>
  : Itype
{
}
public class OutputGnrcPrntOutp<Ttype>
  : Outputtype
  , IGnrcPrntOutp<Ttype>
{
}

public interface IGnrcPrntArgDual<Ttype>
  : IRefGnrcPrntArgDual
{
}
public class DualGnrcPrntArgDual<Ttype>
  : DualRefGnrcPrntArgDual
  , IGnrcPrntArgDual<Ttype>
{
}

public interface IRefGnrcPrntArgDual<Tref>
{
  Tref Asref { get; }
}
public class DualRefGnrcPrntArgDual<Tref>
  : IRefGnrcPrntArgDual<Tref>
{
  public Tref Asref { get; set; }
}

public interface IGnrcPrntArgInp<Ttype>
  : IRefGnrcPrntArgInp
{
}
public class InputGnrcPrntArgInp<Ttype>
  : InputRefGnrcPrntArgInp
  , IGnrcPrntArgInp<Ttype>
{
}

public interface IRefGnrcPrntArgInp<Tref>
{
  Tref Asref { get; }
}
public class InputRefGnrcPrntArgInp<Tref>
  : IRefGnrcPrntArgInp<Tref>
{
  public Tref Asref { get; set; }
}

public interface IGnrcPrntArgOutp<Ttype>
  : IRefGnrcPrntArgOutp
{
}
public class OutputGnrcPrntArgOutp<Ttype>
  : OutputRefGnrcPrntArgOutp
  , IGnrcPrntArgOutp<Ttype>
{
}

public interface IRefGnrcPrntArgOutp<Tref>
{
  Tref Asref { get; }
}
public class OutputRefGnrcPrntArgOutp<Tref>
  : IRefGnrcPrntArgOutp<Tref>
{
  public Tref Asref { get; set; }
}

public interface IGnrcPrntDescrDual<Ttype>
  : Itype
{
}
public class DualGnrcPrntDescrDual<Ttype>
  : Dualtype
  , IGnrcPrntDescrDual<Ttype>
{
}

public interface IGnrcPrntDescrInp<Ttype>
  : Itype
{
}
public class InputGnrcPrntDescrInp<Ttype>
  : Inputtype
  , IGnrcPrntDescrInp<Ttype>
{
}

public interface IGnrcPrntDescrOutp<Ttype>
  : Itype
{
}
public class OutputGnrcPrntDescrOutp<Ttype>
  : Outputtype
  , IGnrcPrntDescrOutp<Ttype>
{
}

public interface IGnrcPrntDualDual
  : IRefGnrcPrntDualDual
{
}
public class DualGnrcPrntDualDual
  : DualRefGnrcPrntDualDual
  , IGnrcPrntDualDual
{
}

public interface IRefGnrcPrntDualDual<Tref>
{
  Tref Asref { get; }
}
public class DualRefGnrcPrntDualDual<Tref>
  : IRefGnrcPrntDualDual<Tref>
{
  public Tref Asref { get; set; }
}

public interface IAltGnrcPrntDualDual
{
  Number alt { get; }
  String AsString { get; }
}
public class DualAltGnrcPrntDualDual
  : IAltGnrcPrntDualDual
{
  public Number alt { get; set; }
  public String AsString { get; set; }
}

public interface IGnrcPrntDualInp
  : IRefGnrcPrntDualInp
{
}
public class InputGnrcPrntDualInp
  : InputRefGnrcPrntDualInp
  , IGnrcPrntDualInp
{
}

public interface IRefGnrcPrntDualInp<Tref>
{
  Tref Asref { get; }
}
public class InputRefGnrcPrntDualInp<Tref>
  : IRefGnrcPrntDualInp<Tref>
{
  public Tref Asref { get; set; }
}

public interface IAltGnrcPrntDualInp
{
  Number alt { get; }
  String AsString { get; }
}
public class DualAltGnrcPrntDualInp
  : IAltGnrcPrntDualInp
{
  public Number alt { get; set; }
  public String AsString { get; set; }
}

public interface IGnrcPrntDualOutp
  : IRefGnrcPrntDualOutp
{
}
public class OutputGnrcPrntDualOutp
  : OutputRefGnrcPrntDualOutp
  , IGnrcPrntDualOutp
{
}

public interface IRefGnrcPrntDualOutp<Tref>
{
  Tref Asref { get; }
}
public class OutputRefGnrcPrntDualOutp<Tref>
  : IRefGnrcPrntDualOutp<Tref>
{
  public Tref Asref { get; set; }
}

public interface IAltGnrcPrntDualOutp
{
  Number alt { get; }
  String AsString { get; }
}
public class DualAltGnrcPrntDualOutp
  : IAltGnrcPrntDualOutp
{
  public Number alt { get; set; }
  public String AsString { get; set; }
}

public interface IGnrcPrntDualPrntDual
  : IRefGnrcPrntDualPrntDual
{
}
public class DualGnrcPrntDualPrntDual
  : DualRefGnrcPrntDualPrntDual
  , IGnrcPrntDualPrntDual
{
}

public interface IRefGnrcPrntDualPrntDual<Tref>
  : Iref
{
}
public class DualRefGnrcPrntDualPrntDual<Tref>
  : Dualref
  , IRefGnrcPrntDualPrntDual<Tref>
{
}

public interface IAltGnrcPrntDualPrntDual
{
  Number alt { get; }
  String AsString { get; }
}
public class DualAltGnrcPrntDualPrntDual
  : IAltGnrcPrntDualPrntDual
{
  public Number alt { get; set; }
  public String AsString { get; set; }
}

public interface IGnrcPrntDualPrntInp
  : IRefGnrcPrntDualPrntInp
{
}
public class InputGnrcPrntDualPrntInp
  : InputRefGnrcPrntDualPrntInp
  , IGnrcPrntDualPrntInp
{
}

public interface IRefGnrcPrntDualPrntInp<Tref>
  : Iref
{
}
public class InputRefGnrcPrntDualPrntInp<Tref>
  : Inputref
  , IRefGnrcPrntDualPrntInp<Tref>
{
}

public interface IAltGnrcPrntDualPrntInp
{
  Number alt { get; }
  String AsString { get; }
}
public class DualAltGnrcPrntDualPrntInp
  : IAltGnrcPrntDualPrntInp
{
  public Number alt { get; set; }
  public String AsString { get; set; }
}

public interface IGnrcPrntDualPrntOutp
  : IRefGnrcPrntDualPrntOutp
{
}
public class OutputGnrcPrntDualPrntOutp
  : OutputRefGnrcPrntDualPrntOutp
  , IGnrcPrntDualPrntOutp
{
}

public interface IRefGnrcPrntDualPrntOutp<Tref>
  : Iref
{
}
public class OutputRefGnrcPrntDualPrntOutp<Tref>
  : Outputref
  , IRefGnrcPrntDualPrntOutp<Tref>
{
}

public interface IAltGnrcPrntDualPrntOutp
{
  Number alt { get; }
  String AsString { get; }
}
public class DualAltGnrcPrntDualPrntOutp
  : IAltGnrcPrntDualPrntOutp
{
  public Number alt { get; set; }
  public String AsString { get; set; }
}

public interface IGnrcPrntEnumChildDual
  : IFieldGnrcPrntEnumChildDual
{
}
public class DualGnrcPrntEnumChildDual
  : DualFieldGnrcPrntEnumChildDual
  , IGnrcPrntEnumChildDual
{
}

public interface IFieldGnrcPrntEnumChildDual<Tref>
{
  Tref field { get; }
}
public class DualFieldGnrcPrntEnumChildDual<Tref>
  : IFieldGnrcPrntEnumChildDual<Tref>
{
  public Tref field { get; set; }
}

public enum EnumGnrcPrntEnumChildDual
{
  gnrcPrntEnumChildDualParent = ParentGnrcPrntEnumChildDual.gnrcPrntEnumChildDualParent,,
  gnrcPrntEnumChildDualLabel,
}

public enum ParentGnrcPrntEnumChildDual
{
  gnrcPrntEnumChildDualParent,
}

public interface IGnrcPrntEnumChildInp
  : IFieldGnrcPrntEnumChildInp
{
}
public class InputGnrcPrntEnumChildInp
  : InputFieldGnrcPrntEnumChildInp
  , IGnrcPrntEnumChildInp
{
}

public interface IFieldGnrcPrntEnumChildInp<Tref>
{
  Tref field { get; }
}
public class InputFieldGnrcPrntEnumChildInp<Tref>
  : IFieldGnrcPrntEnumChildInp<Tref>
{
  public Tref field { get; set; }
}

public enum EnumGnrcPrntEnumChildInp
{
  gnrcPrntEnumChildInpParent = ParentGnrcPrntEnumChildInp.gnrcPrntEnumChildInpParent,,
  gnrcPrntEnumChildInpLabel,
}

public enum ParentGnrcPrntEnumChildInp
{
  gnrcPrntEnumChildInpParent,
}

public interface IGnrcPrntEnumChildOutp
  : IFieldGnrcPrntEnumChildOutp
{
}
public class OutputGnrcPrntEnumChildOutp
  : OutputFieldGnrcPrntEnumChildOutp
  , IGnrcPrntEnumChildOutp
{
}

public interface IFieldGnrcPrntEnumChildOutp<Tref>
{
  Tref field { get; }
}
public class OutputFieldGnrcPrntEnumChildOutp<Tref>
  : IFieldGnrcPrntEnumChildOutp<Tref>
{
  public Tref field { get; set; }
}

public enum EnumGnrcPrntEnumChildOutp
{
  gnrcPrntEnumChildOutpParent = ParentGnrcPrntEnumChildOutp.gnrcPrntEnumChildOutpParent,,
  gnrcPrntEnumChildOutpLabel,
}

public enum ParentGnrcPrntEnumChildOutp
{
  gnrcPrntEnumChildOutpParent,
}

public interface IGnrcPrntEnumDomDual
  : IFieldGnrcPrntEnumDomDual
{
}
public class DualGnrcPrntEnumDomDual
  : DualFieldGnrcPrntEnumDomDual
  , IGnrcPrntEnumDomDual
{
}

public interface IFieldGnrcPrntEnumDomDual<Tref>
{
  Tref field { get; }
}
public class DualFieldGnrcPrntEnumDomDual<Tref>
  : IFieldGnrcPrntEnumDomDual<Tref>
{
  public Tref field { get; set; }
}

public enum EnumGnrcPrntEnumDomDual
{
  gnrcPrntEnumDomDualLabel,
  gnrcPrntEnumDomDualOther,
}

public interface IDomGnrcPrntEnumDomDual
{
}
public class DomainDomGnrcPrntEnumDomDual
  : IDomGnrcPrntEnumDomDual
{
}

public interface IGnrcPrntEnumDomInp
  : IFieldGnrcPrntEnumDomInp
{
}
public class InputGnrcPrntEnumDomInp
  : InputFieldGnrcPrntEnumDomInp
  , IGnrcPrntEnumDomInp
{
}

public interface IFieldGnrcPrntEnumDomInp<Tref>
{
  Tref field { get; }
}
public class InputFieldGnrcPrntEnumDomInp<Tref>
  : IFieldGnrcPrntEnumDomInp<Tref>
{
  public Tref field { get; set; }
}

public enum EnumGnrcPrntEnumDomInp
{
  gnrcPrntEnumDomInpLabel,
  gnrcPrntEnumDomInpOther,
}

public interface IDomGnrcPrntEnumDomInp
{
}
public class DomainDomGnrcPrntEnumDomInp
  : IDomGnrcPrntEnumDomInp
{
}

public interface IGnrcPrntEnumDomOutp
  : IFieldGnrcPrntEnumDomOutp
{
}
public class OutputGnrcPrntEnumDomOutp
  : OutputFieldGnrcPrntEnumDomOutp
  , IGnrcPrntEnumDomOutp
{
}

public interface IFieldGnrcPrntEnumDomOutp<Tref>
{
  Tref field { get; }
}
public class OutputFieldGnrcPrntEnumDomOutp<Tref>
  : IFieldGnrcPrntEnumDomOutp<Tref>
{
  public Tref field { get; set; }
}

public enum EnumGnrcPrntEnumDomOutp
{
  gnrcPrntEnumDomOutpLabel,
  gnrcPrntEnumDomOutpOther,
}

public interface IDomGnrcPrntEnumDomOutp
{
}
public class DomainDomGnrcPrntEnumDomOutp
  : IDomGnrcPrntEnumDomOutp
{
}

public interface IGnrcPrntEnumPrntDual
  : IFieldGnrcPrntEnumPrntDual
{
}
public class DualGnrcPrntEnumPrntDual
  : DualFieldGnrcPrntEnumPrntDual
  , IGnrcPrntEnumPrntDual
{
}

public interface IFieldGnrcPrntEnumPrntDual<Tref>
{
  Tref field { get; }
}
public class DualFieldGnrcPrntEnumPrntDual<Tref>
  : IFieldGnrcPrntEnumPrntDual<Tref>
{
  public Tref field { get; set; }
}

public enum EnumGnrcPrntEnumPrntDual
{
  gnrcPrntEnumPrntDualParent = ParentGnrcPrntEnumPrntDual.gnrcPrntEnumPrntDualParent,,
  gnrcPrntEnumPrntDualLabel,
}

public enum ParentGnrcPrntEnumPrntDual
{
  gnrcPrntEnumPrntDualParent,
}

public interface IGnrcPrntEnumPrntInp
  : IFieldGnrcPrntEnumPrntInp
{
}
public class InputGnrcPrntEnumPrntInp
  : InputFieldGnrcPrntEnumPrntInp
  , IGnrcPrntEnumPrntInp
{
}

public interface IFieldGnrcPrntEnumPrntInp<Tref>
{
  Tref field { get; }
}
public class InputFieldGnrcPrntEnumPrntInp<Tref>
  : IFieldGnrcPrntEnumPrntInp<Tref>
{
  public Tref field { get; set; }
}

public enum EnumGnrcPrntEnumPrntInp
{
  gnrcPrntEnumPrntInpParent = ParentGnrcPrntEnumPrntInp.gnrcPrntEnumPrntInpParent,,
  gnrcPrntEnumPrntInpLabel,
}

public enum ParentGnrcPrntEnumPrntInp
{
  gnrcPrntEnumPrntInpParent,
}

public interface IGnrcPrntEnumPrntOutp
  : IFieldGnrcPrntEnumPrntOutp
{
}
public class OutputGnrcPrntEnumPrntOutp
  : OutputFieldGnrcPrntEnumPrntOutp
  , IGnrcPrntEnumPrntOutp
{
}

public interface IFieldGnrcPrntEnumPrntOutp<Tref>
{
  Tref field { get; }
}
public class OutputFieldGnrcPrntEnumPrntOutp<Tref>
  : IFieldGnrcPrntEnumPrntOutp<Tref>
{
  public Tref field { get; set; }
}

public enum EnumGnrcPrntEnumPrntOutp
{
  gnrcPrntEnumPrntOutpParent = ParentGnrcPrntEnumPrntOutp.gnrcPrntEnumPrntOutpParent,,
  gnrcPrntEnumPrntOutpLabel,
}

public enum ParentGnrcPrntEnumPrntOutp
{
  gnrcPrntEnumPrntOutpParent,
}

public interface IGnrcPrntParamDual
  : IRefGnrcPrntParamDual
{
}
public class DualGnrcPrntParamDual
  : DualRefGnrcPrntParamDual
  , IGnrcPrntParamDual
{
}

public interface IRefGnrcPrntParamDual<Tref>
{
  Tref Asref { get; }
}
public class DualRefGnrcPrntParamDual<Tref>
  : IRefGnrcPrntParamDual<Tref>
{
  public Tref Asref { get; set; }
}

public interface IAltGnrcPrntParamDual
{
  Number alt { get; }
  String AsString { get; }
}
public class DualAltGnrcPrntParamDual
  : IAltGnrcPrntParamDual
{
  public Number alt { get; set; }
  public String AsString { get; set; }
}

public interface IGnrcPrntParamInp
  : IRefGnrcPrntParamInp
{
}
public class InputGnrcPrntParamInp
  : InputRefGnrcPrntParamInp
  , IGnrcPrntParamInp
{
}

public interface IRefGnrcPrntParamInp<Tref>
{
  Tref Asref { get; }
}
public class InputRefGnrcPrntParamInp<Tref>
  : IRefGnrcPrntParamInp<Tref>
{
  public Tref Asref { get; set; }
}

public interface IAltGnrcPrntParamInp
{
  Number alt { get; }
  String AsString { get; }
}
public class InputAltGnrcPrntParamInp
  : IAltGnrcPrntParamInp
{
  public Number alt { get; set; }
  public String AsString { get; set; }
}

public interface IGnrcPrntParamOutp
  : IRefGnrcPrntParamOutp
{
}
public class OutputGnrcPrntParamOutp
  : OutputRefGnrcPrntParamOutp
  , IGnrcPrntParamOutp
{
}

public interface IRefGnrcPrntParamOutp<Tref>
{
  Tref Asref { get; }
}
public class OutputRefGnrcPrntParamOutp<Tref>
  : IRefGnrcPrntParamOutp<Tref>
{
  public Tref Asref { get; set; }
}

public interface IAltGnrcPrntParamOutp
{
  Number alt { get; }
  String AsString { get; }
}
public class OutputAltGnrcPrntParamOutp
  : IAltGnrcPrntParamOutp
{
  public Number alt { get; set; }
  public String AsString { get; set; }
}

public interface IGnrcPrntParamPrntDual
  : IRefGnrcPrntParamPrntDual
{
}
public class DualGnrcPrntParamPrntDual
  : DualRefGnrcPrntParamPrntDual
  , IGnrcPrntParamPrntDual
{
}

public interface IRefGnrcPrntParamPrntDual<Tref>
  : Iref
{
}
public class DualRefGnrcPrntParamPrntDual<Tref>
  : Dualref
  , IRefGnrcPrntParamPrntDual<Tref>
{
}

public interface IAltGnrcPrntParamPrntDual
{
  Number alt { get; }
  String AsString { get; }
}
public class DualAltGnrcPrntParamPrntDual
  : IAltGnrcPrntParamPrntDual
{
  public Number alt { get; set; }
  public String AsString { get; set; }
}

public interface IGnrcPrntParamPrntInp
  : IRefGnrcPrntParamPrntInp
{
}
public class InputGnrcPrntParamPrntInp
  : InputRefGnrcPrntParamPrntInp
  , IGnrcPrntParamPrntInp
{
}

public interface IRefGnrcPrntParamPrntInp<Tref>
  : Iref
{
}
public class InputRefGnrcPrntParamPrntInp<Tref>
  : Inputref
  , IRefGnrcPrntParamPrntInp<Tref>
{
}

public interface IAltGnrcPrntParamPrntInp
{
  Number alt { get; }
  String AsString { get; }
}
public class InputAltGnrcPrntParamPrntInp
  : IAltGnrcPrntParamPrntInp
{
  public Number alt { get; set; }
  public String AsString { get; set; }
}

public interface IGnrcPrntParamPrntOutp
  : IRefGnrcPrntParamPrntOutp
{
}
public class OutputGnrcPrntParamPrntOutp
  : OutputRefGnrcPrntParamPrntOutp
  , IGnrcPrntParamPrntOutp
{
}

public interface IRefGnrcPrntParamPrntOutp<Tref>
  : Iref
{
}
public class OutputRefGnrcPrntParamPrntOutp<Tref>
  : Outputref
  , IRefGnrcPrntParamPrntOutp<Tref>
{
}

public interface IAltGnrcPrntParamPrntOutp
{
  Number alt { get; }
  String AsString { get; }
}
public class OutputAltGnrcPrntParamPrntOutp
  : IAltGnrcPrntParamPrntOutp
{
  public Number alt { get; set; }
  public String AsString { get; set; }
}

public interface IGnrcPrntSmplEnumDual
  : IFieldGnrcPrntSmplEnumDual
{
}
public class DualGnrcPrntSmplEnumDual
  : DualFieldGnrcPrntSmplEnumDual
  , IGnrcPrntSmplEnumDual
{
}

public interface IFieldGnrcPrntSmplEnumDual<Tref>
{
  Tref field { get; }
}
public class DualFieldGnrcPrntSmplEnumDual<Tref>
  : IFieldGnrcPrntSmplEnumDual<Tref>
{
  public Tref field { get; set; }
}

public enum EnumGnrcPrntSmplEnumDual
{
  gnrcPrntSmplEnumDual,
}

public interface IGnrcPrntSmplEnumInp
  : IFieldGnrcPrntSmplEnumInp
{
}
public class InputGnrcPrntSmplEnumInp
  : InputFieldGnrcPrntSmplEnumInp
  , IGnrcPrntSmplEnumInp
{
}

public interface IFieldGnrcPrntSmplEnumInp<Tref>
{
  Tref field { get; }
}
public class InputFieldGnrcPrntSmplEnumInp<Tref>
  : IFieldGnrcPrntSmplEnumInp<Tref>
{
  public Tref field { get; set; }
}

public enum EnumGnrcPrntSmplEnumInp
{
  gnrcPrntSmplEnumInp,
}

public interface IGnrcPrntSmplEnumOutp
  : IFieldGnrcPrntSmplEnumOutp
{
}
public class OutputGnrcPrntSmplEnumOutp
  : OutputFieldGnrcPrntSmplEnumOutp
  , IGnrcPrntSmplEnumOutp
{
}

public interface IFieldGnrcPrntSmplEnumOutp<Tref>
{
  Tref field { get; }
}
public class OutputFieldGnrcPrntSmplEnumOutp<Tref>
  : IFieldGnrcPrntSmplEnumOutp<Tref>
{
  public Tref field { get; set; }
}

public enum EnumGnrcPrntSmplEnumOutp
{
  gnrcPrntSmplEnumOutp,
}

public interface IGnrcPrntStrDomDual
  : IFieldGnrcPrntStrDomDual
{
}
public class DualGnrcPrntStrDomDual
  : DualFieldGnrcPrntStrDomDual
  , IGnrcPrntStrDomDual
{
}

public interface IFieldGnrcPrntStrDomDual<Tref>
{
  Tref field { get; }
}
public class DualFieldGnrcPrntStrDomDual<Tref>
  : IFieldGnrcPrntStrDomDual<Tref>
{
  public Tref field { get; set; }
}

public interface IDomGnrcPrntStrDomDual
{
}
public class DomainDomGnrcPrntStrDomDual
  : IDomGnrcPrntStrDomDual
{
}

public interface IGnrcPrntStrDomInp
  : IFieldGnrcPrntStrDomInp
{
}
public class InputGnrcPrntStrDomInp
  : InputFieldGnrcPrntStrDomInp
  , IGnrcPrntStrDomInp
{
}

public interface IFieldGnrcPrntStrDomInp<Tref>
{
  Tref field { get; }
}
public class InputFieldGnrcPrntStrDomInp<Tref>
  : IFieldGnrcPrntStrDomInp<Tref>
{
  public Tref field { get; set; }
}

public interface IDomGnrcPrntStrDomInp
{
}
public class DomainDomGnrcPrntStrDomInp
  : IDomGnrcPrntStrDomInp
{
}

public interface IGnrcPrntStrDomOutp
  : IFieldGnrcPrntStrDomOutp
{
}
public class OutputGnrcPrntStrDomOutp
  : OutputFieldGnrcPrntStrDomOutp
  , IGnrcPrntStrDomOutp
{
}

public interface IFieldGnrcPrntStrDomOutp<Tref>
{
  Tref field { get; }
}
public class OutputFieldGnrcPrntStrDomOutp<Tref>
  : IFieldGnrcPrntStrDomOutp<Tref>
{
  public Tref field { get; set; }
}

public interface IDomGnrcPrntStrDomOutp
{
}
public class DomainDomGnrcPrntStrDomOutp
  : IDomGnrcPrntStrDomOutp
{
}

public interface IInpFieldDescrNmbr
{
  Number field { get; }
}
public class InputInpFieldDescrNmbr
  : IInpFieldDescrNmbr
{
  public Number field { get; set; }
}

public interface IInpFieldEnum
{
  EnumInpFieldEnum field { get; }
}
public class InputInpFieldEnum
  : IInpFieldEnum
{
  public EnumInpFieldEnum field { get; set; }
}

public enum EnumInpFieldEnum
{
  inpFieldEnum,
}

public interface IInpFieldNull
{
  FldInpFieldNull field { get; }
}
public class InputInpFieldNull
  : IInpFieldNull
{
  public FldInpFieldNull field { get; set; }
}

public interface IFldInpFieldNull
{
}
public class DualFldInpFieldNull
  : IFldInpFieldNull
{
}

public interface IInpFieldNmbr
{
  Number field { get; }
}
public class InputInpFieldNmbr
  : IInpFieldNmbr
{
  public Number field { get; set; }
}

public interface IInpFieldNmbrDescr
{
  Number field { get; }
}
public class InputInpFieldNmbrDescr
  : IInpFieldNmbrDescr
{
  public Number field { get; set; }
}

public interface IInpFieldStr
{
  String field { get; }
}
public class InputInpFieldStr
  : IInpFieldStr
{
  public String field { get; set; }
}

public interface IOutpCnstDomEnum
{
  RefOutpCnstDomEnum<outpCnstDomEnum> AsRefOutpCnstDomEnum { get; }
}
public class OutputOutpCnstDomEnum
  : IOutpCnstDomEnum
{
  public RefOutpCnstDomEnum<outpCnstDomEnum> AsRefOutpCnstDomEnum { get; set; }
}

public interface IRefOutpCnstDomEnum<Ttype>
{
  Ttype field { get; }
}
public class OutputRefOutpCnstDomEnum<Ttype>
  : IRefOutpCnstDomEnum<Ttype>
{
  public Ttype field { get; set; }
}

public enum EnumOutpCnstDomEnum
{
  outpCnstDomEnum,
  other,
}

public interface IJustOutpCnstDomEnum
{
}
public class DomainJustOutpCnstDomEnum
  : IJustOutpCnstDomEnum
{
}

public interface IOutpCnstEnum
{
  RefOutpCnstEnum<outpCnstEnum> AsRefOutpCnstEnum { get; }
}
public class OutputOutpCnstEnum
  : IOutpCnstEnum
{
  public RefOutpCnstEnum<outpCnstEnum> AsRefOutpCnstEnum { get; set; }
}

public interface IRefOutpCnstEnum<Ttype>
{
  Ttype field { get; }
}
public class OutputRefOutpCnstEnum<Ttype>
  : IRefOutpCnstEnum<Ttype>
{
  public Ttype field { get; set; }
}

public enum EnumOutpCnstEnum
{
  outpCnstEnum,
}

public interface IOutpCnstEnumPrnt
{
  RefOutpCnstEnumPrnt<outpCnstEnumPrnt> AsRefOutpCnstEnumPrnt { get; }
}
public class OutputOutpCnstEnumPrnt
  : IOutpCnstEnumPrnt
{
  public RefOutpCnstEnumPrnt<outpCnstEnumPrnt> AsRefOutpCnstEnumPrnt { get; set; }
}

public interface IRefOutpCnstEnumPrnt<Ttype>
{
  Ttype field { get; }
}
public class OutputRefOutpCnstEnumPrnt<Ttype>
  : IRefOutpCnstEnumPrnt<Ttype>
{
  public Ttype field { get; set; }
}

public enum EnumOutpCnstEnumPrnt
{
  parentOutpCnstEnumPrnt = ParentOutpCnstEnumPrnt.parentOutpCnstEnumPrnt,,
  outpCnstEnumPrnt,
}

public enum ParentOutpCnstEnumPrnt
{
  parentOutpCnstEnumPrnt,
}

public interface IOutpCnstPrntEnum
{
  RefOutpCnstPrntEnum<parentOutpCnstPrntEnum> AsRefOutpCnstPrntEnum { get; }
}
public class OutputOutpCnstPrntEnum
  : IOutpCnstPrntEnum
{
  public RefOutpCnstPrntEnum<parentOutpCnstPrntEnum> AsRefOutpCnstPrntEnum { get; set; }
}

public interface IRefOutpCnstPrntEnum<Ttype>
{
  Ttype field { get; }
}
public class OutputRefOutpCnstPrntEnum<Ttype>
  : IRefOutpCnstPrntEnum<Ttype>
{
  public Ttype field { get; set; }
}

public enum EnumOutpCnstPrntEnum
{
  parentOutpCnstPrntEnum = ParentOutpCnstPrntEnum.parentOutpCnstPrntEnum,,
  outpCnstPrntEnum,
}

public enum ParentOutpCnstPrntEnum
{
  parentOutpCnstPrntEnum,
}

public interface IOutpDescrParam
{
  FldOutpDescrParam field { get; }
}
public class OutputOutpDescrParam
  : IOutpDescrParam
{
  public FldOutpDescrParam field { get; set; }
}

public interface IFldOutpDescrParam
{
}
public class DualFldOutpDescrParam
  : IFldOutpDescrParam
{
}

public interface IInOutpDescrParam
{
  Number param { get; }
  String AsString { get; }
}
public class InputInOutpDescrParam
  : IInOutpDescrParam
{
  public Number param { get; set; }
  public String AsString { get; set; }
}

public interface IOutpFieldEnum
{
  EnumOutpFieldEnum field { get; }
}
public class OutputOutpFieldEnum
  : IOutpFieldEnum
{
  public EnumOutpFieldEnum field { get; set; }
}

public enum EnumOutpFieldEnum
{
  outpFieldEnum,
}

public interface IOutpFieldEnumPrnt
{
  EnumOutpFieldEnumPrnt field { get; }
}
public class OutputOutpFieldEnumPrnt
  : IOutpFieldEnumPrnt
{
  public EnumOutpFieldEnumPrnt field { get; set; }
}

public enum EnumOutpFieldEnumPrnt
{
  prnt_outpFieldEnumPrnt = PrntOutpFieldEnumPrnt.prnt_outpFieldEnumPrnt,,
  outpFieldEnumPrnt,
}

public enum PrntOutpFieldEnumPrnt
{
  prnt_outpFieldEnumPrnt,
}

public interface IOutpFieldValue
{
  EnumOutpFieldValue field { get; }
}
public class OutputOutpFieldValue
  : IOutpFieldValue
{
  public EnumOutpFieldValue field { get; set; }
}

public enum EnumOutpFieldValue
{
  outpFieldValue,
}

public interface IOutpFieldValueDescr
{
  EnumOutpFieldValueDescr field { get; }
}
public class OutputOutpFieldValueDescr
  : IOutpFieldValueDescr
{
  public EnumOutpFieldValueDescr field { get; set; }
}

public enum EnumOutpFieldValueDescr
{
  outpFieldValueDescr,
}

public interface IOutpGnrcEnum
{
  RefOutpGnrcEnum<EnumOutpGnrcEnum> AsRefOutpGnrcEnum { get; }
}
public class OutputOutpGnrcEnum
  : IOutpGnrcEnum
{
  public RefOutpGnrcEnum<EnumOutpGnrcEnum> AsRefOutpGnrcEnum { get; set; }
}

public interface IRefOutpGnrcEnum<Ttype>
{
  Ttype field { get; }
}
public class OutputRefOutpGnrcEnum<Ttype>
  : IRefOutpGnrcEnum<Ttype>
{
  public Ttype field { get; set; }
}

public enum EnumOutpGnrcEnum
{
  outpGnrcEnum,
}

public interface IOutpGnrcValue
{
  RefOutpGnrcValue<outpGnrcValue> AsRefOutpGnrcValue { get; }
}
public class OutputOutpGnrcValue
  : IOutpGnrcValue
{
  public RefOutpGnrcValue<outpGnrcValue> AsRefOutpGnrcValue { get; set; }
}

public interface IRefOutpGnrcValue<Ttype>
{
  Ttype field { get; }
}
public class OutputRefOutpGnrcValue<Ttype>
  : IRefOutpGnrcValue<Ttype>
{
  public Ttype field { get; set; }
}

public enum EnumOutpGnrcValue
{
  outpGnrcValue,
}

public interface IOutpParam
{
  FldOutpParam field { get; }
}
public class OutputOutpParam
  : IOutpParam
{
  public FldOutpParam field { get; set; }
}

public interface IFldOutpParam
{
}
public class DualFldOutpParam
  : IFldOutpParam
{
}

public interface IInOutpParam
{
  Number param { get; }
  String AsString { get; }
}
public class InputInOutpParam
  : IInOutpParam
{
  public Number param { get; set; }
  public String AsString { get; set; }
}

public interface IOutpParamDescr
{
  FldOutpParamDescr field { get; }
}
public class OutputOutpParamDescr
  : IOutpParamDescr
{
  public FldOutpParamDescr field { get; set; }
}

public interface IFldOutpParamDescr
{
}
public class DualFldOutpParamDescr
  : IFldOutpParamDescr
{
}

public interface IInOutpParamDescr
{
  Number param { get; }
  String AsString { get; }
}
public class InputInOutpParamDescr
  : IInOutpParamDescr
{
  public Number param { get; set; }
  public String AsString { get; set; }
}

public interface IOutpParamModDmn
{
  DomOutpParamModDmn field { get; }
}
public class OutputOutpParamModDmn
  : IOutpParamModDmn
{
  public DomOutpParamModDmn field { get; set; }
}

public interface IInOutpParamModDmn
{
  Number param { get; }
  String AsString { get; }
}
public class InputInOutpParamModDmn
  : IInOutpParamModDmn
{
  public Number param { get; set; }
  public String AsString { get; set; }
}

public interface IDomOutpParamModDmn
{
}
public class DomainDomOutpParamModDmn
  : IDomOutpParamModDmn
{
}

public interface IOutpParamModParam<Tmod>
{
  DomOutpParamModParam field { get; }
}
public class OutputOutpParamModParam<Tmod>
  : IOutpParamModParam<Tmod>
{
  public DomOutpParamModParam field { get; set; }
}

public interface IInOutpParamModParam
{
  Number param { get; }
  String AsString { get; }
}
public class InputInOutpParamModParam
  : IInOutpParamModParam
{
  public Number param { get; set; }
  public String AsString { get; set; }
}

public interface IDomOutpParamModParam
{
}
public class DomainDomOutpParamModParam
  : IDomOutpParamModParam
{
}

public interface IOutpParamTypeDescr
{
  FldOutpParamTypeDescr field { get; }
}
public class OutputOutpParamTypeDescr
  : IOutpParamTypeDescr
{
  public FldOutpParamTypeDescr field { get; set; }
}

public interface IFldOutpParamTypeDescr
{
}
public class DualFldOutpParamTypeDescr
  : IFldOutpParamTypeDescr
{
}

public interface IInOutpParamTypeDescr
{
  Number param { get; }
  String AsString { get; }
}
public class InputInOutpParamTypeDescr
  : IInOutpParamTypeDescr
{
  public Number param { get; set; }
  public String AsString { get; set; }
}

public interface IOutpPrntGnrc
{
  RefOutpPrntGnrc<EnumOutpPrntGnrc> AsRefOutpPrntGnrc { get; }
}
public class OutputOutpPrntGnrc
  : IOutpPrntGnrc
{
  public RefOutpPrntGnrc<EnumOutpPrntGnrc> AsRefOutpPrntGnrc { get; set; }
}

public interface IRefOutpPrntGnrc<Ttype>
{
  Ttype field { get; }
}
public class OutputRefOutpPrntGnrc<Ttype>
  : IRefOutpPrntGnrc<Ttype>
{
  public Ttype field { get; set; }
}

public enum EnumOutpPrntGnrc
{
  prnt_outpPrntGnrc = PrntOutpPrntGnrc.prnt_outpPrntGnrc,,
  outpPrntGnrc,
}

public enum PrntOutpPrntGnrc
{
  prnt_outpPrntGnrc,
}

public interface IOutpPrntParam
  : IPrntOutpPrntParam
{
  FldOutpPrntParam field { get; }
}
public class OutputOutpPrntParam
  : OutputPrntOutpPrntParam
  , IOutpPrntParam
{
  public FldOutpPrntParam field { get; set; }
}

public interface IPrntOutpPrntParam
{
  FldOutpPrntParam field { get; }
}
public class OutputPrntOutpPrntParam
  : IPrntOutpPrntParam
{
  public FldOutpPrntParam field { get; set; }
}

public interface IFldOutpPrntParam
{
}
public class DualFldOutpPrntParam
  : IFldOutpPrntParam
{
}

public interface IInOutpPrntParam
{
  Number param { get; }
  String AsString { get; }
}
public class InputInOutpPrntParam
  : IInOutpPrntParam
{
  public Number param { get; set; }
  public String AsString { get; set; }
}

public interface IPrntOutpPrntParamIn
{
  Number parent { get; }
  String AsString { get; }
}
public class InputPrntOutpPrntParamIn
  : IPrntOutpPrntParamIn
{
  public Number parent { get; set; }
  public String AsString { get; set; }
}

public interface IPrntDual
  : IRefPrntDual
{
}
public class DualPrntDual
  : DualRefPrntDual
  , IPrntDual
{
}

public interface IRefPrntDual
{
  Number parent { get; }
  String AsString { get; }
}
public class DualRefPrntDual
  : IRefPrntDual
{
  public Number parent { get; set; }
  public String AsString { get; set; }
}

public interface IPrntInp
  : IRefPrntInp
{
}
public class InputPrntInp
  : InputRefPrntInp
  , IPrntInp
{
}

public interface IRefPrntInp
{
  Number parent { get; }
  String AsString { get; }
}
public class InputRefPrntInp
  : IRefPrntInp
{
  public Number parent { get; set; }
  public String AsString { get; set; }
}

public interface IPrntOutp
  : IRefPrntOutp
{
}
public class OutputPrntOutp
  : OutputRefPrntOutp
  , IPrntOutp
{
}

public interface IRefPrntOutp
{
  Number parent { get; }
  String AsString { get; }
}
public class OutputRefPrntOutp
  : IRefPrntOutp
{
  public Number parent { get; set; }
  public String AsString { get; set; }
}

public interface IPrntAltDual
  : IRefPrntAltDual
{
  Number AsNumber { get; }
}
public class DualPrntAltDual
  : DualRefPrntAltDual
  , IPrntAltDual
{
  public Number AsNumber { get; set; }
}

public interface IRefPrntAltDual
{
  Number parent { get; }
  String AsString { get; }
}
public class DualRefPrntAltDual
  : IRefPrntAltDual
{
  public Number parent { get; set; }
  public String AsString { get; set; }
}

public interface IPrntAltInp
  : IRefPrntAltInp
{
  Number AsNumber { get; }
}
public class InputPrntAltInp
  : InputRefPrntAltInp
  , IPrntAltInp
{
  public Number AsNumber { get; set; }
}

public interface IRefPrntAltInp
{
  Number parent { get; }
  String AsString { get; }
}
public class InputRefPrntAltInp
  : IRefPrntAltInp
{
  public Number parent { get; set; }
  public String AsString { get; set; }
}

public interface IPrntAltOutp
  : IRefPrntAltOutp
{
  Number AsNumber { get; }
}
public class OutputPrntAltOutp
  : OutputRefPrntAltOutp
  , IPrntAltOutp
{
  public Number AsNumber { get; set; }
}

public interface IRefPrntAltOutp
{
  Number parent { get; }
  String AsString { get; }
}
public class OutputRefPrntAltOutp
  : IRefPrntAltOutp
{
  public Number parent { get; set; }
  public String AsString { get; set; }
}

public interface IPrntDescrDual
  : IRefPrntDescrDual
{
}
public class DualPrntDescrDual
  : DualRefPrntDescrDual
  , IPrntDescrDual
{
}

public interface IRefPrntDescrDual
{
  Number parent { get; }
  String AsString { get; }
}
public class DualRefPrntDescrDual
  : IRefPrntDescrDual
{
  public Number parent { get; set; }
  public String AsString { get; set; }
}

public interface IPrntDescrInp
  : IRefPrntDescrInp
{
}
public class InputPrntDescrInp
  : InputRefPrntDescrInp
  , IPrntDescrInp
{
}

public interface IRefPrntDescrInp
{
  Number parent { get; }
  String AsString { get; }
}
public class InputRefPrntDescrInp
  : IRefPrntDescrInp
{
  public Number parent { get; set; }
  public String AsString { get; set; }
}

public interface IPrntDescrOutp
  : IRefPrntDescrOutp
{
}
public class OutputPrntDescrOutp
  : OutputRefPrntDescrOutp
  , IPrntDescrOutp
{
}

public interface IRefPrntDescrOutp
{
  Number parent { get; }
  String AsString { get; }
}
public class OutputRefPrntDescrOutp
  : IRefPrntDescrOutp
{
  public Number parent { get; set; }
  public String AsString { get; set; }
}

public interface IPrntDualDual
  : IRefPrntDualDual
{
}
public class DualPrntDualDual
  : DualRefPrntDualDual
  , IPrntDualDual
{
}

public interface IRefPrntDualDual
{
  Number parent { get; }
  String AsString { get; }
}
public class DualRefPrntDualDual
  : IRefPrntDualDual
{
  public Number parent { get; set; }
  public String AsString { get; set; }
}

public interface IPrntDualInp
  : IRefPrntDualInp
{
}
public class InputPrntDualInp
  : InputRefPrntDualInp
  , IPrntDualInp
{
}

public interface IRefPrntDualInp
{
  Number parent { get; }
  String AsString { get; }
}
public class DualRefPrntDualInp
  : IRefPrntDualInp
{
  public Number parent { get; set; }
  public String AsString { get; set; }
}

public interface IPrntDualOutp
  : IRefPrntDualOutp
{
}
public class OutputPrntDualOutp
  : OutputRefPrntDualOutp
  , IPrntDualOutp
{
}

public interface IRefPrntDualOutp
{
  Number parent { get; }
  String AsString { get; }
}
public class DualRefPrntDualOutp
  : IRefPrntDualOutp
{
  public Number parent { get; set; }
  public String AsString { get; set; }
}

public interface IPrntFieldDual
  : IRefPrntFieldDual
{
  Number field { get; }
}
public class DualPrntFieldDual
  : DualRefPrntFieldDual
  , IPrntFieldDual
{
  public Number field { get; set; }
}

public interface IRefPrntFieldDual
{
  Number parent { get; }
  String AsString { get; }
}
public class DualRefPrntFieldDual
  : IRefPrntFieldDual
{
  public Number parent { get; set; }
  public String AsString { get; set; }
}

public interface IPrntFieldInp
  : IRefPrntFieldInp
{
  Number field { get; }
}
public class InputPrntFieldInp
  : InputRefPrntFieldInp
  , IPrntFieldInp
{
  public Number field { get; set; }
}

public interface IRefPrntFieldInp
{
  Number parent { get; }
  String AsString { get; }
}
public class InputRefPrntFieldInp
  : IRefPrntFieldInp
{
  public Number parent { get; set; }
  public String AsString { get; set; }
}

public interface IPrntFieldOutp
  : IRefPrntFieldOutp
{
  Number field { get; }
}
public class OutputPrntFieldOutp
  : OutputRefPrntFieldOutp
  , IPrntFieldOutp
{
  public Number field { get; set; }
}

public interface IRefPrntFieldOutp
{
  Number parent { get; }
  String AsString { get; }
}
public class OutputRefPrntFieldOutp
  : IRefPrntFieldOutp
{
  public Number parent { get; set; }
  public String AsString { get; set; }
}

public interface IPrntParamDiffDual<Ta>
  : IRefPrntParamDiffDual
{
  Ta field { get; }
}
public class DualPrntParamDiffDual<Ta>
  : DualRefPrntParamDiffDual
  , IPrntParamDiffDual<Ta>
{
  public Ta field { get; set; }
}

public interface IRefPrntParamDiffDual<Tb>
{
  Tb Asb { get; }
}
public class DualRefPrntParamDiffDual<Tb>
  : IRefPrntParamDiffDual<Tb>
{
  public Tb Asb { get; set; }
}

public interface IPrntParamDiffInp<Ta>
  : IRefPrntParamDiffInp
{
  Ta field { get; }
}
public class InputPrntParamDiffInp<Ta>
  : InputRefPrntParamDiffInp
  , IPrntParamDiffInp<Ta>
{
  public Ta field { get; set; }
}

public interface IRefPrntParamDiffInp<Tb>
{
  Tb Asb { get; }
}
public class InputRefPrntParamDiffInp<Tb>
  : IRefPrntParamDiffInp<Tb>
{
  public Tb Asb { get; set; }
}

public interface IPrntParamDiffOutp<Ta>
  : IRefPrntParamDiffOutp
{
  Ta field { get; }
}
public class OutputPrntParamDiffOutp<Ta>
  : OutputRefPrntParamDiffOutp
  , IPrntParamDiffOutp<Ta>
{
  public Ta field { get; set; }
}

public interface IRefPrntParamDiffOutp<Tb>
{
  Tb Asb { get; }
}
public class OutputRefPrntParamDiffOutp<Tb>
  : IRefPrntParamDiffOutp<Tb>
{
  public Tb Asb { get; set; }
}

public interface IPrntParamSameDual<Ta>
  : IRefPrntParamSameDual
{
  Ta field { get; }
}
public class DualPrntParamSameDual<Ta>
  : DualRefPrntParamSameDual
  , IPrntParamSameDual<Ta>
{
  public Ta field { get; set; }
}

public interface IRefPrntParamSameDual<Ta>
{
  Ta Asa { get; }
}
public class DualRefPrntParamSameDual<Ta>
  : IRefPrntParamSameDual<Ta>
{
  public Ta Asa { get; set; }
}

public interface IPrntParamSameInp<Ta>
  : IRefPrntParamSameInp
{
  Ta field { get; }
}
public class InputPrntParamSameInp<Ta>
  : InputRefPrntParamSameInp
  , IPrntParamSameInp<Ta>
{
  public Ta field { get; set; }
}

public interface IRefPrntParamSameInp<Ta>
{
  Ta Asa { get; }
}
public class InputRefPrntParamSameInp<Ta>
  : IRefPrntParamSameInp<Ta>
{
  public Ta Asa { get; set; }
}

public interface IPrntParamSameOutp<Ta>
  : IRefPrntParamSameOutp
{
  Ta field { get; }
}
public class OutputPrntParamSameOutp<Ta>
  : OutputRefPrntParamSameOutp
  , IPrntParamSameOutp<Ta>
{
  public Ta field { get; set; }
}

public interface IRefPrntParamSameOutp<Ta>
{
  Ta Asa { get; }
}
public class OutputRefPrntParamSameOutp<Ta>
  : IRefPrntParamSameOutp<Ta>
{
  public Ta Asa { get; set; }
}