!_Schema
aliases: [Opt1, Opt2]
categories: !_Map_Categories
  !_Identifier catAlias: !_Category
    aliases: [CatA1, CatA2]
    name: catAlias
    output: !_TypeRef(_TypeKind)
      name: CatAlias
      typeKind: !_TypeKind Output
    resolution: !_Resolution Parallel
  !_Identifier catMods: !_Category
    aliases: [CatM1, CatM2]
    modifiers: [!_Modifier {modifierKind: !_ModifierKind Opt}]
    name: catMods
    output: !_TypeRef(_TypeKind)
      name: CatMods
      typeKind: !_TypeKind Output
    resolution: !_Resolution Parallel
  !_Identifier category: !_Category
    name: category
    output: !_TypeRef(_TypeKind)
      name: Category
      typeKind: !_TypeKind Output
    resolution: !_Resolution Parallel
directives: !_Map_Directives
  !_Identifier Dir: !_Directive
    locations: !_Set(_Location) {Inline: _, Spread: _}
    name: Dir
    repeatable: false
  !_Identifier DirAlias: !_Directive
    aliases: [DirA1, DirA2]
    locations: !_Set(_Location) {Field: _, Variable: _}
    name: DirAlias
    repeatable: false
  !_Identifier DirParam: !_Directive
    locations: !_Set(_Location) {Fragment: _, Operation: _}
    name: DirParam
    parameters:
    - !_InputParam
      input: DirParamIn
    repeatable: false
name: Schema
settings: !_Map_Setting
  !_Identifier merged: !_Setting
    name: merged
    value:
    - true
    - 0
types: !_Map_Type
  !_Identifier Bool: !_DomainBoolean
    allItems:
    - !_DomainItem(_DomainTrueFalse)
      domain: Bool
      exclude: false
      value: false
    - !_DomainItem(_DomainTrueFalse)
      domain: Bool
      exclude: false
      value: true
    domainKind: !_DomainKind Boolean
    items:
    - !_DomainTrueFalse
      exclude: false
      value: false
    - !_DomainTrueFalse
      exclude: false
      value: true
    name: Bool
    typeKind: !_TypeKind Domain
  !_Identifier BoolDiff: !_DomainBoolean
    allItems:
    - !_DomainItem(_DomainTrueFalse)
      domain: BoolDiff
      exclude: false
      value: true
    - !_DomainItem(_DomainTrueFalse)
      domain: BoolDiff
      exclude: false
      value: false
    domainKind: !_DomainKind Boolean
    items:
    - !_DomainTrueFalse
      exclude: false
      value: true
    - !_DomainTrueFalse
      exclude: false
      value: false
    name: BoolDiff
    typeKind: !_TypeKind Domain
  !_Identifier BoolSame: !_DomainBoolean
    allItems:
    - !_DomainItem(_DomainTrueFalse)
      domain: BoolSame
      exclude: false
      value: true
    domainKind: !_DomainKind Boolean
    items:
    - !_DomainTrueFalse
      exclude: false
      value: true
    name: BoolSame
    typeKind: !_TypeKind Domain
  !_Identifier CatAlias: !_TypeOutput
    name: CatAlias
    typeKind: !_TypeKind Output
  !_Identifier CatMods: !_TypeOutput
    name: CatMods
    typeKind: !_TypeKind Output
  !_Identifier Category: !_TypeOutput
    name: Category
    typeKind: !_TypeKind Output
  !_Identifier DirParamIn: !_TypeInput
    name: DirParamIn
    typeKind: !_TypeKind Input
  !_Identifier DualObject: !_TypeDual
    name: DualObject
    typeKind: !_TypeKind Dual
  !_Identifier DualObjectAlias: !_TypeDual
    aliases: [Dual1, Dual2]
    name: DualObjectAlias
    typeKind: !_TypeKind Dual
  !_Identifier DualObjectAlt: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: DualObjectAlt
      type: !_DualBase
        dual: DualObjectAltType
    alternates:
    - !_DualAlternate
      type: !_DualBase
        dual: DualObjectAltType
    name: DualObjectAlt
    typeKind: !_TypeKind Dual
  !_Identifier DualObjectAltType: !_TypeDual
    name: DualObjectAltType
    typeKind: !_TypeKind Dual
  !_Identifier DualObjectField: !_TypeDual
    allFields:
    - !_ObjectFor(_DualField)
      name: field
      object: DualObjectField
      type: !_DualBase
        dual: DualObjectFieldFld
    fields:
    - !_DualField
      name: field
      type: !_DualBase
        dual: DualObjectFieldFld
    name: DualObjectField
    typeKind: !_TypeKind Dual
  !_Identifier DualObjectFieldAlias: !_TypeDual
    allFields:
    - !_ObjectFor(_DualField)
      aliases: [field1, field2]
      name: field
      object: DualObjectFieldAlias
      type: !_DualBase
        dual: DualObjectFieldAliasFld
    fields:
    - !_DualField
      aliases: [field1, field2]
      name: field
      type: !_DualBase
        dual: DualObjectFieldAliasFld
    name: DualObjectFieldAlias
    typeKind: !_TypeKind Dual
  !_Identifier DualObjectFieldAliasFld: !_TypeDual
    name: DualObjectFieldAliasFld
    typeKind: !_TypeKind Dual
  !_Identifier DualObjectFieldFld: !_TypeDual
    name: DualObjectFieldFld
    typeKind: !_TypeKind Dual
  !_Identifier DualObjectParam: !_TypeDual
    allFields:
    - !_ObjectFor(_DualField)
      name: test
      object: DualObjectParam
      type: !_TypeParam test
    - !_ObjectFor(_DualField)
      name: type
      object: DualObjectParam
      type: !_TypeParam type
    fields:
    - !_DualField
      name: test
      type: !_TypeParam test
    - !_DualField
      name: type
      type: !_TypeParam type
    name: DualObjectParam
    typeKind: !_TypeKind Dual
    typeParams:
    - !_Described
      name: test
    - !_Described
      name: type
  !_Identifier DualObjectParent: !_TypeDual
    name: DualObjectParent
    parent: !_DualBase
      dual: DualObjectParentRef
    typeKind: !_TypeKind Dual
  !_Identifier DualObjectParentRef: !_TypeDual
    name: DualObjectParentRef
    typeKind: !_TypeKind Dual
  !_Identifier EnAlias: !_TypeEnum
    aliases: [En1, En2]
    allItems:
    - !_EnumMember
      enum: EnAlias
      name: alias
    items:
    - !_Aliased
      name: alias
    name: EnAlias
    typeKind: !_TypeKind Enum
  !_Identifier EnDiff: !_TypeEnum
    allItems:
    - !_EnumMember
      enum: EnDiff
      name: one
    - !_EnumMember
      enum: EnDiff
      name: two
    items:
    - !_Aliased
      name: one
    - !_Aliased
      name: two
    name: EnDiff
    typeKind: !_TypeKind Enum
  !_Identifier EnParent: !_TypeEnum
    allItems:
    - !_EnumMember
      enum: EnParent
      name: parent
    items:
    - !_Aliased
      name: parent
    name: EnParent
    typeKind: !_TypeKind Enum
  !_Identifier EnSame: !_TypeEnum
    allItems:
    - !_EnumMember
      enum: EnSame
      name: same
    items:
    - !_Aliased
      name: same
    name: EnSame
    typeKind: !_TypeKind Enum
  !_Identifier EnSameParent: !_TypeEnum
    allItems:
    - !_EnumMember
      enum: EnParent
      name: parent
    - !_EnumMember
      enum: EnSameParent
      name: sameP
    items:
    - !_Aliased
      name: sameP
    name: EnSameParent
    parent: !_TypeRef(_SimpleKind)
      name: EnParent
      typeKind: !_SimpleKind Enum
    typeKind: !_TypeKind Enum
  !_Identifier EnValAlias: !_TypeEnum
    allItems:
    - !_EnumMember
      aliases: [val1, val2]
      enum: EnValAlias
      name: value
    items:
    - !_Aliased
      aliases: [val1, val2]
      name: value
    name: EnValAlias
    typeKind: !_TypeKind Enum
  !_Identifier EnumDiff: !_DomainEnum
    allItems:
    - !_DomainItem(_DomainMember)
      domain: EnumDiff
      exclude: false
      value: !_EnumValue
        member: true
        name: Boolean
        typeKind: !_SimpleKind Enum
    - !_DomainItem(_DomainMember)
      domain: EnumDiff
      exclude: false
      value: !_EnumValue
        member: false
        name: Boolean
        typeKind: !_SimpleKind Enum
    domainKind: !_DomainKind Enum
    items:
    - !_DomainMember
      exclude: false
      value: !_EnumValue
        member: true
        name: Boolean
        typeKind: !_SimpleKind Enum
    - !_DomainMember
      exclude: false
      value: !_EnumValue
        member: false
        name: Boolean
        typeKind: !_SimpleKind Enum
    name: EnumDiff
    typeKind: !_TypeKind Domain
  !_Identifier EnumSame: !_DomainEnum
    allItems:
    - !_DomainItem(_DomainMember)
      domain: EnumSame
      exclude: false
      value: !_EnumValue
        member: true
        name: Boolean
        typeKind: !_SimpleKind Enum
    domainKind: !_DomainKind Enum
    items:
    - !_DomainMember
      exclude: false
      value: !_EnumValue
        member: true
        name: Boolean
        typeKind: !_SimpleKind Enum
    name: EnumSame
    typeKind: !_TypeKind Domain
  !_Identifier FieldEnumAlias: !_TypeOutput
    allFields:
    - !_ObjectFor(_OutputField)
      field: field
      member: true
      name: Boolean
      object: FieldEnumAlias
      typeKind: !_SimpleKind Enum
    fields:
    - !_OutputEnum
      field: field
      member: true
      name: Boolean
      typeKind: !_SimpleKind Enum
    name: FieldEnumAlias
    typeKind: !_TypeKind Output
  !_Identifier FieldEnums: !_TypeOutput
    allFields:
    - !_ObjectFor(_OutputField)
      field: field
      member: true
      name: Boolean
      object: FieldEnums
      typeKind: !_SimpleKind Enum
    fields:
    - !_OutputEnum
      field: field
      member: true
      name: Boolean
      typeKind: !_SimpleKind Enum
    name: FieldEnums
    typeKind: !_TypeKind Output
  !_Identifier FieldParam: !_TypeOutput
    allFields:
    - !_ObjectFor(_OutputField)
      name: field
      object: FieldParam
      parameters:
      - !_InputParam
        input: FieldParam1
      - !_InputParam
        input: FieldParam2
      type: !_OutputBase
        output: FieldParamFld
    fields:
    - !_OutputField
      name: field
      parameters:
      - !_InputParam
        input: FieldParam1
      - !_InputParam
        input: FieldParam2
      type: !_OutputBase
        output: FieldParamFld
    name: FieldParam
    typeKind: !_TypeKind Output
  !_Identifier FieldParam1: !_TypeInput
    name: FieldParam1
    typeKind: !_TypeKind Input
  !_Identifier FieldParam2: !_TypeInput
    name: FieldParam2
    typeKind: !_TypeKind Input
  !_Identifier FieldParamFld: !_TypeOutput
    name: FieldParamFld
    typeKind: !_TypeKind Output
  !_Identifier InpObject: !_TypeInput
    name: InpObject
    typeKind: !_TypeKind Input
  !_Identifier InpObjectAlias: !_TypeInput
    aliases: [Inp1, Inp2]
    name: InpObjectAlias
    typeKind: !_TypeKind Input
  !_Identifier InpObjectAlt: !_TypeInput
    allAlternates:
    - !_ObjectFor(_InputAlternate)
      object: InpObjectAlt
      type: !_InputBase
        input: InpObjectAltType
    alternates:
    - !_InputAlternate
      type: !_InputBase
        input: InpObjectAltType
    name: InpObjectAlt
    typeKind: !_TypeKind Input
  !_Identifier InpObjectAltType: !_TypeInput
    name: InpObjectAltType
    typeKind: !_TypeKind Input
  !_Identifier InpObjectField: !_TypeInput
    allFields:
    - !_ObjectFor(_InputField)
      name: field
      object: InpObjectField
      type: !_InputBase
        input: InpObjectFieldFld
    fields:
    - !_InputField
      name: field
      type: !_InputBase
        input: InpObjectFieldFld
    name: InpObjectField
    typeKind: !_TypeKind Input
  !_Identifier InpObjectFieldAlias: !_TypeInput
    allFields:
    - !_ObjectFor(_InputField)
      aliases: [field1, field2]
      name: field
      object: InpObjectFieldAlias
      type: !_InputBase
        input: InpObjectFieldAliasFld
    fields:
    - !_InputField
      aliases: [field1, field2]
      name: field
      type: !_InputBase
        input: InpObjectFieldAliasFld
    name: InpObjectFieldAlias
    typeKind: !_TypeKind Input
  !_Identifier InpObjectFieldAliasFld: !_TypeInput
    name: InpObjectFieldAliasFld
    typeKind: !_TypeKind Input
  !_Identifier InpObjectFieldFld: !_TypeInput
    name: InpObjectFieldFld
    typeKind: !_TypeKind Input
  !_Identifier InpObjectParam: !_TypeInput
    allFields:
    - !_ObjectFor(_InputField)
      name: test
      object: InpObjectParam
      type: !_TypeParam test
    - !_ObjectFor(_InputField)
      name: type
      object: InpObjectParam
      type: !_TypeParam type
    fields:
    - !_InputField
      name: test
      type: !_TypeParam test
    - !_InputField
      name: type
      type: !_TypeParam type
    name: InpObjectParam
    typeKind: !_TypeKind Input
    typeParams:
    - !_Described
      name: test
    - !_Described
      name: type
  !_Identifier InpObjectParent: !_TypeInput
    name: InpObjectParent
    parent: !_InputBase
      input: InpObjectParentRef
    typeKind: !_TypeKind Input
  !_Identifier InpObjectParentRef: !_TypeInput
    name: InpObjectParentRef
    typeKind: !_TypeKind Input
  !_Identifier Num: !_DomainNumber
    domainKind: !_DomainKind Number
    name: Num
    typeKind: !_TypeKind Domain
  !_Identifier NumAlias: !_DomainNumber
    aliases: [Num1, Num2]
    domainKind: !_DomainKind Number
    name: NumAlias
    typeKind: !_TypeKind Domain
  !_Identifier NumDiff: !_DomainNumber
    allItems:
    - !_DomainItem(_DomainRange)
      domain: NumDiff
      exclude: false
      from: 1
      to: 9
    domainKind: !_DomainKind Number
    items:
    - !_DomainRange
      exclude: false
      from: 1
      to: 9
    name: NumDiff
    typeKind: !_TypeKind Domain
  !_Identifier NumSame: !_DomainNumber
    allItems:
    - !_DomainItem(_DomainRange)
      domain: NumSame
      exclude: false
      from: 1
      to: 9
    domainKind: !_DomainKind Number
    items:
    - !_DomainRange
      exclude: false
      from: 1
      to: 9
    name: NumSame
    typeKind: !_TypeKind Domain
  !_Identifier OutpObject: !_TypeOutput
    name: OutpObject
    typeKind: !_TypeKind Output
  !_Identifier OutpObjectAlias: !_TypeOutput
    aliases: [Outp1, Outp2]
    name: OutpObjectAlias
    typeKind: !_TypeKind Output
  !_Identifier OutpObjectAlt: !_TypeOutput
    allAlternates:
    - !_ObjectFor(_OutputAlternate)
      object: OutpObjectAlt
      type: !_OutputBase
        output: OutpObjectAltType
    alternates:
    - !_OutputAlternate
      type: !_OutputBase
        output: OutpObjectAltType
    name: OutpObjectAlt
    typeKind: !_TypeKind Output
  !_Identifier OutpObjectAltType: !_TypeOutput
    name: OutpObjectAltType
    typeKind: !_TypeKind Output
  !_Identifier OutpObjectField: !_TypeOutput
    allFields:
    - !_ObjectFor(_OutputField)
      name: field
      object: OutpObjectField
      type: !_OutputBase
        output: OutpObjectFieldFld
    fields:
    - !_OutputField
      name: field
      type: !_OutputBase
        output: OutpObjectFieldFld
    name: OutpObjectField
    typeKind: !_TypeKind Output
  !_Identifier OutpObjectFieldAlias: !_TypeOutput
    allFields:
    - !_ObjectFor(_OutputField)
      aliases: [field1, field2]
      name: field
      object: OutpObjectFieldAlias
      type: !_OutputBase
        output: OutpObjectFieldAliasFld
    fields:
    - !_OutputField
      aliases: [field1, field2]
      name: field
      type: !_OutputBase
        output: OutpObjectFieldAliasFld
    name: OutpObjectFieldAlias
    typeKind: !_TypeKind Output
  !_Identifier OutpObjectFieldAliasFld: !_TypeOutput
    name: OutpObjectFieldAliasFld
    typeKind: !_TypeKind Output
  !_Identifier OutpObjectFieldFld: !_TypeOutput
    name: OutpObjectFieldFld
    typeKind: !_TypeKind Output
  !_Identifier OutpObjectParam: !_TypeOutput
    allFields:
    - !_ObjectFor(_OutputField)
      name: test
      object: OutpObjectParam
      type: !_TypeParam test
    - !_ObjectFor(_OutputField)
      name: type
      object: OutpObjectParam
      type: !_TypeParam type
    fields:
    - !_OutputField
      name: test
      type: !_TypeParam test
    - !_OutputField
      name: type
      type: !_TypeParam type
    name: OutpObjectParam
    typeKind: !_TypeKind Output
    typeParams:
    - !_Described
      name: test
    - !_Described
      name: type
  !_Identifier OutpObjectParent: !_TypeOutput
    name: OutpObjectParent
    parent: !_OutputBase
      output: OutpObjectParentRef
    typeKind: !_TypeKind Output
  !_Identifier OutpObjectParentRef: !_TypeOutput
    name: OutpObjectParentRef
    typeKind: !_TypeKind Output
  !_Identifier Str: !_DomainString
    domainKind: !_DomainKind String
    name: Str
    typeKind: !_TypeKind Domain
  !_Identifier StrDiff: !_DomainString
    allItems:
    - !_DomainItem(_DomainRegex)
      domain: StrDiff
      exclude: false
      pattern: a+
    domainKind: !_DomainKind String
    items:
    - !_DomainRegex
      exclude: false
      pattern: a+
    name: StrDiff
    typeKind: !_TypeKind Domain
  !_Identifier StrSame: !_DomainString
    allItems:
    - !_DomainItem(_DomainRegex)
      domain: StrSame
      exclude: false
      pattern: a+
    domainKind: !_DomainKind String
    items:
    - !_DomainRegex
      exclude: false
      pattern: a+
    name: StrSame
    typeKind: !_TypeKind Domain
  !_Identifier UnDiff: !_TypeUnion
    aliases: [UnA1, UnA2]
    allItems:
    - !_UnionMember
      name: Boolean
      union: UnDiff
    - !_UnionMember
      name: Number
      union: UnDiff
    items:
    - !_Aliased
      name: Boolean
    - !_Aliased
      name: Number
    name: UnDiff
    typeKind: !_TypeKind Union
  !_Identifier UnParent: !_TypeUnion
    allItems:
    - !_UnionMember
      name: String
      union: UnParent
    items:
    - !_Aliased
      name: String
    name: UnParent
    typeKind: !_TypeKind Union
  !_Identifier UnSame: !_TypeUnion
    allItems:
    - !_UnionMember
      name: Boolean
      union: UnSame
    items:
    - !_Aliased
      name: Boolean
    name: UnSame
    typeKind: !_TypeKind Union
  !_Identifier UnSameParent: !_TypeUnion
    allItems:
    - !_UnionMember
      name: String
      union: UnParent
    - !_UnionMember
      name: Boolean
      union: UnSameParent
    items:
    - !_Aliased
      name: Boolean
    name: UnSameParent
    parent: !_TypeRef(_SimpleKind)
      name: UnParent
      typeKind: !_SimpleKind Union
    typeKind: !_TypeKind Union