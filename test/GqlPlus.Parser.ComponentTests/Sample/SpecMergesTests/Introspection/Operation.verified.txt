[  
!Sc I@001/0001
Success
{
  !Ou I@008/0001
  _Operations
  {
    !OF I@009/0002
    operation
    :
    I@020/0002
    _Operation
    !OF I@009/0003
    type
    :
    I@015/0003
    _Type
  }
  |
  I@007/0004
  _Operation
  I@007/0005
  _Type
}
{
  !Ou I@008/0008
  _Operation
  :
  I@007/0009
  _Aliased
  {
    !OF I@009/0010
    category
    :
    I@019/0010
    _Identifier
    !OF I@009/0011
    variables
    :
    I@020/0011
    _OpVariable
    []
    !OF I@009/0012
    directives
    :
    I@021/0012
    _OpDirective
    []
    !OF I@009/0013
    fragments
    :
    I@020/0013
    _OpFragment
    []
    !OF I@009/0014
    result
    :
    I@017/0014
    _OpResult
  }
}
{
  !Ou I@008/0017
  _OpVariable
  :
  I@007/0018
  _Named
  {
    !OF I@009/0019
    type
    :
    I@015/0019
    _InputBase
    !OF I@009/0020
    modifiers
    :
    I@020/0020
    _Modifiers
    []
    !OF I@009/0021
    default
    :
    I@018/0021
    Value
    ?
    !OF I@009/0022
    directives
    :
    I@021/0022
    _OpDirective
    []
  }
}
{
  !Du I@006/0025
  _OpDirective
  :
  I@007/0026
  _Named
  {
    !DF I@009/0027
    argument
    :
    I@019/0027
    _OpArgument
    ?
  }
}
{
  !Ou I@008/0030
  _OpFragment
  :
  I@007/0031
  _Named
  {
    !OF I@009/0032
    type
    :
    I@015/0032
    _OutputBase
    !OF I@009/0033
    directives
    :
    I@021/0033
    _OpDirective
    []
    !OF I@009/0034
    body
    :
    I@015/0034
    _OpObject
    []
  }
}
{
  !Du I@006/0037
  _OpArgument
  |
  I@009/0038
  _OpArgValue
  I@009/0039
  _OpArgList
  I@009/0040
  _OpArgMap
}
{
  !Du I@006/0043
  _OpArgValue
  {
    !DF I@009/0044
    variable
    :
    I@019/0044
    _Identifier
  }
  |
  I@009/0045
  Value
}
{
  !Du I@006/0048
  _OpArgList
  |
  I@007/0049
  _OpArgValue
  []
}
{
  !Du I@006/0052
  _OpArgMap
  {
    !DF I@009/0053
    value
    :
    I@016/0053
    _OpArgValue
    !DF I@009/0054
    byVariable
    :
    I@021/0054
    _Identifier
  }
  |
  I@007/0055
  _OpArgValue
  [Scalar]
}
{
  !Ou I@008/0058
  _OpResult
  {
    !OF I@009/0059
    domain
    :
    I@017/0059
    _TypeRef
    <
      I@026/0059
      _SimpleKind
    >
    ?
    !OF I@009/0060
    argument
    :
    I@019/0060
    _OpArgument
    ?
    !OF I@009/0061
    body
    :
    I@015/0061
    _OpObject
    []
  }
}
{
  !Ou I@008/0064
  _OpObject
  |
  I@009/0065
  _OpField
  I@009/0066
  _OpSpread
  I@009/0067
  _OpInline
}
{
  !Ou I@008/0070
  _OpField
  {
    !OF I@009/0071
    alias
    :
    I@016/0071
    String
    ?
    !OF I@009/0072
    field
    :
    I@016/0072
    String
    !OF I@009/0073
    argument
    :
    I@019/0073
    _OpArgument
    ?
    !OF I@009/0074
    modifiers
    :
    I@020/0074
    _Modifiers
    []
    !OF I@009/0075
    directives
    :
    I@021/0075
    _OpDirective
    []
    'The body as a string as we can\'t have nested objects.'
    !OF I@009/0077
    body
    :
    I@015/0077
    String
  }
}
{
  !Ou I@008/0080
  _OpInline
  {
    !OF I@009/0081
    type
    :
    I@015/0081
    _OutputBase
    ?
    !OF I@009/0082
    directives
    :
    I@021/0082
    _OpDirective
    []
    'The body as a string as we can\'t have nested objects.'
    !OF I@009/0084
    body
    :
    I@015/0084
    String
  }
}
{
  !Ou I@008/0087
  _OpSpread
  {
    !OF I@009/0088
    fragment
    :
    I@019/0088
    String
    !OF I@009/0089
    directives
    :
    I@021/0089
    _OpDirective
    []
  }
}
]