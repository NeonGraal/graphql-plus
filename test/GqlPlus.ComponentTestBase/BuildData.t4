<#@ assembly name="System.Core" #>
<#@ output extension=".gen.cs" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Linq" #><#+
private IDictionary<string,string> TestData(FileInfo file) {
  var result = new Dictionary<string, string>();
  var test = "";
  var line = "";

  using var tests = file.OpenText();

  while ((line = tests.ReadLine()) != null) {
    if (line.StartsWith("// ")) {
      test = line.Substring(3);
      result[test] = "";
    } else {
      result[test] = (result[test] + " " + line).Trim();
    }
  }

  return result;
}

private void BuildData(string directory) {
  var sampleDir = new DirectoryInfo(this.Host.ResolvePath("Sample\\" + directory));
  var index = sampleDir.FullName.IndexOf("test") - 1;
  var relative = "." + sampleDir.FullName.Substring(index);#>
// Generated from <#= relative #>

namespace GqlPlus;
<#+  foreach (var file in sampleDir.EnumerateFiles("*.txt").OrderBy(f => f.Name)) {
      var fileName = Path.ChangeExtension(file.Name, null);
      var testData = TestData(file);
#>

public class <#= directory + fileName #>Data
  : TheoryData<string>
{
  public static readonly Dictionary<string, string> Source = new() {
<#+    foreach (string test in testData.Keys.OrderBy(k => k)) {
#>
    ["<#= test #>"] = "<#= testData[test].Replace("\\", "\\\\").Replace("\"", "\\\"") #>",
<#+    } // foreach test
#>
  };

  public <#= directory + fileName #>Data()
  {
    foreach (string key in Source.Keys) {
      Add(key);
    }
  }
}
<#+  } // foreach file
}
#>
