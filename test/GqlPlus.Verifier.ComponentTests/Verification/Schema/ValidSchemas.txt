// category-output
category { Cat } output Cat { }

// directive-param
directive @DirParam(DirParamIn) { all }
input DirParamIn { }

// enum-parent
enum EnPrnt { :EnPrntBase valPrnt }
enum EnPrntBase { valBase }

// enum-parent-alias
enum EnPrntAlias { :EnPrntAliasBase valPrnt valBase[base] }
enum EnPrntAliasBase { valBase }

// enum-parent-dup
enum EnPrntDup { :EnPrntDupBase valPrnt  }
enum EnPrntDupBase { valBase[valPrnt] }

// scalar-parent
scalar ScalPrnt { :ScalPrntBase Boolean }
scalar ScalPrntBase { Boolean }

// scalar-enum-parent
scalar ScalEnumPrnt { :ScalEnumPrntBase Enum scal_enum }
scalar ScalEnumPrntBase { Enum scal_parent }
enum EnumScalPrnt { scal_enum scal_parent }

// scalar-number-parent
scalar ScalNumPrnt { :ScalNumPrntBase Number 2>}
scalar ScalNumPrntBase { Number <2 }

// scalar-string-parent
scalar ScalStrPrnt { :ScalStrPrntBase String /a+/ }
scalar ScalStrPrntBase { String /b+/ }

// scalar-union-parent
scalar ScalUnionPrnt { :ScalUnionPrntBase Union | String }
scalar ScalUnionPrntBase { Union | Number }

// scalar-enum-value
scalar ScalEnum { Enum EnumScal.scal_enum }
enum EnumScal { scal_enum }

// scalar-enum-value-parent
scalar ScalEnumParent { Enum EnumScalParent.scal_enum }
enum EnumScalParent { :EnumParentScal scal_parent } 
enum EnumParentScal { scal_enum }

// scalar-enum-member
scalar ScalMember { enum scal_member }
enum MemberScal { scal_member }

// scalar-enum-all
scalar ScalEnumAll { enum EnumScalAll.* }
enum EnumScalAll { scal_all scal_enum_all }

// scalar-enum-all-parent
scalar ScalEnumAllParent { enum EnumScalAllParent.* }
enum EnumScalAllParent { :EnumScalParentAll scal_all }
enum EnumScalParentAll { scal_enum_all }

// scalar-enum-unique
scalar ScalEnumUnique { enum EnumScalUnique.* !EnumScalUnique.dup EnumScalDup.dup }
enum EnumScalUnique { value dup }
enum EnumScalDup { dup }

// scalar-enum-unique-parent
scalar ScalEnumUniqueParent { enum EnumScalUniqueParent.* !EnumScalUniqueParent.dup EnumScalDupParent.dup }
enum EnumScalUniqueParent { :EnumScalParentUnique value }
enum EnumScalParentUnique { dup }
enum EnumScalDupParent { dup }
