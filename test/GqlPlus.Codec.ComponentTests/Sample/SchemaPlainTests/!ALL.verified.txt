!_Schema
aliases: [Alias,Opt1,Opt2]
categories: !_Map_Categories
  !_Identifier ctgr: !_Category
    name: ctgr
    output: !_TypeRef(_TypeKind)
      name: Ctgr
      typeKind: !_TypeKind Output
    resolution: !_Resolution Parallel
  !_Identifier ctgrAlias: !_Category
    aliases: [CatA1,CatA2]
    name: ctgrAlias
    output: !_TypeRef(_TypeKind)
      name: CtgrAlias
      typeKind: !_TypeKind Output
    resolution: !_Resolution Parallel
  !_Identifier ctgrDescr: !_Category
    description: 'First category Second category'
    name: ctgrDescr
    output: !_TypeRef(_TypeKind)
      name: CtgrDescr
      typeKind: !_TypeKind Output
    resolution: !_Resolution Parallel
  !_Identifier ctgrDscrs: !_Category
    description: 'A Category described'
    name: ctgrDscrs
    output: !_TypeRef(_TypeKind)
      name: CtgrDscrs
      typeKind: !_TypeKind Output
    resolution: !_Resolution Parallel
  !_Identifier ctgrMod: !_Category
    aliases: [CatM1,CatM2]
    modifiers: [!_Modifier{modifierKind:!_ModifierKind Opt}]
    name: ctgrMod
    output: !_TypeRef(_TypeKind)
      name: CtgrMod
      typeKind: !_TypeKind Output
    resolution: !_Resolution Parallel
  !_Identifier ctgrOutp: !_Category
    name: ctgrOutp
    output: !_TypeRef(_TypeKind)
      name: CtgrOutp
      typeKind: !_TypeKind Output
    resolution: !_Resolution Parallel
  !_Identifier ctgrOutpDescr: !_Category
    name: ctgrOutpDescr
    output: !_TypeRef(_TypeKind)
      description: 'Output comment'
      name: CtgrOutpDescr
      typeKind: !_TypeKind Output
    resolution: !_Resolution Parallel
  !_Identifier ctgrOutpDict: !_Category
    modifiers: [!_ModifierDictionary{by:'*',modifierKind:!_ModifierKind Dict,typeKind:!_SimpleKind Basic}]
    name: ctgrOutpDict
    output: !_TypeRef(_TypeKind)
      name: CtgrOutpDict
      typeKind: !_TypeKind Output
    resolution: !_Resolution Parallel
  !_Identifier ctgrOutpList: !_Category
    modifiers: [!_Modifier{modifierKind:!_ModifierKind List}]
    name: ctgrOutpList
    output: !_TypeRef(_TypeKind)
      name: CtgrOutpList
      typeKind: !_TypeKind Output
    resolution: !_Resolution Parallel
  !_Identifier ctgrOutpOptl: !_Category
    modifiers: [!_Modifier{modifierKind:!_ModifierKind Opt}]
    name: ctgrOutpOptl
    output: !_TypeRef(_TypeKind)
      name: CtgrOutpOptl
      typeKind: !_TypeKind Output
    resolution: !_Resolution Parallel
  !_Identifier descrBtwn: !_Category
    name: descrBtwn
    output: !_TypeRef(_TypeKind)
      name: DescrBtwn
      typeKind: !_TypeKind Output
    resolution: !_Resolution Parallel
directives: !_Map_Directives
  !_Identifier Drct: !_Directive
    locations: !_Set(_Location){Inline:_,Spread:_}
    name: Drct
    repeatable: false
  !_Identifier DrctAlias: !_Directive
    aliases: [DirA1,DirA2]
    locations: !_Set(_Location){Field:_,Variable:_}
    name: DrctAlias
    repeatable: false
  !_Identifier DrctDescr: !_Directive
    description: 'A directive described'
    locations: !_Set(_Location){Field:_,Fragment:_,Inline:_,Operation:_,Spread:_,Variable:_}
    name: DrctDescr
    repeatable: false
  !_Identifier DrctNoParam: !_Directive
    locations: !_Set(_Location){Field:_,Fragment:_,Inline:_,Operation:_,Spread:_,Variable:_}
    name: DrctNoParam
    repeatable: false
  !_Identifier DrctParam: !_Directive
    locations: !_Set(_Location){Fragment:_,Operation:_}
    name: DrctParam
    parameters:
      - !_InputParam
        name: InDrctParam
    repeatable: false
  !_Identifier DrctParamDict: !_Directive
    locations: !_Set(_Location){Field:_,Fragment:_,Inline:_,Operation:_,Spread:_,Variable:_}
    name: DrctParamDict
    parameters:
      - !_InputParam
        modifiers: [!_ModifierDictionary{by:String,modifierKind:!_ModifierKind Dict,typeKind:!_SimpleKind Basic}]
        name: InDrctParamDict
    repeatable: false
  !_Identifier DrctParamIn: !_Directive
    locations: !_Set(_Location){Field:_,Fragment:_,Inline:_,Operation:_,Spread:_,Variable:_}
    name: DrctParamIn
    parameters:
      - !_InputParam
        name: InDrctParamIn
    repeatable: false
  !_Identifier DrctParamList: !_Directive
    locations: !_Set(_Location){Field:_,Fragment:_,Inline:_,Operation:_,Spread:_,Variable:_}
    name: DrctParamList
    parameters:
      - !_InputParam
        modifiers: [!_Modifier{modifierKind:!_ModifierKind List}]
        name: InDrctParamList
    repeatable: false
  !_Identifier DrctParamOpt: !_Directive
    locations: !_Set(_Location){Field:_,Fragment:_,Inline:_,Operation:_,Spread:_,Variable:_}
    name: DrctParamOpt
    parameters:
      - !_InputParam
        modifiers: [!_Modifier{modifierKind:!_ModifierKind Opt}]
        name: InDrctParamOpt
    repeatable: false
name: Schema
settings: !_Map_Setting
  !_Identifier descr: !_Setting
    description: 'Option Descr'
    name: descr
    value: true
  !_Identifier global: !_Setting
    name: global
    value: true
  !_Identifier merged: !_Setting
    name: merged
    value:
      - true
      - 0
types: !_Map_Type
  !_Identifier AltAltDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: AltAltDual
        type: !_DualBase
          name: String
    allFields:
      - !_ObjectFor(_DualField)
        name: alt
        object: AltAltDual
        type: !_DualBase
          name: Number
    alternates:
      - !_DualAlternate
        type: !_DualBase
          name: String
    fields:
      - !_DualField
        name: alt
        type: !_DualBase
          name: Number
    name: AltAltDual
    typeKind: !_TypeKind Dual
  !_Identifier AltAltInp: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        object: AltAltInp
        type: !_InputBase
          name: String
    allFields:
      - !_ObjectFor(_InputField)
        name: alt
        object: AltAltInp
        type: !_InputBase
          name: Number
    alternates:
      - !_InputAlternate
        type: !_InputBase
          name: String
    fields:
      - !_InputField
        name: alt
        type: !_InputBase
          name: Number
    name: AltAltInp
    typeKind: !_TypeKind Input
  !_Identifier AltAltModBoolDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: AltAltModBoolDual
        type: !_DualBase
          name: String
    allFields:
      - !_ObjectFor(_DualField)
        name: alt
        object: AltAltModBoolDual
        type: !_DualBase
          name: Number
    alternates:
      - !_DualAlternate
        type: !_DualBase
          name: String
    fields:
      - !_DualField
        name: alt
        type: !_DualBase
          name: Number
    name: AltAltModBoolDual
    typeKind: !_TypeKind Dual
  !_Identifier AltAltModBoolInp: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        object: AltAltModBoolInp
        type: !_InputBase
          name: String
    allFields:
      - !_ObjectFor(_InputField)
        name: alt
        object: AltAltModBoolInp
        type: !_InputBase
          name: Number
    alternates:
      - !_InputAlternate
        type: !_InputBase
          name: String
    fields:
      - !_InputField
        name: alt
        type: !_InputBase
          name: Number
    name: AltAltModBoolInp
    typeKind: !_TypeKind Input
  !_Identifier AltAltModBoolOutp: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: AltAltModBoolOutp
        type: !_OutputBase
          name: String
    allFields:
      - !_ObjectFor(_OutputField)
        name: alt
        object: AltAltModBoolOutp
        type: !_OutputBase
          name: Number
    alternates:
      - !_OutputAlternate
        type: !_OutputBase
          name: String
    fields:
      - !_OutputField
        name: alt
        type: !_OutputBase
          name: Number
    name: AltAltModBoolOutp
    typeKind: !_TypeKind Output
  !_Identifier AltAltModParamDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: AltAltModParamDual
        type: !_DualBase
          name: String
    allFields:
      - !_ObjectFor(_DualField)
        name: alt
        object: AltAltModParamDual
        type: !_DualBase
          name: Number
    alternates:
      - !_DualAlternate
        type: !_DualBase
          name: String
    fields:
      - !_DualField
        name: alt
        type: !_DualBase
          name: Number
    name: AltAltModParamDual
    typeKind: !_TypeKind Dual
  !_Identifier AltAltModParamInp: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        object: AltAltModParamInp
        type: !_InputBase
          name: String
    allFields:
      - !_ObjectFor(_InputField)
        name: alt
        object: AltAltModParamInp
        type: !_InputBase
          name: Number
    alternates:
      - !_InputAlternate
        type: !_InputBase
          name: String
    fields:
      - !_InputField
        name: alt
        type: !_InputBase
          name: Number
    name: AltAltModParamInp
    typeKind: !_TypeKind Input
  !_Identifier AltAltModParamOutp: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: AltAltModParamOutp
        type: !_OutputBase
          name: String
    allFields:
      - !_ObjectFor(_OutputField)
        name: alt
        object: AltAltModParamOutp
        type: !_OutputBase
          name: Number
    alternates:
      - !_OutputAlternate
        type: !_OutputBase
          name: String
    fields:
      - !_OutputField
        name: alt
        type: !_OutputBase
          name: Number
    name: AltAltModParamOutp
    typeKind: !_TypeKind Output
  !_Identifier AltAltOutp: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: AltAltOutp
        type: !_OutputBase
          name: String
    allFields:
      - !_ObjectFor(_OutputField)
        name: alt
        object: AltAltOutp
        type: !_OutputBase
          name: Number
    alternates:
      - !_OutputAlternate
        type: !_OutputBase
          name: String
    fields:
      - !_OutputField
        name: alt
        type: !_OutputBase
          name: Number
    name: AltAltOutp
    typeKind: !_TypeKind Output
  !_Identifier AltCnstAltDualDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: PrntCnstAltDualDual
        type: !_DualBase
          name: String
    allFields:
      - !_ObjectFor(_DualField)
        name: alt
        object: AltCnstAltDualDual
        type: !_DualBase
          name: Number
    fields:
      - !_DualField
        name: alt
        type: !_DualBase
          name: Number
    name: AltCnstAltDualDual
    parent: !_DualBase
      name: PrntCnstAltDualDual
    typeKind: !_TypeKind Dual
  !_Identifier AltCnstAltDualInp: !_TypeInput
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: PrntCnstAltDualInp
        type: !_DualBase
          name: String
    allFields:
      - !_ObjectFor(_InputField)
        name: alt
        object: AltCnstAltDualInp
        type: !_InputBase
          name: Number
    fields:
      - !_InputField
        name: alt
        type: !_InputBase
          name: Number
    name: AltCnstAltDualInp
    parent: !_DualBase
      name: PrntCnstAltDualInp
    typeKind: !_TypeKind Input
  !_Identifier AltCnstAltDualOutp: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: PrntCnstAltDualOutp
        type: !_DualBase
          name: String
    allFields:
      - !_ObjectFor(_OutputField)
        name: alt
        object: AltCnstAltDualOutp
        type: !_OutputBase
          name: Number
    fields:
      - !_OutputField
        name: alt
        type: !_OutputBase
          name: Number
    name: AltCnstAltDualOutp
    parent: !_DualBase
      name: PrntCnstAltDualOutp
    typeKind: !_TypeKind Output
  !_Identifier AltCnstAltObjDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: PrntCnstAltObjDual
        type: !_DualBase
          name: String
    allFields:
      - !_ObjectFor(_DualField)
        name: alt
        object: AltCnstAltObjDual
        type: !_DualBase
          name: Number
    fields:
      - !_DualField
        name: alt
        type: !_DualBase
          name: Number
    name: AltCnstAltObjDual
    parent: !_DualBase
      name: PrntCnstAltObjDual
    typeKind: !_TypeKind Dual
  !_Identifier AltCnstAltObjInp: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        object: PrntCnstAltObjInp
        type: !_InputBase
          name: String
    allFields:
      - !_ObjectFor(_InputField)
        name: alt
        object: AltCnstAltObjInp
        type: !_InputBase
          name: Number
    fields:
      - !_InputField
        name: alt
        type: !_InputBase
          name: Number
    name: AltCnstAltObjInp
    parent: !_InputBase
      name: PrntCnstAltObjInp
    typeKind: !_TypeKind Input
  !_Identifier AltCnstAltObjOutp: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: PrntCnstAltObjOutp
        type: !_OutputBase
          name: String
    allFields:
      - !_ObjectFor(_OutputField)
        name: alt
        object: AltCnstAltObjOutp
        type: !_OutputBase
          name: Number
    fields:
      - !_OutputField
        name: alt
        type: !_OutputBase
          name: Number
    name: AltCnstAltObjOutp
    parent: !_OutputBase
      name: PrntCnstAltObjOutp
    typeKind: !_TypeKind Output
  !_Identifier AltCnstFieldDualDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: PrntCnstFieldDualDual
        type: !_DualBase
          name: String
    allFields:
      - !_ObjectFor(_DualField)
        name: alt
        object: AltCnstFieldDualDual
        type: !_DualBase
          name: Number
    fields:
      - !_DualField
        name: alt
        type: !_DualBase
          name: Number
    name: AltCnstFieldDualDual
    parent: !_DualBase
      name: PrntCnstFieldDualDual
    typeKind: !_TypeKind Dual
  !_Identifier AltCnstFieldDualInp: !_TypeInput
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: PrntCnstFieldDualInp
        type: !_DualBase
          name: String
    allFields:
      - !_ObjectFor(_InputField)
        name: alt
        object: AltCnstFieldDualInp
        type: !_InputBase
          name: Number
    fields:
      - !_InputField
        name: alt
        type: !_InputBase
          name: Number
    name: AltCnstFieldDualInp
    parent: !_DualBase
      name: PrntCnstFieldDualInp
    typeKind: !_TypeKind Input
  !_Identifier AltCnstFieldDualOutp: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: PrntCnstFieldDualOutp
        type: !_DualBase
          name: String
    allFields:
      - !_ObjectFor(_OutputField)
        name: alt
        object: AltCnstFieldDualOutp
        type: !_OutputBase
          name: Number
    fields:
      - !_OutputField
        name: alt
        type: !_OutputBase
          name: Number
    name: AltCnstFieldDualOutp
    parent: !_DualBase
      name: PrntCnstFieldDualOutp
    typeKind: !_TypeKind Output
  !_Identifier AltCnstFieldObjDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: PrntCnstFieldObjDual
        type: !_DualBase
          name: String
    allFields:
      - !_ObjectFor(_DualField)
        name: alt
        object: AltCnstFieldObjDual
        type: !_DualBase
          name: Number
    fields:
      - !_DualField
        name: alt
        type: !_DualBase
          name: Number
    name: AltCnstFieldObjDual
    parent: !_DualBase
      name: PrntCnstFieldObjDual
    typeKind: !_TypeKind Dual
  !_Identifier AltCnstFieldObjInp: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        object: PrntCnstFieldObjInp
        type: !_InputBase
          name: String
    allFields:
      - !_ObjectFor(_InputField)
        name: alt
        object: AltCnstFieldObjInp
        type: !_InputBase
          name: Number
    fields:
      - !_InputField
        name: alt
        type: !_InputBase
          name: Number
    name: AltCnstFieldObjInp
    parent: !_InputBase
      name: PrntCnstFieldObjInp
    typeKind: !_TypeKind Input
  !_Identifier AltCnstFieldObjOutp: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: PrntCnstFieldObjOutp
        type: !_OutputBase
          name: String
    allFields:
      - !_ObjectFor(_OutputField)
        name: alt
        object: AltCnstFieldObjOutp
        type: !_OutputBase
          name: Number
    fields:
      - !_OutputField
        name: alt
        type: !_OutputBase
          name: Number
    name: AltCnstFieldObjOutp
    parent: !_OutputBase
      name: PrntCnstFieldObjOutp
    typeKind: !_TypeKind Output
  !_Identifier AltCnstPrntDualGrndDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: GrndCnstPrntDualGrndDual
        type: !_DualBase
          name: String
    allFields:
      - !_ObjectFor(_DualField)
        name: alt
        object: AltCnstPrntDualGrndDual
        type: !_DualBase
          name: Number
    fields:
      - !_DualField
        name: alt
        type: !_DualBase
          name: Number
    name: AltCnstPrntDualGrndDual
    parent: !_DualBase
      name: PrntCnstPrntDualGrndDual
    typeKind: !_TypeKind Dual
  !_Identifier AltCnstPrntDualGrndInp: !_TypeInput
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: GrndCnstPrntDualGrndInp
        type: !_DualBase
          name: String
    allFields:
      - !_ObjectFor(_InputField)
        name: alt
        object: AltCnstPrntDualGrndInp
        type: !_InputBase
          name: Number
    fields:
      - !_InputField
        name: alt
        type: !_InputBase
          name: Number
    name: AltCnstPrntDualGrndInp
    parent: !_DualBase
      name: PrntCnstPrntDualGrndInp
    typeKind: !_TypeKind Input
  !_Identifier AltCnstPrntDualGrndOutp: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: GrndCnstPrntDualGrndOutp
        type: !_DualBase
          name: String
    allFields:
      - !_ObjectFor(_OutputField)
        name: alt
        object: AltCnstPrntDualGrndOutp
        type: !_OutputBase
          name: Number
    fields:
      - !_OutputField
        name: alt
        type: !_OutputBase
          name: Number
    name: AltCnstPrntDualGrndOutp
    parent: !_DualBase
      name: PrntCnstPrntDualGrndOutp
    typeKind: !_TypeKind Output
  !_Identifier AltCnstPrntDualPrntDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: PrntCnstPrntDualPrntDual
        type: !_DualBase
          name: String
    allFields:
      - !_ObjectFor(_DualField)
        name: alt
        object: AltCnstPrntDualPrntDual
        type: !_DualBase
          name: Number
    fields:
      - !_DualField
        name: alt
        type: !_DualBase
          name: Number
    name: AltCnstPrntDualPrntDual
    parent: !_DualBase
      name: PrntCnstPrntDualPrntDual
    typeKind: !_TypeKind Dual
  !_Identifier AltCnstPrntDualPrntInp: !_TypeInput
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: PrntCnstPrntDualPrntInp
        type: !_DualBase
          name: String
    allFields:
      - !_ObjectFor(_InputField)
        name: alt
        object: AltCnstPrntDualPrntInp
        type: !_InputBase
          name: Number
    fields:
      - !_InputField
        name: alt
        type: !_InputBase
          name: Number
    name: AltCnstPrntDualPrntInp
    parent: !_DualBase
      name: PrntCnstPrntDualPrntInp
    typeKind: !_TypeKind Input
  !_Identifier AltCnstPrntDualPrntOutp: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: PrntCnstPrntDualPrntOutp
        type: !_DualBase
          name: String
    allFields:
      - !_ObjectFor(_OutputField)
        name: alt
        object: AltCnstPrntDualPrntOutp
        type: !_OutputBase
          name: Number
    fields:
      - !_OutputField
        name: alt
        type: !_OutputBase
          name: Number
    name: AltCnstPrntDualPrntOutp
    parent: !_DualBase
      name: PrntCnstPrntDualPrntOutp
    typeKind: !_TypeKind Output
  !_Identifier AltCnstPrntObjPrntDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: PrntCnstPrntObjPrntDual
        type: !_DualBase
          name: String
    allFields:
      - !_ObjectFor(_DualField)
        name: alt
        object: AltCnstPrntObjPrntDual
        type: !_DualBase
          name: Number
    fields:
      - !_DualField
        name: alt
        type: !_DualBase
          name: Number
    name: AltCnstPrntObjPrntDual
    parent: !_DualBase
      name: PrntCnstPrntObjPrntDual
    typeKind: !_TypeKind Dual
  !_Identifier AltCnstPrntObjPrntInp: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        object: PrntCnstPrntObjPrntInp
        type: !_InputBase
          name: String
    allFields:
      - !_ObjectFor(_InputField)
        name: alt
        object: AltCnstPrntObjPrntInp
        type: !_InputBase
          name: Number
    fields:
      - !_InputField
        name: alt
        type: !_InputBase
          name: Number
    name: AltCnstPrntObjPrntInp
    parent: !_InputBase
      name: PrntCnstPrntObjPrntInp
    typeKind: !_TypeKind Input
  !_Identifier AltCnstPrntObjPrntOutp: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: PrntCnstPrntObjPrntOutp
        type: !_OutputBase
          name: String
    allFields:
      - !_ObjectFor(_OutputField)
        name: alt
        object: AltCnstPrntObjPrntOutp
        type: !_OutputBase
          name: Number
    fields:
      - !_OutputField
        name: alt
        type: !_OutputBase
          name: Number
    name: AltCnstPrntObjPrntOutp
    parent: !_OutputBase
      name: PrntCnstPrntObjPrntOutp
    typeKind: !_TypeKind Output
  !_Identifier AltDescrDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: AltDescrDual
        type: !_DualBase
          description: 'Test Descr'
          name: String
    alternates:
      - !_DualAlternate
        type: !_DualBase
          description: 'Test Descr'
          name: String
    name: AltDescrDual
    typeKind: !_TypeKind Dual
  !_Identifier AltDescrInp: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        object: AltDescrInp
        type: !_InputBase
          description: 'Test Descr'
          name: String
    alternates:
      - !_InputAlternate
        type: !_InputBase
          description: 'Test Descr'
          name: String
    name: AltDescrInp
    typeKind: !_TypeKind Input
  !_Identifier AltDescrOutp: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: AltDescrOutp
        type: !_OutputBase
          description: 'Test Descr'
          name: String
    alternates:
      - !_OutputAlternate
        type: !_OutputBase
          description: 'Test Descr'
          name: String
    name: AltDescrOutp
    typeKind: !_TypeKind Output
  !_Identifier AltDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: AltDual
        type: !_DualBase
          name: AltAltDual
    alternates:
      - !_DualAlternate
        type: !_DualBase
          name: AltAltDual
    name: AltDual
    typeKind: !_TypeKind Dual
  !_Identifier AltDualDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: AltDualDual
        type: !_DualBase
          name: ObjDualAltDualDual
    alternates:
      - !_DualAlternate
        type: !_DualBase
          name: ObjDualAltDualDual
    name: AltDualDual
    typeKind: !_TypeKind Dual
  !_Identifier AltDualInp: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        object: AltDualInp
        type: !_DualBase
          name: ObjDualAltDualInp
    alternates:
      - !_InputAlternate
        type: !_DualBase
          name: ObjDualAltDualInp
    name: AltDualInp
    typeKind: !_TypeKind Input
  !_Identifier AltDualOutp: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: AltDualOutp
        type: !_DualBase
          name: ObjDualAltDualOutp
    alternates:
      - !_OutputAlternate
        type: !_DualBase
          name: ObjDualAltDualOutp
    name: AltDualOutp
    typeKind: !_TypeKind Output
  !_Identifier AltGnrcAltDualDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: AltGnrcAltDualDual
        type: !_DualBase
          name: String
    allFields:
      - !_ObjectFor(_DualField)
        name: alt
        object: AltGnrcAltDualDual
        type: !_DualBase
          name: Number
    alternates:
      - !_DualAlternate
        type: !_DualBase
          name: String
    fields:
      - !_DualField
        name: alt
        type: !_DualBase
          name: Number
    name: AltGnrcAltDualDual
    typeKind: !_TypeKind Dual
  !_Identifier AltGnrcAltDualInp: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: AltGnrcAltDualInp
        type: !_DualBase
          name: String
    allFields:
      - !_ObjectFor(_DualField)
        name: alt
        object: AltGnrcAltDualInp
        type: !_DualBase
          name: Number
    alternates:
      - !_DualAlternate
        type: !_DualBase
          name: String
    fields:
      - !_DualField
        name: alt
        type: !_DualBase
          name: Number
    name: AltGnrcAltDualInp
    typeKind: !_TypeKind Dual
  !_Identifier AltGnrcAltDualOutp: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: AltGnrcAltDualOutp
        type: !_DualBase
          name: String
    allFields:
      - !_ObjectFor(_DualField)
        name: alt
        object: AltGnrcAltDualOutp
        type: !_DualBase
          name: Number
    alternates:
      - !_DualAlternate
        type: !_DualBase
          name: String
    fields:
      - !_DualField
        name: alt
        type: !_DualBase
          name: Number
    name: AltGnrcAltDualOutp
    typeKind: !_TypeKind Dual
  !_Identifier AltGnrcAltParamDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: AltGnrcAltParamDual
        type: !_DualBase
          name: String
    allFields:
      - !_ObjectFor(_DualField)
        name: alt
        object: AltGnrcAltParamDual
        type: !_DualBase
          name: Number
    alternates:
      - !_DualAlternate
        type: !_DualBase
          name: String
    fields:
      - !_DualField
        name: alt
        type: !_DualBase
          name: Number
    name: AltGnrcAltParamDual
    typeKind: !_TypeKind Dual
  !_Identifier AltGnrcAltParamInp: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        object: AltGnrcAltParamInp
        type: !_InputBase
          name: String
    allFields:
      - !_ObjectFor(_InputField)
        name: alt
        object: AltGnrcAltParamInp
        type: !_InputBase
          name: Number
    alternates:
      - !_InputAlternate
        type: !_InputBase
          name: String
    fields:
      - !_InputField
        name: alt
        type: !_InputBase
          name: Number
    name: AltGnrcAltParamInp
    typeKind: !_TypeKind Input
  !_Identifier AltGnrcAltParamOutp: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: AltGnrcAltParamOutp
        type: !_OutputBase
          name: String
    allFields:
      - !_ObjectFor(_OutputField)
        name: alt
        object: AltGnrcAltParamOutp
        type: !_OutputBase
          name: Number
    alternates:
      - !_OutputAlternate
        type: !_OutputBase
          name: String
    fields:
      - !_OutputField
        name: alt
        type: !_OutputBase
          name: Number
    name: AltGnrcAltParamOutp
    typeKind: !_TypeKind Output
  !_Identifier AltGnrcFieldDualDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: AltGnrcFieldDualDual
        type: !_DualBase
          name: String
    allFields:
      - !_ObjectFor(_DualField)
        name: alt
        object: AltGnrcFieldDualDual
        type: !_DualBase
          name: Number
    alternates:
      - !_DualAlternate
        type: !_DualBase
          name: String
    fields:
      - !_DualField
        name: alt
        type: !_DualBase
          name: Number
    name: AltGnrcFieldDualDual
    typeKind: !_TypeKind Dual
  !_Identifier AltGnrcFieldDualInp: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: AltGnrcFieldDualInp
        type: !_DualBase
          name: String
    allFields:
      - !_ObjectFor(_DualField)
        name: alt
        object: AltGnrcFieldDualInp
        type: !_DualBase
          name: Number
    alternates:
      - !_DualAlternate
        type: !_DualBase
          name: String
    fields:
      - !_DualField
        name: alt
        type: !_DualBase
          name: Number
    name: AltGnrcFieldDualInp
    typeKind: !_TypeKind Dual
  !_Identifier AltGnrcFieldDualOutp: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: AltGnrcFieldDualOutp
        type: !_DualBase
          name: String
    allFields:
      - !_ObjectFor(_DualField)
        name: alt
        object: AltGnrcFieldDualOutp
        type: !_DualBase
          name: Number
    alternates:
      - !_DualAlternate
        type: !_DualBase
          name: String
    fields:
      - !_DualField
        name: alt
        type: !_DualBase
          name: Number
    name: AltGnrcFieldDualOutp
    typeKind: !_TypeKind Dual
  !_Identifier AltGnrcFieldParamDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: AltGnrcFieldParamDual
        type: !_DualBase
          name: String
    allFields:
      - !_ObjectFor(_DualField)
        name: alt
        object: AltGnrcFieldParamDual
        type: !_DualBase
          name: Number
    alternates:
      - !_DualAlternate
        type: !_DualBase
          name: String
    fields:
      - !_DualField
        name: alt
        type: !_DualBase
          name: Number
    name: AltGnrcFieldParamDual
    typeKind: !_TypeKind Dual
  !_Identifier AltGnrcFieldParamInp: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        object: AltGnrcFieldParamInp
        type: !_InputBase
          name: String
    allFields:
      - !_ObjectFor(_InputField)
        name: alt
        object: AltGnrcFieldParamInp
        type: !_InputBase
          name: Number
    alternates:
      - !_InputAlternate
        type: !_InputBase
          name: String
    fields:
      - !_InputField
        name: alt
        type: !_InputBase
          name: Number
    name: AltGnrcFieldParamInp
    typeKind: !_TypeKind Input
  !_Identifier AltGnrcFieldParamOutp: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: AltGnrcFieldParamOutp
        type: !_OutputBase
          name: String
    allFields:
      - !_ObjectFor(_OutputField)
        name: alt
        object: AltGnrcFieldParamOutp
        type: !_OutputBase
          name: Number
    alternates:
      - !_OutputAlternate
        type: !_OutputBase
          name: String
    fields:
      - !_OutputField
        name: alt
        type: !_OutputBase
          name: Number
    name: AltGnrcFieldParamOutp
    typeKind: !_TypeKind Output
  !_Identifier AltGnrcPrntDualDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: AltGnrcPrntDualDual
        type: !_DualBase
          name: String
    allFields:
      - !_ObjectFor(_DualField)
        name: alt
        object: AltGnrcPrntDualDual
        type: !_DualBase
          name: Number
    alternates:
      - !_DualAlternate
        type: !_DualBase
          name: String
    fields:
      - !_DualField
        name: alt
        type: !_DualBase
          name: Number
    name: AltGnrcPrntDualDual
    typeKind: !_TypeKind Dual
  !_Identifier AltGnrcPrntDualInp: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: AltGnrcPrntDualInp
        type: !_DualBase
          name: String
    allFields:
      - !_ObjectFor(_DualField)
        name: alt
        object: AltGnrcPrntDualInp
        type: !_DualBase
          name: Number
    alternates:
      - !_DualAlternate
        type: !_DualBase
          name: String
    fields:
      - !_DualField
        name: alt
        type: !_DualBase
          name: Number
    name: AltGnrcPrntDualInp
    typeKind: !_TypeKind Dual
  !_Identifier AltGnrcPrntDualOutp: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: AltGnrcPrntDualOutp
        type: !_DualBase
          name: String
    allFields:
      - !_ObjectFor(_DualField)
        name: alt
        object: AltGnrcPrntDualOutp
        type: !_DualBase
          name: Number
    alternates:
      - !_DualAlternate
        type: !_DualBase
          name: String
    fields:
      - !_DualField
        name: alt
        type: !_DualBase
          name: Number
    name: AltGnrcPrntDualOutp
    typeKind: !_TypeKind Dual
  !_Identifier AltGnrcPrntDualPrntDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: AltGnrcPrntDualPrntDual
        type: !_DualBase
          name: String
    allFields:
      - !_ObjectFor(_DualField)
        name: alt
        object: AltGnrcPrntDualPrntDual
        type: !_DualBase
          name: Number
    alternates:
      - !_DualAlternate
        type: !_DualBase
          name: String
    fields:
      - !_DualField
        name: alt
        type: !_DualBase
          name: Number
    name: AltGnrcPrntDualPrntDual
    typeKind: !_TypeKind Dual
  !_Identifier AltGnrcPrntDualPrntInp: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: AltGnrcPrntDualPrntInp
        type: !_DualBase
          name: String
    allFields:
      - !_ObjectFor(_DualField)
        name: alt
        object: AltGnrcPrntDualPrntInp
        type: !_DualBase
          name: Number
    alternates:
      - !_DualAlternate
        type: !_DualBase
          name: String
    fields:
      - !_DualField
        name: alt
        type: !_DualBase
          name: Number
    name: AltGnrcPrntDualPrntInp
    typeKind: !_TypeKind Dual
  !_Identifier AltGnrcPrntDualPrntOutp: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: AltGnrcPrntDualPrntOutp
        type: !_DualBase
          name: String
    allFields:
      - !_ObjectFor(_DualField)
        name: alt
        object: AltGnrcPrntDualPrntOutp
        type: !_DualBase
          name: Number
    alternates:
      - !_DualAlternate
        type: !_DualBase
          name: String
    fields:
      - !_DualField
        name: alt
        type: !_DualBase
          name: Number
    name: AltGnrcPrntDualPrntOutp
    typeKind: !_TypeKind Dual
  !_Identifier AltGnrcPrntParamDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: AltGnrcPrntParamDual
        type: !_DualBase
          name: String
    allFields:
      - !_ObjectFor(_DualField)
        name: alt
        object: AltGnrcPrntParamDual
        type: !_DualBase
          name: Number
    alternates:
      - !_DualAlternate
        type: !_DualBase
          name: String
    fields:
      - !_DualField
        name: alt
        type: !_DualBase
          name: Number
    name: AltGnrcPrntParamDual
    typeKind: !_TypeKind Dual
  !_Identifier AltGnrcPrntParamInp: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        object: AltGnrcPrntParamInp
        type: !_InputBase
          name: String
    allFields:
      - !_ObjectFor(_InputField)
        name: alt
        object: AltGnrcPrntParamInp
        type: !_InputBase
          name: Number
    alternates:
      - !_InputAlternate
        type: !_InputBase
          name: String
    fields:
      - !_InputField
        name: alt
        type: !_InputBase
          name: Number
    name: AltGnrcPrntParamInp
    typeKind: !_TypeKind Input
  !_Identifier AltGnrcPrntParamOutp: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: AltGnrcPrntParamOutp
        type: !_OutputBase
          name: String
    allFields:
      - !_ObjectFor(_OutputField)
        name: alt
        object: AltGnrcPrntParamOutp
        type: !_OutputBase
          name: Number
    alternates:
      - !_OutputAlternate
        type: !_OutputBase
          name: String
    fields:
      - !_OutputField
        name: alt
        type: !_OutputBase
          name: Number
    name: AltGnrcPrntParamOutp
    typeKind: !_TypeKind Output
  !_Identifier AltGnrcPrntParamPrntDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: AltGnrcPrntParamPrntDual
        type: !_DualBase
          name: String
    allFields:
      - !_ObjectFor(_DualField)
        name: alt
        object: AltGnrcPrntParamPrntDual
        type: !_DualBase
          name: Number
    alternates:
      - !_DualAlternate
        type: !_DualBase
          name: String
    fields:
      - !_DualField
        name: alt
        type: !_DualBase
          name: Number
    name: AltGnrcPrntParamPrntDual
    typeKind: !_TypeKind Dual
  !_Identifier AltGnrcPrntParamPrntInp: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        object: AltGnrcPrntParamPrntInp
        type: !_InputBase
          name: String
    allFields:
      - !_ObjectFor(_InputField)
        name: alt
        object: AltGnrcPrntParamPrntInp
        type: !_InputBase
          name: Number
    alternates:
      - !_InputAlternate
        type: !_InputBase
          name: String
    fields:
      - !_InputField
        name: alt
        type: !_InputBase
          name: Number
    name: AltGnrcPrntParamPrntInp
    typeKind: !_TypeKind Input
  !_Identifier AltGnrcPrntParamPrntOutp: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: AltGnrcPrntParamPrntOutp
        type: !_OutputBase
          name: String
    allFields:
      - !_ObjectFor(_OutputField)
        name: alt
        object: AltGnrcPrntParamPrntOutp
        type: !_OutputBase
          name: Number
    alternates:
      - !_OutputAlternate
        type: !_OutputBase
          name: String
    fields:
      - !_OutputField
        name: alt
        type: !_OutputBase
          name: Number
    name: AltGnrcPrntParamPrntOutp
    typeKind: !_TypeKind Output
  !_Identifier AltInp: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        object: AltInp
        type: !_InputBase
          name: AltAltInp
    alternates:
      - !_InputAlternate
        type: !_InputBase
          name: AltAltInp
    name: AltInp
    typeKind: !_TypeKind Input
  !_Identifier AltModBoolDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        collections:
          - !_ModifierDictionary
            by: ^
            modifierKind: !_ModifierKind Dict
            typeKind: !_SimpleKind Basic
        object: AltModBoolDual
        type: !_DualBase
          name: AltAltModBoolDual
    alternates:
      - !_DualAlternate
        collections:
          - !_ModifierDictionary
            by: ^
            modifierKind: !_ModifierKind Dict
            typeKind: !_SimpleKind Basic
        type: !_DualBase
          name: AltAltModBoolDual
    name: AltModBoolDual
    typeKind: !_TypeKind Dual
  !_Identifier AltModBoolInp: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        collections:
          - !_ModifierDictionary
            by: ^
            modifierKind: !_ModifierKind Dict
            typeKind: !_SimpleKind Basic
        object: AltModBoolInp
        type: !_InputBase
          name: AltAltModBoolInp
    alternates:
      - !_InputAlternate
        collections:
          - !_ModifierDictionary
            by: ^
            modifierKind: !_ModifierKind Dict
            typeKind: !_SimpleKind Basic
        type: !_InputBase
          name: AltAltModBoolInp
    name: AltModBoolInp
    typeKind: !_TypeKind Input
  !_Identifier AltModBoolOutp: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        collections:
          - !_ModifierDictionary
            by: ^
            modifierKind: !_ModifierKind Dict
            typeKind: !_SimpleKind Basic
        object: AltModBoolOutp
        type: !_OutputBase
          name: AltAltModBoolOutp
    alternates:
      - !_OutputAlternate
        collections:
          - !_ModifierDictionary
            by: ^
            modifierKind: !_ModifierKind Dict
            typeKind: !_SimpleKind Basic
        type: !_OutputBase
          name: AltAltModBoolOutp
    name: AltModBoolOutp
    typeKind: !_TypeKind Output
  !_Identifier AltModParamDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        collections:
          - !_ModifierTypeParam
            by: mod
            modifierKind: !_ModifierKind Param
        object: AltModParamDual
        type: !_DualBase
          name: AltAltModParamDual
    alternates:
      - !_DualAlternate
        collections:
          - !_ModifierTypeParam
            by: mod
            modifierKind: !_ModifierKind Param
        type: !_DualBase
          name: AltAltModParamDual
    name: AltModParamDual
    typeKind: !_TypeKind Dual
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: String
          typeKind: !_TypeKind Basic
        name: mod
  !_Identifier AltModParamInp: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        collections:
          - !_ModifierTypeParam
            by: mod
            modifierKind: !_ModifierKind Param
        object: AltModParamInp
        type: !_InputBase
          name: AltAltModParamInp
    alternates:
      - !_InputAlternate
        collections:
          - !_ModifierTypeParam
            by: mod
            modifierKind: !_ModifierKind Param
        type: !_InputBase
          name: AltAltModParamInp
    name: AltModParamInp
    typeKind: !_TypeKind Input
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: String
          typeKind: !_TypeKind Basic
        name: mod
  !_Identifier AltModParamOutp: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        collections:
          - !_ModifierTypeParam
            by: mod
            modifierKind: !_ModifierKind Param
        object: AltModParamOutp
        type: !_OutputBase
          name: AltAltModParamOutp
    alternates:
      - !_OutputAlternate
        collections:
          - !_ModifierTypeParam
            by: mod
            modifierKind: !_ModifierKind Param
        type: !_OutputBase
          name: AltAltModParamOutp
    name: AltModParamOutp
    typeKind: !_TypeKind Output
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: String
          typeKind: !_TypeKind Basic
        name: mod
  !_Identifier AltOutp: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: AltOutp
        type: !_OutputBase
          name: AltAltOutp
    alternates:
      - !_OutputAlternate
        type: !_OutputBase
          name: AltAltOutp
    name: AltOutp
    typeKind: !_TypeKind Output
  !_Identifier AltSmplDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: AltSmplDual
        type: !_DualBase
          name: String
    alternates:
      - !_DualAlternate
        type: !_DualBase
          name: String
    name: AltSmplDual
    typeKind: !_TypeKind Dual
  !_Identifier AltSmplInp: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        object: AltSmplInp
        type: !_InputBase
          name: String
    alternates:
      - !_InputAlternate
        type: !_InputBase
          name: String
    name: AltSmplInp
    typeKind: !_TypeKind Input
  !_Identifier AltSmplOutp: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: AltSmplOutp
        type: !_OutputBase
          name: String
    alternates:
      - !_OutputAlternate
        type: !_OutputBase
          name: String
    name: AltSmplOutp
    typeKind: !_TypeKind Output
  !_Identifier CnstAltDmnDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: CnstAltDmnDual
        type: !_DualBase
          name: RefCnstAltDmnDual
          typeArgs:
            - !_DualArg
              name: DomCnstAltDmnDual
    alternates:
      - !_DualAlternate
        type: !_DualBase
          name: RefCnstAltDmnDual
          typeArgs:
            - !_DualArg
              name: DomCnstAltDmnDual
    name: CnstAltDmnDual
    typeKind: !_TypeKind Dual
  !_Identifier CnstAltDmnInp: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        object: CnstAltDmnInp
        type: !_InputBase
          name: RefCnstAltDmnInp
          typeArgs:
            - !_InputArg
              name: DomCnstAltDmnInp
    alternates:
      - !_InputAlternate
        type: !_InputBase
          name: RefCnstAltDmnInp
          typeArgs:
            - !_InputArg
              name: DomCnstAltDmnInp
    name: CnstAltDmnInp
    typeKind: !_TypeKind Input
  !_Identifier CnstAltDmnOutp: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: CnstAltDmnOutp
        type: !_OutputBase
          name: RefCnstAltDmnOutp
          typeArgs:
            - !_OutputArg
              name: DomCnstAltDmnOutp
    alternates:
      - !_OutputAlternate
        type: !_OutputBase
          name: RefCnstAltDmnOutp
          typeArgs:
            - !_OutputArg
              name: DomCnstAltDmnOutp
    name: CnstAltDmnOutp
    typeKind: !_TypeKind Output
  !_Identifier CnstAltDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: CnstAltDual
        type: !_DualBase
          typeParam: type
    alternates:
      - !_DualAlternate
        type: !_DualBase
          typeParam: type
    name: CnstAltDual
    typeKind: !_TypeKind Dual
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: Number
          typeKind: !_TypeKind Basic
        name: type
  !_Identifier CnstAltDualDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: CnstAltDualDual
        type: !_DualBase
          name: RefCnstAltDualDual
          typeArgs:
            - !_DualArg
              name: AltCnstAltDualDual
    alternates:
      - !_DualAlternate
        type: !_DualBase
          name: RefCnstAltDualDual
          typeArgs:
            - !_DualArg
              name: AltCnstAltDualDual
    name: CnstAltDualDual
    typeKind: !_TypeKind Dual
  !_Identifier CnstAltDualInp: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        object: CnstAltDualInp
        type: !_InputBase
          name: RefCnstAltDualInp
          typeArgs:
            - !_InputArg
              name: AltCnstAltDualInp
    alternates:
      - !_InputAlternate
        type: !_InputBase
          name: RefCnstAltDualInp
          typeArgs:
            - !_InputArg
              name: AltCnstAltDualInp
    name: CnstAltDualInp
    typeKind: !_TypeKind Input
  !_Identifier CnstAltDualOutp: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: CnstAltDualOutp
        type: !_OutputBase
          name: RefCnstAltDualOutp
          typeArgs:
            - !_OutputArg
              name: AltCnstAltDualOutp
    alternates:
      - !_OutputAlternate
        type: !_OutputBase
          name: RefCnstAltDualOutp
          typeArgs:
            - !_OutputArg
              name: AltCnstAltDualOutp
    name: CnstAltDualOutp
    typeKind: !_TypeKind Output
  !_Identifier CnstAltInp: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        object: CnstAltInp
        type: !_InputBase
          typeParam: type
    alternates:
      - !_InputAlternate
        type: !_InputBase
          typeParam: type
    name: CnstAltInp
    typeKind: !_TypeKind Input
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: Number
          typeKind: !_TypeKind Basic
        name: type
  !_Identifier CnstAltObjDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: CnstAltObjDual
        type: !_DualBase
          name: RefCnstAltObjDual
          typeArgs:
            - !_DualArg
              name: AltCnstAltObjDual
    alternates:
      - !_DualAlternate
        type: !_DualBase
          name: RefCnstAltObjDual
          typeArgs:
            - !_DualArg
              name: AltCnstAltObjDual
    name: CnstAltObjDual
    typeKind: !_TypeKind Dual
  !_Identifier CnstAltObjInp: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        object: CnstAltObjInp
        type: !_InputBase
          name: RefCnstAltObjInp
          typeArgs:
            - !_InputArg
              name: AltCnstAltObjInp
    alternates:
      - !_InputAlternate
        type: !_InputBase
          name: RefCnstAltObjInp
          typeArgs:
            - !_InputArg
              name: AltCnstAltObjInp
    name: CnstAltObjInp
    typeKind: !_TypeKind Input
  !_Identifier CnstAltObjOutp: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: CnstAltObjOutp
        type: !_OutputBase
          name: RefCnstAltObjOutp
          typeArgs:
            - !_OutputArg
              name: AltCnstAltObjOutp
    alternates:
      - !_OutputAlternate
        type: !_OutputBase
          name: RefCnstAltObjOutp
          typeArgs:
            - !_OutputArg
              name: AltCnstAltObjOutp
    name: CnstAltObjOutp
    typeKind: !_TypeKind Output
  !_Identifier CnstAltOutp: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: CnstAltOutp
        type: !_OutputBase
          typeParam: type
    alternates:
      - !_OutputAlternate
        type: !_OutputBase
          typeParam: type
    name: CnstAltOutp
    typeKind: !_TypeKind Output
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: Number
          typeKind: !_TypeKind Basic
        name: type
  !_Identifier CnstFieldDmnDual: !_TypeDual
    allFields:
      - !_ObjectFor(_DualField)
        name: field
        object: RefCnstFieldDmnDual
        type: !_DualBase
          name: DomCnstFieldDmnDual
    name: CnstFieldDmnDual
    parent: !_DualBase
      name: RefCnstFieldDmnDual
      typeArgs:
        - !_DualArg
          name: DomCnstFieldDmnDual
    typeKind: !_TypeKind Dual
  !_Identifier CnstFieldDmnInp: !_TypeInput
    allFields:
      - !_ObjectFor(_InputField)
        name: field
        object: RefCnstFieldDmnInp
        type: !_InputBase
          name: DomCnstFieldDmnInp
    name: CnstFieldDmnInp
    parent: !_InputBase
      name: RefCnstFieldDmnInp
      typeArgs:
        - !_InputArg
          name: DomCnstFieldDmnInp
    typeKind: !_TypeKind Input
  !_Identifier CnstFieldDmnOutp: !_TypeOutput
    allFields:
      - !_ObjectFor(_OutputField)
        name: field
        object: RefCnstFieldDmnOutp
        type: !_OutputBase
          name: DomCnstFieldDmnOutp
    name: CnstFieldDmnOutp
    parent: !_OutputBase
      name: RefCnstFieldDmnOutp
      typeArgs:
        - !_OutputArg
          name: DomCnstFieldDmnOutp
    typeKind: !_TypeKind Output
  !_Identifier CnstFieldDualDual: !_TypeDual
    allFields:
      - !_ObjectFor(_DualField)
        name: field
        object: RefCnstFieldDualDual
        type: !_DualBase
          name: AltCnstFieldDualDual
    name: CnstFieldDualDual
    parent: !_DualBase
      name: RefCnstFieldDualDual
      typeArgs:
        - !_DualArg
          name: AltCnstFieldDualDual
    typeKind: !_TypeKind Dual
  !_Identifier CnstFieldDualInp: !_TypeInput
    allFields:
      - !_ObjectFor(_InputField)
        name: field
        object: RefCnstFieldDualInp
        type: !_InputBase
          name: AltCnstFieldDualInp
    name: CnstFieldDualInp
    parent: !_InputBase
      name: RefCnstFieldDualInp
      typeArgs:
        - !_InputArg
          name: AltCnstFieldDualInp
    typeKind: !_TypeKind Input
  !_Identifier CnstFieldDualOutp: !_TypeOutput
    allFields:
      - !_ObjectFor(_OutputField)
        name: field
        object: RefCnstFieldDualOutp
        type: !_OutputBase
          name: AltCnstFieldDualOutp
    name: CnstFieldDualOutp
    parent: !_OutputBase
      name: RefCnstFieldDualOutp
      typeArgs:
        - !_OutputArg
          name: AltCnstFieldDualOutp
    typeKind: !_TypeKind Output
  !_Identifier CnstFieldObjDual: !_TypeDual
    allFields:
      - !_ObjectFor(_DualField)
        name: field
        object: RefCnstFieldObjDual
        type: !_DualBase
          name: AltCnstFieldObjDual
    name: CnstFieldObjDual
    parent: !_DualBase
      name: RefCnstFieldObjDual
      typeArgs:
        - !_DualArg
          name: AltCnstFieldObjDual
    typeKind: !_TypeKind Dual
  !_Identifier CnstFieldObjInp: !_TypeInput
    allFields:
      - !_ObjectFor(_InputField)
        name: field
        object: RefCnstFieldObjInp
        type: !_InputBase
          name: AltCnstFieldObjInp
    name: CnstFieldObjInp
    parent: !_InputBase
      name: RefCnstFieldObjInp
      typeArgs:
        - !_InputArg
          name: AltCnstFieldObjInp
    typeKind: !_TypeKind Input
  !_Identifier CnstFieldObjOutp: !_TypeOutput
    allFields:
      - !_ObjectFor(_OutputField)
        name: field
        object: RefCnstFieldObjOutp
        type: !_OutputBase
          name: AltCnstFieldObjOutp
    name: CnstFieldObjOutp
    parent: !_OutputBase
      name: RefCnstFieldObjOutp
      typeArgs:
        - !_OutputArg
          name: AltCnstFieldObjOutp
    typeKind: !_TypeKind Output
  !_Identifier CnstPrntDualGrndDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: GrndCnstPrntDualGrndDual
        type: !_DualBase
          name: String
    allFields:
      - !_ObjectFor(_DualField)
        name: alt
        object: AltCnstPrntDualGrndDual
        type: !_DualBase
          name: Number
    name: CnstPrntDualGrndDual
    parent: !_DualBase
      name: RefCnstPrntDualGrndDual
      typeArgs:
        - !_DualArg
          name: AltCnstPrntDualGrndDual
    typeKind: !_TypeKind Dual
  !_Identifier CnstPrntDualGrndInp: !_TypeInput
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: GrndCnstPrntDualGrndInp
        type: !_DualBase
          name: String
    allFields:
      - !_ObjectFor(_InputField)
        name: alt
        object: AltCnstPrntDualGrndInp
        type: !_InputBase
          name: Number
    name: CnstPrntDualGrndInp
    parent: !_InputBase
      name: RefCnstPrntDualGrndInp
      typeArgs:
        - !_InputArg
          name: AltCnstPrntDualGrndInp
    typeKind: !_TypeKind Input
  !_Identifier CnstPrntDualGrndOutp: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: GrndCnstPrntDualGrndOutp
        type: !_DualBase
          name: String
    allFields:
      - !_ObjectFor(_OutputField)
        name: alt
        object: AltCnstPrntDualGrndOutp
        type: !_OutputBase
          name: Number
    name: CnstPrntDualGrndOutp
    parent: !_OutputBase
      name: RefCnstPrntDualGrndOutp
      typeArgs:
        - !_OutputArg
          name: AltCnstPrntDualGrndOutp
    typeKind: !_TypeKind Output
  !_Identifier CnstPrntDualPrntDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: PrntCnstPrntDualPrntDual
        type: !_DualBase
          name: String
    allFields:
      - !_ObjectFor(_DualField)
        name: alt
        object: AltCnstPrntDualPrntDual
        type: !_DualBase
          name: Number
    name: CnstPrntDualPrntDual
    parent: !_DualBase
      name: RefCnstPrntDualPrntDual
      typeArgs:
        - !_DualArg
          name: AltCnstPrntDualPrntDual
    typeKind: !_TypeKind Dual
  !_Identifier CnstPrntDualPrntInp: !_TypeInput
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: PrntCnstPrntDualPrntInp
        type: !_DualBase
          name: String
    allFields:
      - !_ObjectFor(_InputField)
        name: alt
        object: AltCnstPrntDualPrntInp
        type: !_InputBase
          name: Number
    name: CnstPrntDualPrntInp
    parent: !_InputBase
      name: RefCnstPrntDualPrntInp
      typeArgs:
        - !_InputArg
          name: AltCnstPrntDualPrntInp
    typeKind: !_TypeKind Input
  !_Identifier CnstPrntDualPrntOutp: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: PrntCnstPrntDualPrntOutp
        type: !_DualBase
          name: String
    allFields:
      - !_ObjectFor(_OutputField)
        name: alt
        object: AltCnstPrntDualPrntOutp
        type: !_OutputBase
          name: Number
    name: CnstPrntDualPrntOutp
    parent: !_OutputBase
      name: RefCnstPrntDualPrntOutp
      typeArgs:
        - !_OutputArg
          name: AltCnstPrntDualPrntOutp
    typeKind: !_TypeKind Output
  !_Identifier CnstPrntObjPrntDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: PrntCnstPrntObjPrntDual
        type: !_DualBase
          name: String
    allFields:
      - !_ObjectFor(_DualField)
        name: alt
        object: AltCnstPrntObjPrntDual
        type: !_DualBase
          name: Number
    name: CnstPrntObjPrntDual
    parent: !_DualBase
      name: RefCnstPrntObjPrntDual
      typeArgs:
        - !_DualArg
          name: AltCnstPrntObjPrntDual
    typeKind: !_TypeKind Dual
  !_Identifier CnstPrntObjPrntInp: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        object: PrntCnstPrntObjPrntInp
        type: !_InputBase
          name: String
    allFields:
      - !_ObjectFor(_InputField)
        name: alt
        object: AltCnstPrntObjPrntInp
        type: !_InputBase
          name: Number
    name: CnstPrntObjPrntInp
    parent: !_InputBase
      name: RefCnstPrntObjPrntInp
      typeArgs:
        - !_InputArg
          name: AltCnstPrntObjPrntInp
    typeKind: !_TypeKind Input
  !_Identifier CnstPrntObjPrntOutp: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: PrntCnstPrntObjPrntOutp
        type: !_OutputBase
          name: String
    allFields:
      - !_ObjectFor(_OutputField)
        name: alt
        object: AltCnstPrntObjPrntOutp
        type: !_OutputBase
          name: Number
    name: CnstPrntObjPrntOutp
    parent: !_OutputBase
      name: RefCnstPrntObjPrntOutp
      typeArgs:
        - !_OutputArg
          name: AltCnstPrntObjPrntOutp
    typeKind: !_TypeKind Output
  !_Identifier Ctgr: !_TypeOutput
    name: Ctgr
    typeKind: !_TypeKind Output
  !_Identifier CtgrAlias: !_TypeOutput
    name: CtgrAlias
    typeKind: !_TypeKind Output
  !_Identifier CtgrDescr: !_TypeOutput
    name: CtgrDescr
    typeKind: !_TypeKind Output
  !_Identifier CtgrDscrs: !_TypeOutput
    name: CtgrDscrs
    typeKind: !_TypeKind Output
  !_Identifier CtgrMod: !_TypeOutput
    name: CtgrMod
    typeKind: !_TypeKind Output
  !_Identifier CtgrOutp: !_TypeOutput
    name: CtgrOutp
    typeKind: !_TypeKind Output
  !_Identifier CtgrOutpDescr: !_TypeOutput
    name: CtgrOutpDescr
    typeKind: !_TypeKind Output
  !_Identifier CtgrOutpDict: !_TypeOutput
    name: CtgrOutpDict
    typeKind: !_TypeKind Output
  !_Identifier CtgrOutpList: !_TypeOutput
    name: CtgrOutpList
    typeKind: !_TypeKind Output
  !_Identifier CtgrOutpOptl: !_TypeOutput
    name: CtgrOutpOptl
    typeKind: !_TypeKind Output
  !_Identifier Descr: !_TypeOutput
    description: 'A simple description'
    name: Descr
    typeKind: !_TypeKind Output
  !_Identifier DescrBcks: !_TypeOutput
    description: 'A backslash ("\\") description'
    name: DescrBcks
    typeKind: !_TypeKind Output
  !_Identifier DescrBtwn: !_TypeOutput
    description: 'A description between'
    name: DescrBtwn
    typeKind: !_TypeKind Output
  !_Identifier DescrCmpl: !_TypeOutput
    description: 'A "more" \'Complicated\' \\ description'
    name: DescrCmpl
    typeKind: !_TypeKind Output
  !_Identifier DescrDbl: !_TypeOutput
    description: 'A \'double-quoted\' description'
    name: DescrDbl
    typeKind: !_TypeKind Output
  !_Identifier DescrSngl: !_TypeOutput
    description: 'A "single-quoted" description'
    name: DescrSngl
    typeKind: !_TypeKind Output
  !_Identifier DmnAlias: !_DomainNumber
    aliases: [Num1,Num2]
    domainKind: !_DomainKind Number
    name: DmnAlias
    typeKind: !_TypeKind Domain
  !_Identifier DmnBool: !_DomainBoolean
    allItems:
      - !_DomainItem(_DomainTrueFalse)
        domain: DmnBool
        exclude: false
        value: false
      - !_DomainItem(_DomainTrueFalse)
        domain: DmnBool
        exclude: false
        value: true
    domainKind: !_DomainKind Boolean
    items:
      - !_DomainTrueFalse
        exclude: false
        value: false
      - !_DomainTrueFalse
        exclude: false
        value: true
    name: DmnBool
    typeKind: !_TypeKind Domain
  !_Identifier DmnBoolDescr: !_DomainBoolean
    allItems:
      - !_DomainItem(_DomainTrueFalse)
        description: 'DomBool Descr'
        domain: DmnBoolDescr
        exclude: false
        value: true
    domainKind: !_DomainKind Boolean
    items:
      - !_DomainTrueFalse
        description: 'DomBool Descr'
        exclude: false
        value: true
    name: DmnBoolDescr
    typeKind: !_TypeKind Domain
  !_Identifier DmnBoolDiff: !_DomainBoolean
    allItems:
      - !_DomainItem(_DomainTrueFalse)
        domain: DmnBoolDiff
        exclude: false
        value: true
      - !_DomainItem(_DomainTrueFalse)
        domain: DmnBoolDiff
        exclude: false
        value: false
    domainKind: !_DomainKind Boolean
    items:
      - !_DomainTrueFalse
        exclude: false
        value: true
      - !_DomainTrueFalse
        exclude: false
        value: false
    name: DmnBoolDiff
    typeKind: !_TypeKind Domain
  !_Identifier DmnBoolPrnt: !_DomainBoolean
    allItems:
      - !_DomainItem(_DomainTrueFalse)
        domain: PrntDmnBoolPrnt
        exclude: false
        value: true
      - !_DomainItem(_DomainTrueFalse)
        domain: DmnBoolPrnt
        exclude: false
        value: false
    domainKind: !_DomainKind Boolean
    items:
      - !_DomainTrueFalse
        exclude: false
        value: false
    name: DmnBoolPrnt
    parent: !_TypeRef(_SimpleKind)
      name: PrntDmnBoolPrnt
      typeKind: !_SimpleKind Domain
    typeKind: !_TypeKind Domain
  !_Identifier DmnBoolPrntDescr: !_DomainBoolean
    allItems:
      - !_DomainItem(_DomainTrueFalse)
        domain: PrntDmnBoolPrntDescr
        exclude: false
        value: true
      - !_DomainItem(_DomainTrueFalse)
        domain: DmnBoolPrntDescr
        exclude: false
        value: false
    domainKind: !_DomainKind Boolean
    items:
      - !_DomainTrueFalse
        exclude: false
        value: false
    name: DmnBoolPrntDescr
    parent: !_TypeRef(_SimpleKind)
      description: 'Parent comment'
      name: PrntDmnBoolPrntDescr
      typeKind: !_SimpleKind Domain
    typeKind: !_TypeKind Domain
  !_Identifier DmnBoolSame: !_DomainBoolean
    allItems:
      - !_DomainItem(_DomainTrueFalse)
        domain: DmnBoolSame
        exclude: false
        value: true
    domainKind: !_DomainKind Boolean
    items:
      - !_DomainTrueFalse
        exclude: false
        value: true
    name: DmnBoolSame
    typeKind: !_TypeKind Domain
  !_Identifier DmnEnumAll: !_DomainEnum
    allItems:
      - !_DomainItem(_DomainLabel)
        domain: DmnEnumAll
        exclude: false
        value: !_EnumValue
          label: '*'
          name: EnumDmnEnumAll
          typeKind: !_SimpleKind Enum
    domainKind: !_DomainKind Enum
    items:
      - !_DomainLabel
        exclude: false
        value: !_EnumValue
          label: '*'
          name: EnumDmnEnumAll
          typeKind: !_SimpleKind Enum
    name: DmnEnumAll
    typeKind: !_TypeKind Domain
  !_Identifier DmnEnumAllDescr: !_DomainEnum
    allItems:
      - !_DomainItem(_DomainLabel)
        description: 'DomAll Descr'
        domain: DmnEnumAllDescr
        exclude: false
        value: !_EnumValue
          label: '*'
          name: EnumDmnEnumAllDescr
          typeKind: !_SimpleKind Enum
    domainKind: !_DomainKind Enum
    items:
      - !_DomainLabel
        description: 'DomAll Descr'
        exclude: false
        value: !_EnumValue
          label: '*'
          name: EnumDmnEnumAllDescr
          typeKind: !_SimpleKind Enum
    name: DmnEnumAllDescr
    typeKind: !_TypeKind Domain
  !_Identifier DmnEnumAllPrnt: !_DomainEnum
    allItems:
      - !_DomainItem(_DomainLabel)
        domain: DmnEnumAllPrnt
        exclude: false
        value: !_EnumValue
          label: '*'
          name: EnumDmnEnumAllPrnt
          typeKind: !_SimpleKind Enum
    domainKind: !_DomainKind Enum
    items:
      - !_DomainLabel
        exclude: false
        value: !_EnumValue
          label: '*'
          name: EnumDmnEnumAllPrnt
          typeKind: !_SimpleKind Enum
    name: DmnEnumAllPrnt
    typeKind: !_TypeKind Domain
  !_Identifier DmnEnumDescr: !_DomainEnum
    allItems:
      - !_DomainItem(_DomainLabel)
        description: 'DomEnum Descr'
        domain: DmnEnumDescr
        exclude: false
        value: !_EnumValue
          label: dmnEnumDescr
          name: EnumDmnEnumDescr
          typeKind: !_SimpleKind Enum
    domainKind: !_DomainKind Enum
    items:
      - !_DomainLabel
        description: 'DomEnum Descr'
        exclude: false
        value: !_EnumValue
          label: dmnEnumDescr
          name: EnumDmnEnumDescr
          typeKind: !_SimpleKind Enum
    name: DmnEnumDescr
    typeKind: !_TypeKind Domain
  !_Identifier DmnEnumDiff: !_DomainEnum
    allItems:
      - !_DomainItem(_DomainLabel)
        domain: DmnEnumDiff
        exclude: false
        value: !_EnumValue
          label: true
          name: Boolean
          typeKind: !_SimpleKind Enum
      - !_DomainItem(_DomainLabel)
        domain: DmnEnumDiff
        exclude: false
        value: !_EnumValue
          label: false
          name: Boolean
          typeKind: !_SimpleKind Enum
    domainKind: !_DomainKind Enum
    items:
      - !_DomainLabel
        exclude: false
        value: !_EnumValue
          label: true
          name: Boolean
          typeKind: !_SimpleKind Enum
      - !_DomainLabel
        exclude: false
        value: !_EnumValue
          label: false
          name: Boolean
          typeKind: !_SimpleKind Enum
    name: DmnEnumDiff
    typeKind: !_TypeKind Domain
  !_Identifier DmnEnumLabel: !_DomainEnum
    allItems:
      - !_DomainItem(_DomainLabel)
        domain: DmnEnumLabel
        exclude: false
        value: !_EnumValue
          label: dmnEnumLabel
          name: EnumDmnEnumLabel
          typeKind: !_SimpleKind Enum
    domainKind: !_DomainKind Enum
    items:
      - !_DomainLabel
        exclude: false
        value: !_EnumValue
          label: dmnEnumLabel
          name: EnumDmnEnumLabel
          typeKind: !_SimpleKind Enum
    name: DmnEnumLabel
    typeKind: !_TypeKind Domain
  !_Identifier DmnEnumPrnt: !_DomainEnum
    allItems:
      - !_DomainItem(_DomainLabel)
        domain: PrntDmnEnumPrnt
        exclude: false
        value: !_EnumValue
          label: prnt_dmnEnumPrnt
          name: EnumDmnEnumPrnt
          typeKind: !_SimpleKind Enum
      - !_DomainItem(_DomainLabel)
        domain: DmnEnumPrnt
        exclude: false
        value: !_EnumValue
          label: enum_dmnEnumPrnt
          name: EnumDmnEnumPrnt
          typeKind: !_SimpleKind Enum
    domainKind: !_DomainKind Enum
    items:
      - !_DomainLabel
        exclude: false
        value: !_EnumValue
          label: enum_dmnEnumPrnt
          name: EnumDmnEnumPrnt
          typeKind: !_SimpleKind Enum
    name: DmnEnumPrnt
    parent: !_TypeRef(_SimpleKind)
      name: PrntDmnEnumPrnt
      typeKind: !_SimpleKind Domain
    typeKind: !_TypeKind Domain
  !_Identifier DmnEnumPrntDescr: !_DomainEnum
    allItems:
      - !_DomainItem(_DomainLabel)
        domain: PrntDmnEnumPrntDescr
        exclude: false
        value: !_EnumValue
          label: prnt_dmnEnumPrntDescr
          name: EnumDmnEnumPrntDescr
          typeKind: !_SimpleKind Enum
      - !_DomainItem(_DomainLabel)
        domain: DmnEnumPrntDescr
        exclude: false
        value: !_EnumValue
          label: enum_dmnEnumPrntDescr
          name: EnumDmnEnumPrntDescr
          typeKind: !_SimpleKind Enum
    domainKind: !_DomainKind Enum
    items:
      - !_DomainLabel
        exclude: false
        value: !_EnumValue
          label: enum_dmnEnumPrntDescr
          name: EnumDmnEnumPrntDescr
          typeKind: !_SimpleKind Enum
    name: DmnEnumPrntDescr
    parent: !_TypeRef(_SimpleKind)
      description: 'Parent comment'
      name: PrntDmnEnumPrntDescr
      typeKind: !_SimpleKind Domain
    typeKind: !_TypeKind Domain
  !_Identifier DmnEnumSame: !_DomainEnum
    allItems:
      - !_DomainItem(_DomainLabel)
        domain: DmnEnumSame
        exclude: false
        value: !_EnumValue
          label: true
          name: Boolean
          typeKind: !_SimpleKind Enum
    domainKind: !_DomainKind Enum
    items:
      - !_DomainLabel
        exclude: false
        value: !_EnumValue
          label: true
          name: Boolean
          typeKind: !_SimpleKind Enum
    name: DmnEnumSame
    typeKind: !_TypeKind Domain
  !_Identifier DmnEnumValue: !_DomainEnum
    allItems:
      - !_DomainItem(_DomainLabel)
        domain: DmnEnumValue
        exclude: false
        value: !_EnumValue
          label: dmnEnumValue
          name: EnumDmnEnumValue
          typeKind: !_SimpleKind Enum
    domainKind: !_DomainKind Enum
    items:
      - !_DomainLabel
        exclude: false
        value: !_EnumValue
          label: dmnEnumValue
          name: EnumDmnEnumValue
          typeKind: !_SimpleKind Enum
    name: DmnEnumValue
    typeKind: !_TypeKind Domain
  !_Identifier DmnEnumValuePrnt: !_DomainEnum
    allItems:
      - !_DomainItem(_DomainLabel)
        domain: DmnEnumValuePrnt
        exclude: false
        value: !_EnumValue
          label: prnt_dmnEnumValuePrnt
          name: EnumDmnEnumValuePrnt
          typeKind: !_SimpleKind Enum
    domainKind: !_DomainKind Enum
    items:
      - !_DomainLabel
        exclude: false
        value: !_EnumValue
          label: prnt_dmnEnumValuePrnt
          name: EnumDmnEnumValuePrnt
          typeKind: !_SimpleKind Enum
    name: DmnEnumValuePrnt
    typeKind: !_TypeKind Domain
  !_Identifier DmnNmbr: !_DomainNumber
    domainKind: !_DomainKind Number
    name: DmnNmbr
    typeKind: !_TypeKind Domain
  !_Identifier DmnNmbrDescr: !_DomainNumber
    allItems:
      - !_DomainItem(_DomainRange)
        description: 'DomNumber Descr'
        domain: DmnNmbrDescr
        exclude: false
        to: 2
    domainKind: !_DomainKind Number
    items:
      - !_DomainRange
        description: 'DomNumber Descr'
        exclude: false
        to: 2
    name: DmnNmbrDescr
    typeKind: !_TypeKind Domain
  !_Identifier DmnNmbrDiff: !_DomainNumber
    allItems:
      - !_DomainItem(_DomainRange)
        domain: DmnNmbrDiff
        exclude: false
        from: 1
        to: 9
    domainKind: !_DomainKind Number
    items:
      - !_DomainRange
        exclude: false
        from: 1
        to: 9
    name: DmnNmbrDiff
    typeKind: !_TypeKind Domain
  !_Identifier DmnNmbrPrnt: !_DomainNumber
    allItems:
      - !_DomainItem(_DomainRange)
        domain: PrntDmnNmbrPrnt
        exclude: false
        to: 2
      - !_DomainItem(_DomainRange)
        domain: DmnNmbrPrnt
        exclude: false
        from: 2
    domainKind: !_DomainKind Number
    items:
      - !_DomainRange
        exclude: false
        from: 2
    name: DmnNmbrPrnt
    parent: !_TypeRef(_SimpleKind)
      name: PrntDmnNmbrPrnt
      typeKind: !_SimpleKind Domain
    typeKind: !_TypeKind Domain
  !_Identifier DmnNmbrPrntDescr: !_DomainNumber
    allItems:
      - !_DomainItem(_DomainRange)
        domain: PrntDmnNmbrPrntDescr
        exclude: false
        to: 2
      - !_DomainItem(_DomainRange)
        domain: DmnNmbrPrntDescr
        exclude: false
        from: 2
    domainKind: !_DomainKind Number
    items:
      - !_DomainRange
        exclude: false
        from: 2
    name: DmnNmbrPrntDescr
    parent: !_TypeRef(_SimpleKind)
      description: 'Parent comment'
      name: PrntDmnNmbrPrntDescr
      typeKind: !_SimpleKind Domain
    typeKind: !_TypeKind Domain
  !_Identifier DmnNmbrSame: !_DomainNumber
    allItems:
      - !_DomainItem(_DomainRange)
        domain: DmnNmbrSame
        exclude: false
        from: 1
        to: 9
    domainKind: !_DomainKind Number
    items:
      - !_DomainRange
        exclude: false
        from: 1
        to: 9
    name: DmnNmbrSame
    typeKind: !_TypeKind Domain
  !_Identifier DmnStr: !_DomainString
    domainKind: !_DomainKind String
    name: DmnStr
    typeKind: !_TypeKind Domain
  !_Identifier DmnStrDescr: !_DomainString
    allItems:
      - !_DomainItem(_DomainRegex)
        description: 'DomString Descr'
        domain: DmnStrDescr
        exclude: false
        pattern: a+
    domainKind: !_DomainKind String
    items:
      - !_DomainRegex
        description: 'DomString Descr'
        exclude: false
        pattern: a+
    name: DmnStrDescr
    typeKind: !_TypeKind Domain
  !_Identifier DmnStrDiff: !_DomainString
    allItems:
      - !_DomainItem(_DomainRegex)
        domain: DmnStrDiff
        exclude: false
        pattern: a+
    domainKind: !_DomainKind String
    items:
      - !_DomainRegex
        exclude: false
        pattern: a+
    name: DmnStrDiff
    typeKind: !_TypeKind Domain
  !_Identifier DmnStrPrnt: !_DomainString
    allItems:
      - !_DomainItem(_DomainRegex)
        domain: PrntDmnStrPrnt
        exclude: false
        pattern: b+
      - !_DomainItem(_DomainRegex)
        domain: DmnStrPrnt
        exclude: false
        pattern: a+
    domainKind: !_DomainKind String
    items:
      - !_DomainRegex
        exclude: false
        pattern: a+
    name: DmnStrPrnt
    parent: !_TypeRef(_SimpleKind)
      name: PrntDmnStrPrnt
      typeKind: !_SimpleKind Domain
    typeKind: !_TypeKind Domain
  !_Identifier DmnStrPrntDescr: !_DomainString
    allItems:
      - !_DomainItem(_DomainRegex)
        domain: PrntDmnStrPrntDescr
        exclude: false
        pattern: b+
      - !_DomainItem(_DomainRegex)
        domain: DmnStrPrntDescr
        exclude: false
        pattern: a+
    domainKind: !_DomainKind String
    items:
      - !_DomainRegex
        exclude: false
        pattern: a+
    name: DmnStrPrntDescr
    parent: !_TypeRef(_SimpleKind)
      description: 'Parent comment'
      name: PrntDmnStrPrntDescr
      typeKind: !_SimpleKind Domain
    typeKind: !_TypeKind Domain
  !_Identifier DmnStrSame: !_DomainString
    allItems:
      - !_DomainItem(_DomainRegex)
        domain: DmnStrSame
        exclude: false
        pattern: a+
    domainKind: !_DomainKind String
    items:
      - !_DomainRegex
        exclude: false
        pattern: a+
    name: DmnStrSame
    typeKind: !_TypeKind Domain
  !_Identifier DomCnstAltDmnDual: !_DomainString
    allItems:
      - !_DomainItem(_DomainRegex)
        domain: DomCnstAltDmnDual
        exclude: false
        pattern: \w+
    domainKind: !_DomainKind String
    items:
      - !_DomainRegex
        exclude: false
        pattern: \w+
    name: DomCnstAltDmnDual
    typeKind: !_TypeKind Domain
  !_Identifier DomCnstAltDmnInp: !_DomainString
    allItems:
      - !_DomainItem(_DomainRegex)
        domain: DomCnstAltDmnInp
        exclude: false
        pattern: \w+
    domainKind: !_DomainKind String
    items:
      - !_DomainRegex
        exclude: false
        pattern: \w+
    name: DomCnstAltDmnInp
    typeKind: !_TypeKind Domain
  !_Identifier DomCnstAltDmnOutp: !_DomainString
    allItems:
      - !_DomainItem(_DomainRegex)
        domain: DomCnstAltDmnOutp
        exclude: false
        pattern: \w+
    domainKind: !_DomainKind String
    items:
      - !_DomainRegex
        exclude: false
        pattern: \w+
    name: DomCnstAltDmnOutp
    typeKind: !_TypeKind Domain
  !_Identifier DomCnstFieldDmnDual: !_DomainString
    allItems:
      - !_DomainItem(_DomainRegex)
        domain: DomCnstFieldDmnDual
        exclude: false
        pattern: \w+
    domainKind: !_DomainKind String
    items:
      - !_DomainRegex
        exclude: false
        pattern: \w+
    name: DomCnstFieldDmnDual
    typeKind: !_TypeKind Domain
  !_Identifier DomCnstFieldDmnInp: !_DomainString
    allItems:
      - !_DomainItem(_DomainRegex)
        domain: DomCnstFieldDmnInp
        exclude: false
        pattern: \w+
    domainKind: !_DomainKind String
    items:
      - !_DomainRegex
        exclude: false
        pattern: \w+
    name: DomCnstFieldDmnInp
    typeKind: !_TypeKind Domain
  !_Identifier DomCnstFieldDmnOutp: !_DomainString
    allItems:
      - !_DomainItem(_DomainRegex)
        domain: DomCnstFieldDmnOutp
        exclude: false
        pattern: \w+
    domainKind: !_DomainKind String
    items:
      - !_DomainRegex
        exclude: false
        pattern: \w+
    name: DomCnstFieldDmnOutp
    typeKind: !_TypeKind Domain
  !_Identifier DomGnrcPrntEnumDomDual: !_DomainEnum
    allItems:
      - !_DomainItem(_DomainLabel)
        domain: DomGnrcPrntEnumDomDual
        exclude: false
        value: !_EnumValue
          label: gnrcPrntEnumDomDualLabel
          name: EnumGnrcPrntEnumDomDual
          typeKind: !_SimpleKind Enum
    domainKind: !_DomainKind Enum
    items:
      - !_DomainLabel
        exclude: false
        value: !_EnumValue
          label: gnrcPrntEnumDomDualLabel
          name: EnumGnrcPrntEnumDomDual
          typeKind: !_SimpleKind Enum
    name: DomGnrcPrntEnumDomDual
    typeKind: !_TypeKind Domain
  !_Identifier DomGnrcPrntEnumDomInp: !_DomainEnum
    allItems:
      - !_DomainItem(_DomainLabel)
        domain: DomGnrcPrntEnumDomInp
        exclude: false
        value: !_EnumValue
          label: gnrcPrntEnumDomInpLabel
          name: EnumGnrcPrntEnumDomInp
          typeKind: !_SimpleKind Enum
    domainKind: !_DomainKind Enum
    items:
      - !_DomainLabel
        exclude: false
        value: !_EnumValue
          label: gnrcPrntEnumDomInpLabel
          name: EnumGnrcPrntEnumDomInp
          typeKind: !_SimpleKind Enum
    name: DomGnrcPrntEnumDomInp
    typeKind: !_TypeKind Domain
  !_Identifier DomGnrcPrntEnumDomOutp: !_DomainEnum
    allItems:
      - !_DomainItem(_DomainLabel)
        domain: DomGnrcPrntEnumDomOutp
        exclude: false
        value: !_EnumValue
          label: gnrcPrntEnumDomOutpLabel
          name: EnumGnrcPrntEnumDomOutp
          typeKind: !_SimpleKind Enum
    domainKind: !_DomainKind Enum
    items:
      - !_DomainLabel
        exclude: false
        value: !_EnumValue
          label: gnrcPrntEnumDomOutpLabel
          name: EnumGnrcPrntEnumDomOutp
          typeKind: !_SimpleKind Enum
    name: DomGnrcPrntEnumDomOutp
    typeKind: !_TypeKind Domain
  !_Identifier DomGnrcPrntStrDomDual: !_DomainString
    allItems:
      - !_DomainItem(_DomainRegex)
        domain: DomGnrcPrntStrDomDual
        exclude: false
        pattern: \w+
    domainKind: !_DomainKind String
    items:
      - !_DomainRegex
        exclude: false
        pattern: \w+
    name: DomGnrcPrntStrDomDual
    typeKind: !_TypeKind Domain
  !_Identifier DomGnrcPrntStrDomInp: !_DomainString
    allItems:
      - !_DomainItem(_DomainRegex)
        domain: DomGnrcPrntStrDomInp
        exclude: false
        pattern: \w+
    domainKind: !_DomainKind String
    items:
      - !_DomainRegex
        exclude: false
        pattern: \w+
    name: DomGnrcPrntStrDomInp
    typeKind: !_TypeKind Domain
  !_Identifier DomGnrcPrntStrDomOutp: !_DomainString
    allItems:
      - !_DomainItem(_DomainRegex)
        domain: DomGnrcPrntStrDomOutp
        exclude: false
        pattern: \w+
    domainKind: !_DomainKind String
    items:
      - !_DomainRegex
        exclude: false
        pattern: \w+
    name: DomGnrcPrntStrDomOutp
    typeKind: !_TypeKind Domain
  !_Identifier DomOutpParamModDmn: !_DomainNumber
    allItems:
      - !_DomainItem(_DomainRange)
        domain: DomOutpParamModDmn
        exclude: false
        from: 1
        to: 10
    domainKind: !_DomainKind Number
    items:
      - !_DomainRange
        exclude: false
        from: 1
        to: 10
    name: DomOutpParamModDmn
    typeKind: !_TypeKind Domain
  !_Identifier DomOutpParamModParam: !_DomainNumber
    allItems:
      - !_DomainItem(_DomainRange)
        domain: DomOutpParamModParam
        exclude: false
        from: 1
        to: 10
    domainKind: !_DomainKind Number
    items:
      - !_DomainRange
        exclude: false
        from: 1
        to: 10
    name: DomOutpParamModParam
    typeKind: !_TypeKind Domain
  !_Identifier Dscrs: !_TypeOutput
    description: 'A simple description With extra'
    name: Dscrs
    typeKind: !_TypeKind Output
  !_Identifier DupDmnEnumUnqPrnt: !_TypeEnum
    allItems:
      - !_EnumLabel
        enum: DupDmnEnumUnqPrnt
        name: dmnEnumUnqPrnt
      - !_EnumLabel
        enum: DupDmnEnumUnqPrnt
        name: dup_dmnEnumUnqPrnt
    items:
      - !_Aliased
        name: dmnEnumUnqPrnt
      - !_Aliased
        name: dup_dmnEnumUnqPrnt
    name: DupDmnEnumUnqPrnt
    typeKind: !_TypeKind Enum
  !_Identifier EnumAlias: !_TypeEnum
    aliases: [En1,En2]
    allItems:
      - !_EnumLabel
        enum: EnumAlias
        name: enumAlias
    items:
      - !_Aliased
        name: enumAlias
    name: EnumAlias
    typeKind: !_TypeKind Enum
  !_Identifier EnumDescr: !_TypeEnum
    allItems:
      - !_EnumLabel
        description: 'Enum Descr'
        enum: EnumDescr
        name: enumDescr
    items:
      - !_Aliased
        description: 'Enum Descr'
        name: enumDescr
    name: EnumDescr
    typeKind: !_TypeKind Enum
  !_Identifier EnumDiff: !_TypeEnum
    allItems:
      - !_EnumLabel
        enum: EnumDiff
        name: one
      - !_EnumLabel
        enum: EnumDiff
        name: two
    items:
      - !_Aliased
        name: one
      - !_Aliased
        name: two
    name: EnumDiff
    typeKind: !_TypeKind Enum
  !_Identifier EnumDmnEnumAll: !_TypeEnum
    allItems:
      - !_EnumLabel
        enum: EnumDmnEnumAll
        name: dmnEnumAll
      - !_EnumLabel
        enum: EnumDmnEnumAll
        name: enum_dmnEnumAll
    items:
      - !_Aliased
        name: dmnEnumAll
      - !_Aliased
        name: enum_dmnEnumAll
    name: EnumDmnEnumAll
    typeKind: !_TypeKind Enum
  !_Identifier EnumDmnEnumAllDescr: !_TypeEnum
    allItems:
      - !_EnumLabel
        enum: EnumDmnEnumAllDescr
        name: dmnEnumAllDescr
      - !_EnumLabel
        enum: EnumDmnEnumAllDescr
        name: enum_dmnEnumAllDescr
    items:
      - !_Aliased
        name: dmnEnumAllDescr
      - !_Aliased
        name: enum_dmnEnumAllDescr
    name: EnumDmnEnumAllDescr
    typeKind: !_TypeKind Enum
  !_Identifier EnumDmnEnumAllPrnt: !_TypeEnum
    allItems:
      - !_EnumLabel
        enum: PrntDmnEnumAllPrnt
        name: prnt_dmnEnumAllPrnt
      - !_EnumLabel
        enum: EnumDmnEnumAllPrnt
        name: dmnEnumAllPrnt
    items:
      - !_Aliased
        name: dmnEnumAllPrnt
    name: EnumDmnEnumAllPrnt
    parent: !_TypeRef(_SimpleKind)
      name: PrntDmnEnumAllPrnt
      typeKind: !_SimpleKind Enum
    typeKind: !_TypeKind Enum
  !_Identifier EnumDmnEnumDescr: !_TypeEnum
    allItems:
      - !_EnumLabel
        enum: EnumDmnEnumDescr
        name: dmnEnumDescr
    items:
      - !_Aliased
        name: dmnEnumDescr
    name: EnumDmnEnumDescr
    typeKind: !_TypeKind Enum
  !_Identifier EnumDmnEnumLabel: !_TypeEnum
    allItems:
      - !_EnumLabel
        enum: EnumDmnEnumLabel
        name: dmnEnumLabel
    items:
      - !_Aliased
        name: dmnEnumLabel
    name: EnumDmnEnumLabel
    typeKind: !_TypeKind Enum
  !_Identifier EnumDmnEnumPrnt: !_TypeEnum
    allItems:
      - !_EnumLabel
        enum: EnumDmnEnumPrnt
        name: enum_dmnEnumPrnt
      - !_EnumLabel
        enum: EnumDmnEnumPrnt
        name: prnt_dmnEnumPrnt
    items:
      - !_Aliased
        name: enum_dmnEnumPrnt
      - !_Aliased
        name: prnt_dmnEnumPrnt
    name: EnumDmnEnumPrnt
    typeKind: !_TypeKind Enum
  !_Identifier EnumDmnEnumPrntDescr: !_TypeEnum
    allItems:
      - !_EnumLabel
        enum: EnumDmnEnumPrntDescr
        name: enum_dmnEnumPrntDescr
      - !_EnumLabel
        enum: EnumDmnEnumPrntDescr
        name: prnt_dmnEnumPrntDescr
    items:
      - !_Aliased
        name: enum_dmnEnumPrntDescr
      - !_Aliased
        name: prnt_dmnEnumPrntDescr
    name: EnumDmnEnumPrntDescr
    typeKind: !_TypeKind Enum
  !_Identifier EnumDmnEnumUnq: !_TypeEnum
    allItems:
      - !_EnumLabel
        enum: EnumDmnEnumUnq
        name: enum_dmnEnumUnq
      - !_EnumLabel
        enum: EnumDmnEnumUnq
        name: dmnEnumUnq
    items:
      - !_Aliased
        name: enum_dmnEnumUnq
      - !_Aliased
        name: dmnEnumUnq
    name: EnumDmnEnumUnq
    typeKind: !_TypeKind Enum
  !_Identifier EnumDmnEnumUnqPrnt: !_TypeEnum
    allItems:
      - !_EnumLabel
        enum: PrntDmnEnumUnqPrnt
        name: dmnEnumUnqPrnt
      - !_EnumLabel
        enum: PrntDmnEnumUnqPrnt
        name: prnt_dmnEnumUnqPrnt
      - !_EnumLabel
        enum: EnumDmnEnumUnqPrnt
        name: enum_dmnEnumUnqPrnt
    items:
      - !_Aliased
        name: enum_dmnEnumUnqPrnt
    name: EnumDmnEnumUnqPrnt
    parent: !_TypeRef(_SimpleKind)
      name: PrntDmnEnumUnqPrnt
      typeKind: !_SimpleKind Enum
    typeKind: !_TypeKind Enum
  !_Identifier EnumDmnEnumValue: !_TypeEnum
    allItems:
      - !_EnumLabel
        enum: EnumDmnEnumValue
        name: dmnEnumValue
    items:
      - !_Aliased
        name: dmnEnumValue
    name: EnumDmnEnumValue
    typeKind: !_TypeKind Enum
  !_Identifier EnumDmnEnumValuePrnt: !_TypeEnum
    allItems:
      - !_EnumLabel
        enum: PrntDmnEnumValuePrnt
        name: prnt_dmnEnumValuePrnt
      - !_EnumLabel
        enum: EnumDmnEnumValuePrnt
        name: dmnEnumValuePrnt
    items:
      - !_Aliased
        name: dmnEnumValuePrnt
    name: EnumDmnEnumValuePrnt
    parent: !_TypeRef(_SimpleKind)
      name: PrntDmnEnumValuePrnt
      typeKind: !_SimpleKind Enum
    typeKind: !_TypeKind Enum
  !_Identifier EnumDomDup: !_TypeEnum
    allItems:
      - !_EnumLabel
        enum: EnumDomDup
        name: dmnEnumUnq
      - !_EnumLabel
        enum: EnumDomDup
        name: dup_dmnEnumUnq
    items:
      - !_Aliased
        name: dmnEnumUnq
      - !_Aliased
        name: dup_dmnEnumUnq
    name: EnumDomDup
    typeKind: !_TypeKind Enum
  !_Identifier EnumFieldModEnumDual: !_TypeEnum
    allItems:
      - !_EnumLabel
        enum: EnumFieldModEnumDual
        name: value
    items:
      - !_Aliased
        name: value
    name: EnumFieldModEnumDual
    typeKind: !_TypeKind Enum
  !_Identifier EnumFieldModEnumInp: !_TypeEnum
    allItems:
      - !_EnumLabel
        enum: EnumFieldModEnumInp
        name: value
    items:
      - !_Aliased
        name: value
    name: EnumFieldModEnumInp
    typeKind: !_TypeKind Enum
  !_Identifier EnumFieldModEnumOutp: !_TypeEnum
    allItems:
      - !_EnumLabel
        enum: EnumFieldModEnumOutp
        name: value
    items:
      - !_Aliased
        name: value
    name: EnumFieldModEnumOutp
    typeKind: !_TypeKind Enum
  !_Identifier EnumGnrcPrntEnumChildDual: !_TypeEnum
    allItems:
      - !_EnumLabel
        enum: ParentGnrcPrntEnumChildDual
        name: gnrcPrntEnumChildDualParent
      - !_EnumLabel
        enum: EnumGnrcPrntEnumChildDual
        name: gnrcPrntEnumChildDualLabel
    items:
      - !_Aliased
        name: gnrcPrntEnumChildDualLabel
    name: EnumGnrcPrntEnumChildDual
    parent: !_TypeRef(_SimpleKind)
      name: ParentGnrcPrntEnumChildDual
      typeKind: !_SimpleKind Enum
    typeKind: !_TypeKind Enum
  !_Identifier EnumGnrcPrntEnumChildInp: !_TypeEnum
    allItems:
      - !_EnumLabel
        enum: ParentGnrcPrntEnumChildInp
        name: gnrcPrntEnumChildInpParent
      - !_EnumLabel
        enum: EnumGnrcPrntEnumChildInp
        name: gnrcPrntEnumChildInpLabel
    items:
      - !_Aliased
        name: gnrcPrntEnumChildInpLabel
    name: EnumGnrcPrntEnumChildInp
    parent: !_TypeRef(_SimpleKind)
      name: ParentGnrcPrntEnumChildInp
      typeKind: !_SimpleKind Enum
    typeKind: !_TypeKind Enum
  !_Identifier EnumGnrcPrntEnumChildOutp: !_TypeEnum
    allItems:
      - !_EnumLabel
        enum: ParentGnrcPrntEnumChildOutp
        name: gnrcPrntEnumChildOutpParent
      - !_EnumLabel
        enum: EnumGnrcPrntEnumChildOutp
        name: gnrcPrntEnumChildOutpLabel
    items:
      - !_Aliased
        name: gnrcPrntEnumChildOutpLabel
    name: EnumGnrcPrntEnumChildOutp
    parent: !_TypeRef(_SimpleKind)
      name: ParentGnrcPrntEnumChildOutp
      typeKind: !_SimpleKind Enum
    typeKind: !_TypeKind Enum
  !_Identifier EnumGnrcPrntEnumDomDual: !_TypeEnum
    allItems:
      - !_EnumLabel
        enum: EnumGnrcPrntEnumDomDual
        name: gnrcPrntEnumDomDualLabel
      - !_EnumLabel
        enum: EnumGnrcPrntEnumDomDual
        name: gnrcPrntEnumDomDualOther
    items:
      - !_Aliased
        name: gnrcPrntEnumDomDualLabel
      - !_Aliased
        name: gnrcPrntEnumDomDualOther
    name: EnumGnrcPrntEnumDomDual
    typeKind: !_TypeKind Enum
  !_Identifier EnumGnrcPrntEnumDomInp: !_TypeEnum
    allItems:
      - !_EnumLabel
        enum: EnumGnrcPrntEnumDomInp
        name: gnrcPrntEnumDomInpLabel
      - !_EnumLabel
        enum: EnumGnrcPrntEnumDomInp
        name: gnrcPrntEnumDomInpOther
    items:
      - !_Aliased
        name: gnrcPrntEnumDomInpLabel
      - !_Aliased
        name: gnrcPrntEnumDomInpOther
    name: EnumGnrcPrntEnumDomInp
    typeKind: !_TypeKind Enum
  !_Identifier EnumGnrcPrntEnumDomOutp: !_TypeEnum
    allItems:
      - !_EnumLabel
        enum: EnumGnrcPrntEnumDomOutp
        name: gnrcPrntEnumDomOutpLabel
      - !_EnumLabel
        enum: EnumGnrcPrntEnumDomOutp
        name: gnrcPrntEnumDomOutpOther
    items:
      - !_Aliased
        name: gnrcPrntEnumDomOutpLabel
      - !_Aliased
        name: gnrcPrntEnumDomOutpOther
    name: EnumGnrcPrntEnumDomOutp
    typeKind: !_TypeKind Enum
  !_Identifier EnumGnrcPrntEnumPrntDual: !_TypeEnum
    allItems:
      - !_EnumLabel
        enum: ParentGnrcPrntEnumPrntDual
        name: gnrcPrntEnumPrntDualParent
      - !_EnumLabel
        enum: EnumGnrcPrntEnumPrntDual
        name: gnrcPrntEnumPrntDualLabel
    items:
      - !_Aliased
        name: gnrcPrntEnumPrntDualLabel
    name: EnumGnrcPrntEnumPrntDual
    parent: !_TypeRef(_SimpleKind)
      name: ParentGnrcPrntEnumPrntDual
      typeKind: !_SimpleKind Enum
    typeKind: !_TypeKind Enum
  !_Identifier EnumGnrcPrntEnumPrntInp: !_TypeEnum
    allItems:
      - !_EnumLabel
        enum: ParentGnrcPrntEnumPrntInp
        name: gnrcPrntEnumPrntInpParent
      - !_EnumLabel
        enum: EnumGnrcPrntEnumPrntInp
        name: gnrcPrntEnumPrntInpLabel
    items:
      - !_Aliased
        name: gnrcPrntEnumPrntInpLabel
    name: EnumGnrcPrntEnumPrntInp
    parent: !_TypeRef(_SimpleKind)
      name: ParentGnrcPrntEnumPrntInp
      typeKind: !_SimpleKind Enum
    typeKind: !_TypeKind Enum
  !_Identifier EnumGnrcPrntEnumPrntOutp: !_TypeEnum
    allItems:
      - !_EnumLabel
        enum: ParentGnrcPrntEnumPrntOutp
        name: gnrcPrntEnumPrntOutpParent
      - !_EnumLabel
        enum: EnumGnrcPrntEnumPrntOutp
        name: gnrcPrntEnumPrntOutpLabel
    items:
      - !_Aliased
        name: gnrcPrntEnumPrntOutpLabel
    name: EnumGnrcPrntEnumPrntOutp
    parent: !_TypeRef(_SimpleKind)
      name: ParentGnrcPrntEnumPrntOutp
      typeKind: !_SimpleKind Enum
    typeKind: !_TypeKind Enum
  !_Identifier EnumGnrcPrntSmplEnumDual: !_TypeEnum
    allItems:
      - !_EnumLabel
        enum: EnumGnrcPrntSmplEnumDual
        name: gnrcPrntSmplEnumDual
    items:
      - !_Aliased
        name: gnrcPrntSmplEnumDual
    name: EnumGnrcPrntSmplEnumDual
    typeKind: !_TypeKind Enum
  !_Identifier EnumGnrcPrntSmplEnumInp: !_TypeEnum
    allItems:
      - !_EnumLabel
        enum: EnumGnrcPrntSmplEnumInp
        name: gnrcPrntSmplEnumInp
    items:
      - !_Aliased
        name: gnrcPrntSmplEnumInp
    name: EnumGnrcPrntSmplEnumInp
    typeKind: !_TypeKind Enum
  !_Identifier EnumGnrcPrntSmplEnumOutp: !_TypeEnum
    allItems:
      - !_EnumLabel
        enum: EnumGnrcPrntSmplEnumOutp
        name: gnrcPrntSmplEnumOutp
    items:
      - !_Aliased
        name: gnrcPrntSmplEnumOutp
    name: EnumGnrcPrntSmplEnumOutp
    typeKind: !_TypeKind Enum
  !_Identifier EnumInpFieldEnum: !_TypeEnum
    allItems:
      - !_EnumLabel
        enum: EnumInpFieldEnum
        name: inpFieldEnum
    items:
      - !_Aliased
        name: inpFieldEnum
    name: EnumInpFieldEnum
    typeKind: !_TypeKind Enum
  !_Identifier EnumObjCnstDomEnumDual: !_TypeEnum
    allItems:
      - !_EnumLabel
        enum: EnumObjCnstDomEnumDual
        name: objCnstDomEnumDual
      - !_EnumLabel
        enum: EnumObjCnstDomEnumDual
        name: other
    items:
      - !_Aliased
        name: objCnstDomEnumDual
      - !_Aliased
        name: other
    name: EnumObjCnstDomEnumDual
    typeKind: !_TypeKind Enum
  !_Identifier EnumObjCnstDomEnumInp: !_TypeEnum
    allItems:
      - !_EnumLabel
        enum: EnumObjCnstDomEnumInp
        name: objCnstDomEnumInp
      - !_EnumLabel
        enum: EnumObjCnstDomEnumInp
        name: other
    items:
      - !_Aliased
        name: objCnstDomEnumInp
      - !_Aliased
        name: other
    name: EnumObjCnstDomEnumInp
    typeKind: !_TypeKind Enum
  !_Identifier EnumObjCnstDomEnumOutp: !_TypeEnum
    allItems:
      - !_EnumLabel
        enum: EnumObjCnstDomEnumOutp
        name: objCnstDomEnumOutp
      - !_EnumLabel
        enum: EnumObjCnstDomEnumOutp
        name: other
    items:
      - !_Aliased
        name: objCnstDomEnumOutp
      - !_Aliased
        name: other
    name: EnumObjCnstDomEnumOutp
    typeKind: !_TypeKind Enum
  !_Identifier EnumObjCnstEnumDual: !_TypeEnum
    allItems:
      - !_EnumLabel
        enum: EnumObjCnstEnumDual
        name: objCnstEnumDual
    items:
      - !_Aliased
        name: objCnstEnumDual
    name: EnumObjCnstEnumDual
    typeKind: !_TypeKind Enum
  !_Identifier EnumObjCnstEnumInp: !_TypeEnum
    allItems:
      - !_EnumLabel
        enum: EnumObjCnstEnumInp
        name: objCnstEnumInp
    items:
      - !_Aliased
        name: objCnstEnumInp
    name: EnumObjCnstEnumInp
    typeKind: !_TypeKind Enum
  !_Identifier EnumObjCnstEnumOutp: !_TypeEnum
    allItems:
      - !_EnumLabel
        enum: EnumObjCnstEnumOutp
        name: objCnstEnumOutp
    items:
      - !_Aliased
        name: objCnstEnumOutp
    name: EnumObjCnstEnumOutp
    typeKind: !_TypeKind Enum
  !_Identifier EnumObjCnstEnumPrntDual: !_TypeEnum
    allItems:
      - !_EnumLabel
        enum: ParentObjCnstEnumPrntDual
        name: parentObjCnstEnumPrntDual
      - !_EnumLabel
        enum: EnumObjCnstEnumPrntDual
        name: objCnstEnumPrntDual
    items:
      - !_Aliased
        name: objCnstEnumPrntDual
    name: EnumObjCnstEnumPrntDual
    parent: !_TypeRef(_SimpleKind)
      name: ParentObjCnstEnumPrntDual
      typeKind: !_SimpleKind Enum
    typeKind: !_TypeKind Enum
  !_Identifier EnumObjCnstEnumPrntInp: !_TypeEnum
    allItems:
      - !_EnumLabel
        enum: ParentObjCnstEnumPrntInp
        name: parentObjCnstEnumPrntInp
      - !_EnumLabel
        enum: EnumObjCnstEnumPrntInp
        name: objCnstEnumPrntInp
    items:
      - !_Aliased
        name: objCnstEnumPrntInp
    name: EnumObjCnstEnumPrntInp
    parent: !_TypeRef(_SimpleKind)
      name: ParentObjCnstEnumPrntInp
      typeKind: !_SimpleKind Enum
    typeKind: !_TypeKind Enum
  !_Identifier EnumObjCnstEnumPrntOutp: !_TypeEnum
    allItems:
      - !_EnumLabel
        enum: ParentObjCnstEnumPrntOutp
        name: parentObjCnstEnumPrntOutp
      - !_EnumLabel
        enum: EnumObjCnstEnumPrntOutp
        name: objCnstEnumPrntOutp
    items:
      - !_Aliased
        name: objCnstEnumPrntOutp
    name: EnumObjCnstEnumPrntOutp
    parent: !_TypeRef(_SimpleKind)
      name: ParentObjCnstEnumPrntOutp
      typeKind: !_SimpleKind Enum
    typeKind: !_TypeKind Enum
  !_Identifier EnumObjCnstPrntEnumDual: !_TypeEnum
    allItems:
      - !_EnumLabel
        enum: ParentObjCnstPrntEnumDual
        name: parentObjCnstPrntEnumDual
      - !_EnumLabel
        enum: EnumObjCnstPrntEnumDual
        name: objCnstPrntEnumDual
    items:
      - !_Aliased
        name: objCnstPrntEnumDual
    name: EnumObjCnstPrntEnumDual
    parent: !_TypeRef(_SimpleKind)
      name: ParentObjCnstPrntEnumDual
      typeKind: !_SimpleKind Enum
    typeKind: !_TypeKind Enum
  !_Identifier EnumObjCnstPrntEnumInp: !_TypeEnum
    allItems:
      - !_EnumLabel
        enum: ParentObjCnstPrntEnumInp
        name: parentObjCnstPrntEnumInp
      - !_EnumLabel
        enum: EnumObjCnstPrntEnumInp
        name: objCnstPrntEnumInp
    items:
      - !_Aliased
        name: objCnstPrntEnumInp
    name: EnumObjCnstPrntEnumInp
    parent: !_TypeRef(_SimpleKind)
      name: ParentObjCnstPrntEnumInp
      typeKind: !_SimpleKind Enum
    typeKind: !_TypeKind Enum
  !_Identifier EnumObjCnstPrntEnumOutp: !_TypeEnum
    allItems:
      - !_EnumLabel
        enum: ParentObjCnstPrntEnumOutp
        name: parentObjCnstPrntEnumOutp
      - !_EnumLabel
        enum: EnumObjCnstPrntEnumOutp
        name: objCnstPrntEnumOutp
    items:
      - !_Aliased
        name: objCnstPrntEnumOutp
    name: EnumObjCnstPrntEnumOutp
    parent: !_TypeRef(_SimpleKind)
      name: ParentObjCnstPrntEnumOutp
      typeKind: !_SimpleKind Enum
    typeKind: !_TypeKind Enum
  !_Identifier EnumObjFieldEnumDual: !_TypeEnum
    allItems:
      - !_EnumLabel
        enum: EnumObjFieldEnumDual
        name: objFieldEnumDual
    items:
      - !_Aliased
        name: objFieldEnumDual
    name: EnumObjFieldEnumDual
    typeKind: !_TypeKind Enum
  !_Identifier EnumObjFieldEnumInp: !_TypeEnum
    allItems:
      - !_EnumLabel
        enum: EnumObjFieldEnumInp
        name: objFieldEnumInp
    items:
      - !_Aliased
        name: objFieldEnumInp
    name: EnumObjFieldEnumInp
    typeKind: !_TypeKind Enum
  !_Identifier EnumObjFieldEnumOutp: !_TypeEnum
    allItems:
      - !_EnumLabel
        enum: EnumObjFieldEnumOutp
        name: objFieldEnumOutp
    items:
      - !_Aliased
        name: objFieldEnumOutp
    name: EnumObjFieldEnumOutp
    typeKind: !_TypeKind Enum
  !_Identifier EnumObjFieldEnumPrntDual: !_TypeEnum
    allItems:
      - !_EnumLabel
        enum: PrntObjFieldEnumPrntDual
        name: prnt_objFieldEnumPrntDual
      - !_EnumLabel
        enum: EnumObjFieldEnumPrntDual
        name: objFieldEnumPrntDual
    items:
      - !_Aliased
        name: objFieldEnumPrntDual
    name: EnumObjFieldEnumPrntDual
    parent: !_TypeRef(_SimpleKind)
      name: PrntObjFieldEnumPrntDual
      typeKind: !_SimpleKind Enum
    typeKind: !_TypeKind Enum
  !_Identifier EnumObjFieldEnumPrntInp: !_TypeEnum
    allItems:
      - !_EnumLabel
        enum: PrntObjFieldEnumPrntInp
        name: prnt_objFieldEnumPrntInp
      - !_EnumLabel
        enum: EnumObjFieldEnumPrntInp
        name: objFieldEnumPrntInp
    items:
      - !_Aliased
        name: objFieldEnumPrntInp
    name: EnumObjFieldEnumPrntInp
    parent: !_TypeRef(_SimpleKind)
      name: PrntObjFieldEnumPrntInp
      typeKind: !_SimpleKind Enum
    typeKind: !_TypeKind Enum
  !_Identifier EnumObjFieldEnumPrntOutp: !_TypeEnum
    allItems:
      - !_EnumLabel
        enum: PrntObjFieldEnumPrntOutp
        name: prnt_objFieldEnumPrntOutp
      - !_EnumLabel
        enum: EnumObjFieldEnumPrntOutp
        name: objFieldEnumPrntOutp
    items:
      - !_Aliased
        name: objFieldEnumPrntOutp
    name: EnumObjFieldEnumPrntOutp
    parent: !_TypeRef(_SimpleKind)
      name: PrntObjFieldEnumPrntOutp
      typeKind: !_SimpleKind Enum
    typeKind: !_TypeKind Enum
  !_Identifier EnumObjFieldValueDescrDual: !_TypeEnum
    allItems:
      - !_EnumLabel
        enum: EnumObjFieldValueDescrDual
        name: objFieldValueDescrDual
    items:
      - !_Aliased
        name: objFieldValueDescrDual
    name: EnumObjFieldValueDescrDual
    typeKind: !_TypeKind Enum
  !_Identifier EnumObjFieldValueDescrInp: !_TypeEnum
    allItems:
      - !_EnumLabel
        enum: EnumObjFieldValueDescrInp
        name: objFieldValueDescrInp
    items:
      - !_Aliased
        name: objFieldValueDescrInp
    name: EnumObjFieldValueDescrInp
    typeKind: !_TypeKind Enum
  !_Identifier EnumObjFieldValueDescrOutp: !_TypeEnum
    allItems:
      - !_EnumLabel
        enum: EnumObjFieldValueDescrOutp
        name: objFieldValueDescrOutp
    items:
      - !_Aliased
        name: objFieldValueDescrOutp
    name: EnumObjFieldValueDescrOutp
    typeKind: !_TypeKind Enum
  !_Identifier EnumObjFieldValueDual: !_TypeEnum
    allItems:
      - !_EnumLabel
        enum: EnumObjFieldValueDual
        name: objFieldValueDual
    items:
      - !_Aliased
        name: objFieldValueDual
    name: EnumObjFieldValueDual
    typeKind: !_TypeKind Enum
  !_Identifier EnumObjFieldValueInp: !_TypeEnum
    allItems:
      - !_EnumLabel
        enum: EnumObjFieldValueInp
        name: objFieldValueInp
    items:
      - !_Aliased
        name: objFieldValueInp
    name: EnumObjFieldValueInp
    typeKind: !_TypeKind Enum
  !_Identifier EnumObjFieldValueOutp: !_TypeEnum
    allItems:
      - !_EnumLabel
        enum: EnumObjFieldValueOutp
        name: objFieldValueOutp
    items:
      - !_Aliased
        name: objFieldValueOutp
    name: EnumObjFieldValueOutp
    typeKind: !_TypeKind Enum
  !_Identifier EnumObjGnrcEnumDual: !_TypeEnum
    allItems:
      - !_EnumLabel
        enum: EnumObjGnrcEnumDual
        name: objGnrcEnumDual
    items:
      - !_Aliased
        name: objGnrcEnumDual
    name: EnumObjGnrcEnumDual
    typeKind: !_TypeKind Enum
  !_Identifier EnumObjGnrcEnumInp: !_TypeEnum
    allItems:
      - !_EnumLabel
        enum: EnumObjGnrcEnumInp
        name: objGnrcEnumInp
    items:
      - !_Aliased
        name: objGnrcEnumInp
    name: EnumObjGnrcEnumInp
    typeKind: !_TypeKind Enum
  !_Identifier EnumObjGnrcEnumOutp: !_TypeEnum
    allItems:
      - !_EnumLabel
        enum: EnumObjGnrcEnumOutp
        name: objGnrcEnumOutp
    items:
      - !_Aliased
        name: objGnrcEnumOutp
    name: EnumObjGnrcEnumOutp
    typeKind: !_TypeKind Enum
  !_Identifier EnumObjGnrcValueDual: !_TypeEnum
    allItems:
      - !_EnumLabel
        enum: EnumObjGnrcValueDual
        name: objGnrcValueDual
    items:
      - !_Aliased
        name: objGnrcValueDual
    name: EnumObjGnrcValueDual
    typeKind: !_TypeKind Enum
  !_Identifier EnumObjGnrcValueInp: !_TypeEnum
    allItems:
      - !_EnumLabel
        enum: EnumObjGnrcValueInp
        name: objGnrcValueInp
    items:
      - !_Aliased
        name: objGnrcValueInp
    name: EnumObjGnrcValueInp
    typeKind: !_TypeKind Enum
  !_Identifier EnumObjGnrcValueOutp: !_TypeEnum
    allItems:
      - !_EnumLabel
        enum: EnumObjGnrcValueOutp
        name: objGnrcValueOutp
    items:
      - !_Aliased
        name: objGnrcValueOutp
    name: EnumObjGnrcValueOutp
    typeKind: !_TypeKind Enum
  !_Identifier EnumOutpPrntGnrc: !_TypeEnum
    allItems:
      - !_EnumLabel
        enum: PrntOutpPrntGnrc
        name: prnt_outpPrntGnrc
      - !_EnumLabel
        enum: EnumOutpPrntGnrc
        name: outpPrntGnrc
    items:
      - !_Aliased
        name: outpPrntGnrc
    name: EnumOutpPrntGnrc
    parent: !_TypeRef(_SimpleKind)
      name: PrntOutpPrntGnrc
      typeKind: !_SimpleKind Enum
    typeKind: !_TypeKind Enum
  !_Identifier EnumPrnt: !_TypeEnum
    allItems:
      - !_EnumLabel
        enum: PrntEnumPrnt
        name: prnt_enumPrnt
      - !_EnumLabel
        enum: EnumPrnt
        name: enumPrnt
    items:
      - !_Aliased
        name: enumPrnt
    name: EnumPrnt
    parent: !_TypeRef(_SimpleKind)
      name: PrntEnumPrnt
      typeKind: !_SimpleKind Enum
    typeKind: !_TypeKind Enum
  !_Identifier EnumPrntAlias: !_TypeEnum
    allItems:
      - !_EnumLabel
        enum: PrntEnumPrntAlias
        name: prnt_enumPrntAlias
      - !_EnumLabel
        enum: EnumPrntAlias
        name: val_enumPrntAlias
      - !_EnumLabel
        aliases: [enumPrntAlias]
        enum: EnumPrntAlias
        name: prnt_enumPrntAlias
    items:
      - !_Aliased
        name: val_enumPrntAlias
      - !_Aliased
        aliases: [enumPrntAlias]
        name: prnt_enumPrntAlias
    name: EnumPrntAlias
    parent: !_TypeRef(_SimpleKind)
      name: PrntEnumPrntAlias
      typeKind: !_SimpleKind Enum
    typeKind: !_TypeKind Enum
  !_Identifier EnumPrntDescr: !_TypeEnum
    allItems:
      - !_EnumLabel
        enum: PrntEnumPrntDescr
        name: prnt_enumPrntDescr
      - !_EnumLabel
        enum: EnumPrntDescr
        name: enumPrntDescr
    items:
      - !_Aliased
        name: enumPrntDescr
    name: EnumPrntDescr
    parent: !_TypeRef(_SimpleKind)
      description: 'Parent comment'
      name: PrntEnumPrntDescr
      typeKind: !_SimpleKind Enum
    typeKind: !_TypeKind Enum
  !_Identifier EnumPrntDup: !_TypeEnum
    allItems:
      - !_EnumLabel
        aliases: [enumPrntDup]
        enum: PrntEnumPrntDup
        name: prnt_enumPrntDup
      - !_EnumLabel
        enum: EnumPrntDup
        name: enumPrntDup
    items:
      - !_Aliased
        name: enumPrntDup
    name: EnumPrntDup
    parent: !_TypeRef(_SimpleKind)
      name: PrntEnumPrntDup
      typeKind: !_SimpleKind Enum
    typeKind: !_TypeKind Enum
  !_Identifier EnumSame: !_TypeEnum
    allItems:
      - !_EnumLabel
        enum: EnumSame
        name: enumSame
    items:
      - !_Aliased
        name: enumSame
    name: EnumSame
    typeKind: !_TypeKind Enum
  !_Identifier EnumSamePrnt: !_TypeEnum
    allItems:
      - !_EnumLabel
        enum: PrntEnumSamePrnt
        name: prnt_enumSamePrnt
      - !_EnumLabel
        enum: EnumSamePrnt
        name: enumSamePrnt
    items:
      - !_Aliased
        name: enumSamePrnt
    name: EnumSamePrnt
    parent: !_TypeRef(_SimpleKind)
      name: PrntEnumSamePrnt
      typeKind: !_SimpleKind Enum
    typeKind: !_TypeKind Enum
  !_Identifier EnumValueAlias: !_TypeEnum
    allItems:
      - !_EnumLabel
        aliases: [val1,val2]
        enum: EnumValueAlias
        name: enumValueAlias
    items:
      - !_Aliased
        aliases: [val1,val2]
        name: enumValueAlias
    name: EnumValueAlias
    typeKind: !_TypeKind Enum
  !_Identifier FieldDescrDual: !_TypeDual
    allFields:
      - !_ObjectFor(_DualField)
        description: 'Test Descr'
        name: field
        object: FieldDescrDual
        type: !_DualBase
          name: String
    fields:
      - !_DualField
        description: 'Test Descr'
        name: field
        type: !_DualBase
          name: String
    name: FieldDescrDual
    typeKind: !_TypeKind Dual
  !_Identifier FieldDescrInp: !_TypeInput
    allFields:
      - !_ObjectFor(_InputField)
        description: 'Test Descr'
        name: field
        object: FieldDescrInp
        type: !_InputBase
          name: String
    fields:
      - !_InputField
        description: 'Test Descr'
        name: field
        type: !_InputBase
          name: String
    name: FieldDescrInp
    typeKind: !_TypeKind Input
  !_Identifier FieldDescrOutp: !_TypeOutput
    allFields:
      - !_ObjectFor(_OutputField)
        description: 'Test Descr'
        name: field
        object: FieldDescrOutp
        type: !_OutputBase
          name: String
    fields:
      - !_OutputField
        description: 'Test Descr'
        name: field
        type: !_OutputBase
          name: String
    name: FieldDescrOutp
    typeKind: !_TypeKind Output
  !_Identifier FieldDual: !_TypeDual
    allFields:
      - !_ObjectFor(_DualField)
        name: field
        object: FieldDual
        type: !_DualBase
          name: String
    fields:
      - !_DualField
        name: field
        type: !_DualBase
          name: String
    name: FieldDual
    typeKind: !_TypeKind Dual
  !_Identifier FieldDualDual: !_TypeDual
    allFields:
      - !_ObjectFor(_DualField)
        name: field
        object: FieldDualDual
        type: !_DualBase
          name: FldFieldDualDual
    fields:
      - !_DualField
        name: field
        type: !_DualBase
          name: FldFieldDualDual
    name: FieldDualDual
    typeKind: !_TypeKind Dual
  !_Identifier FieldDualInp: !_TypeInput
    allFields:
      - !_ObjectFor(_InputField)
        name: field
        object: FieldDualInp
        type: !_DualBase
          name: FldFieldDualInp
    fields:
      - !_InputField
        name: field
        type: !_DualBase
          name: FldFieldDualInp
    name: FieldDualInp
    typeKind: !_TypeKind Input
  !_Identifier FieldDualOutp: !_TypeOutput
    allFields:
      - !_ObjectFor(_OutputField)
        name: field
        object: FieldDualOutp
        type: !_DualBase
          name: FldFieldDualOutp
    fields:
      - !_OutputField
        name: field
        type: !_DualBase
          name: FldFieldDualOutp
    name: FieldDualOutp
    typeKind: !_TypeKind Output
  !_Identifier FieldGnrcPrntEnumChildDual: !_TypeDual
    allFields:
      - !_ObjectFor(_DualField)
        name: field
        object: FieldGnrcPrntEnumChildDual
        type: !_DualBase
          typeParam: ref
    fields:
      - !_DualField
        name: field
        type: !_DualBase
          typeParam: ref
    name: FieldGnrcPrntEnumChildDual
    typeKind: !_TypeKind Dual
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: EnumGnrcPrntEnumChildDual
          typeKind: !_TypeKind Enum
        name: ref
  !_Identifier FieldGnrcPrntEnumChildInp: !_TypeInput
    allFields:
      - !_ObjectFor(_InputField)
        name: field
        object: FieldGnrcPrntEnumChildInp
        type: !_InputBase
          typeParam: ref
    fields:
      - !_InputField
        name: field
        type: !_InputBase
          typeParam: ref
    name: FieldGnrcPrntEnumChildInp
    typeKind: !_TypeKind Input
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: EnumGnrcPrntEnumChildInp
          typeKind: !_TypeKind Enum
        name: ref
  !_Identifier FieldGnrcPrntEnumChildOutp: !_TypeOutput
    allFields:
      - !_ObjectFor(_OutputField)
        name: field
        object: FieldGnrcPrntEnumChildOutp
        type: !_OutputBase
          typeParam: ref
    fields:
      - !_OutputField
        name: field
        type: !_OutputBase
          typeParam: ref
    name: FieldGnrcPrntEnumChildOutp
    typeKind: !_TypeKind Output
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: EnumGnrcPrntEnumChildOutp
          typeKind: !_TypeKind Enum
        name: ref
  !_Identifier FieldGnrcPrntEnumDomDual: !_TypeDual
    allFields:
      - !_ObjectFor(_DualField)
        name: field
        object: FieldGnrcPrntEnumDomDual
        type: !_DualBase
          typeParam: ref
    fields:
      - !_DualField
        name: field
        type: !_DualBase
          typeParam: ref
    name: FieldGnrcPrntEnumDomDual
    typeKind: !_TypeKind Dual
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: EnumGnrcPrntEnumDomDual
          typeKind: !_TypeKind Enum
        name: ref
  !_Identifier FieldGnrcPrntEnumDomInp: !_TypeInput
    allFields:
      - !_ObjectFor(_InputField)
        name: field
        object: FieldGnrcPrntEnumDomInp
        type: !_InputBase
          typeParam: ref
    fields:
      - !_InputField
        name: field
        type: !_InputBase
          typeParam: ref
    name: FieldGnrcPrntEnumDomInp
    typeKind: !_TypeKind Input
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: EnumGnrcPrntEnumDomInp
          typeKind: !_TypeKind Enum
        name: ref
  !_Identifier FieldGnrcPrntEnumDomOutp: !_TypeOutput
    allFields:
      - !_ObjectFor(_OutputField)
        name: field
        object: FieldGnrcPrntEnumDomOutp
        type: !_OutputBase
          typeParam: ref
    fields:
      - !_OutputField
        name: field
        type: !_OutputBase
          typeParam: ref
    name: FieldGnrcPrntEnumDomOutp
    typeKind: !_TypeKind Output
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: EnumGnrcPrntEnumDomOutp
          typeKind: !_TypeKind Enum
        name: ref
  !_Identifier FieldGnrcPrntEnumPrntDual: !_TypeDual
    allFields:
      - !_ObjectFor(_DualField)
        name: field
        object: FieldGnrcPrntEnumPrntDual
        type: !_DualBase
          typeParam: ref
    fields:
      - !_DualField
        name: field
        type: !_DualBase
          typeParam: ref
    name: FieldGnrcPrntEnumPrntDual
    typeKind: !_TypeKind Dual
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: ParentGnrcPrntEnumPrntDual
          typeKind: !_TypeKind Enum
        name: ref
  !_Identifier FieldGnrcPrntEnumPrntInp: !_TypeInput
    allFields:
      - !_ObjectFor(_InputField)
        name: field
        object: FieldGnrcPrntEnumPrntInp
        type: !_InputBase
          typeParam: ref
    fields:
      - !_InputField
        name: field
        type: !_InputBase
          typeParam: ref
    name: FieldGnrcPrntEnumPrntInp
    typeKind: !_TypeKind Input
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: ParentGnrcPrntEnumPrntInp
          typeKind: !_TypeKind Enum
        name: ref
  !_Identifier FieldGnrcPrntEnumPrntOutp: !_TypeOutput
    allFields:
      - !_ObjectFor(_OutputField)
        name: field
        object: FieldGnrcPrntEnumPrntOutp
        type: !_OutputBase
          typeParam: ref
    fields:
      - !_OutputField
        name: field
        type: !_OutputBase
          typeParam: ref
    name: FieldGnrcPrntEnumPrntOutp
    typeKind: !_TypeKind Output
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: ParentGnrcPrntEnumPrntOutp
          typeKind: !_TypeKind Enum
        name: ref
  !_Identifier FieldGnrcPrntSmplEnumDual: !_TypeDual
    allFields:
      - !_ObjectFor(_DualField)
        name: field
        object: FieldGnrcPrntSmplEnumDual
        type: !_DualBase
          typeParam: ref
    fields:
      - !_DualField
        name: field
        type: !_DualBase
          typeParam: ref
    name: FieldGnrcPrntSmplEnumDual
    typeKind: !_TypeKind Dual
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: _Simple
          typeKind: !_TypeKind Internal
        name: ref
  !_Identifier FieldGnrcPrntSmplEnumInp: !_TypeInput
    allFields:
      - !_ObjectFor(_InputField)
        name: field
        object: FieldGnrcPrntSmplEnumInp
        type: !_InputBase
          typeParam: ref
    fields:
      - !_InputField
        name: field
        type: !_InputBase
          typeParam: ref
    name: FieldGnrcPrntSmplEnumInp
    typeKind: !_TypeKind Input
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: _Simple
          typeKind: !_TypeKind Internal
        name: ref
  !_Identifier FieldGnrcPrntSmplEnumOutp: !_TypeOutput
    allFields:
      - !_ObjectFor(_OutputField)
        name: field
        object: FieldGnrcPrntSmplEnumOutp
        type: !_OutputBase
          typeParam: ref
    fields:
      - !_OutputField
        name: field
        type: !_OutputBase
          typeParam: ref
    name: FieldGnrcPrntSmplEnumOutp
    typeKind: !_TypeKind Output
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: _Simple
          typeKind: !_TypeKind Internal
        name: ref
  !_Identifier FieldGnrcPrntStrDomDual: !_TypeDual
    allFields:
      - !_ObjectFor(_DualField)
        name: field
        object: FieldGnrcPrntStrDomDual
        type: !_DualBase
          typeParam: ref
    fields:
      - !_DualField
        name: field
        type: !_DualBase
          typeParam: ref
    name: FieldGnrcPrntStrDomDual
    typeKind: !_TypeKind Dual
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: String
          typeKind: !_TypeKind Basic
        name: ref
  !_Identifier FieldGnrcPrntStrDomInp: !_TypeInput
    allFields:
      - !_ObjectFor(_InputField)
        name: field
        object: FieldGnrcPrntStrDomInp
        type: !_InputBase
          typeParam: ref
    fields:
      - !_InputField
        name: field
        type: !_InputBase
          typeParam: ref
    name: FieldGnrcPrntStrDomInp
    typeKind: !_TypeKind Input
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: String
          typeKind: !_TypeKind Basic
        name: ref
  !_Identifier FieldGnrcPrntStrDomOutp: !_TypeOutput
    allFields:
      - !_ObjectFor(_OutputField)
        name: field
        object: FieldGnrcPrntStrDomOutp
        type: !_OutputBase
          typeParam: ref
    fields:
      - !_OutputField
        name: field
        type: !_OutputBase
          typeParam: ref
    name: FieldGnrcPrntStrDomOutp
    typeKind: !_TypeKind Output
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: String
          typeKind: !_TypeKind Basic
        name: ref
  !_Identifier FieldInp: !_TypeInput
    allFields:
      - !_ObjectFor(_InputField)
        name: field
        object: FieldInp
        type: !_InputBase
          name: String
    fields:
      - !_InputField
        name: field
        type: !_InputBase
          name: String
    name: FieldInp
    typeKind: !_TypeKind Input
  !_Identifier FieldModEnumDual: !_TypeDual
    allFields:
      - !_ObjectFor(_DualField)
        modifiers: [!_ModifierDictionary{by:EnumFieldModEnumDual,modifierKind:!_ModifierKind Dict,typeKind:!_SimpleKind Enum}]
        name: field
        object: FieldModEnumDual
        type: !_DualBase
          name: String
    fields:
      - !_DualField
        modifiers: [!_ModifierDictionary{by:EnumFieldModEnumDual,modifierKind:!_ModifierKind Dict,typeKind:!_SimpleKind Enum}]
        name: field
        type: !_DualBase
          name: String
    name: FieldModEnumDual
    typeKind: !_TypeKind Dual
  !_Identifier FieldModEnumInp: !_TypeInput
    allFields:
      - !_ObjectFor(_InputField)
        modifiers: [!_ModifierDictionary{by:EnumFieldModEnumInp,modifierKind:!_ModifierKind Dict,typeKind:!_SimpleKind Enum}]
        name: field
        object: FieldModEnumInp
        type: !_InputBase
          name: String
    fields:
      - !_InputField
        modifiers: [!_ModifierDictionary{by:EnumFieldModEnumInp,modifierKind:!_ModifierKind Dict,typeKind:!_SimpleKind Enum}]
        name: field
        type: !_InputBase
          name: String
    name: FieldModEnumInp
    typeKind: !_TypeKind Input
  !_Identifier FieldModEnumOutp: !_TypeOutput
    allFields:
      - !_ObjectFor(_OutputField)
        modifiers: [!_ModifierDictionary{by:EnumFieldModEnumOutp,modifierKind:!_ModifierKind Dict,typeKind:!_SimpleKind Enum}]
        name: field
        object: FieldModEnumOutp
        type: !_OutputBase
          name: String
    fields:
      - !_OutputField
        modifiers: [!_ModifierDictionary{by:EnumFieldModEnumOutp,modifierKind:!_ModifierKind Dict,typeKind:!_SimpleKind Enum}]
        name: field
        type: !_OutputBase
          name: String
    name: FieldModEnumOutp
    typeKind: !_TypeKind Output
  !_Identifier FieldModParamDual: !_TypeDual
    allFields:
      - !_ObjectFor(_DualField)
        modifiers: [!_ModifierTypeParam{by:mod,modifierKind:!_ModifierKind Param}]
        name: field
        object: FieldModParamDual
        type: !_DualBase
          name: FldFieldModParamDual
    fields:
      - !_DualField
        modifiers: [!_ModifierTypeParam{by:mod,modifierKind:!_ModifierKind Param}]
        name: field
        type: !_DualBase
          name: FldFieldModParamDual
    name: FieldModParamDual
    typeKind: !_TypeKind Dual
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: String
          typeKind: !_TypeKind Basic
        name: mod
  !_Identifier FieldModParamInp: !_TypeInput
    allFields:
      - !_ObjectFor(_InputField)
        modifiers: [!_ModifierTypeParam{by:mod,modifierKind:!_ModifierKind Param}]
        name: field
        object: FieldModParamInp
        type: !_InputBase
          name: FldFieldModParamInp
    fields:
      - !_InputField
        modifiers: [!_ModifierTypeParam{by:mod,modifierKind:!_ModifierKind Param}]
        name: field
        type: !_InputBase
          name: FldFieldModParamInp
    name: FieldModParamInp
    typeKind: !_TypeKind Input
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: String
          typeKind: !_TypeKind Basic
        name: mod
  !_Identifier FieldModParamOutp: !_TypeOutput
    allFields:
      - !_ObjectFor(_OutputField)
        modifiers: [!_ModifierTypeParam{by:mod,modifierKind:!_ModifierKind Param}]
        name: field
        object: FieldModParamOutp
        type: !_OutputBase
          name: FldFieldModParamOutp
    fields:
      - !_OutputField
        modifiers: [!_ModifierTypeParam{by:mod,modifierKind:!_ModifierKind Param}]
        name: field
        type: !_OutputBase
          name: FldFieldModParamOutp
    name: FieldModParamOutp
    typeKind: !_TypeKind Output
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: String
          typeKind: !_TypeKind Basic
        name: mod
  !_Identifier FieldObjDual: !_TypeDual
    allFields:
      - !_ObjectFor(_DualField)
        name: field
        object: FieldObjDual
        type: !_DualBase
          name: FldFieldObjDual
    fields:
      - !_DualField
        name: field
        type: !_DualBase
          name: FldFieldObjDual
    name: FieldObjDual
    typeKind: !_TypeKind Dual
  !_Identifier FieldObjInp: !_TypeInput
    allFields:
      - !_ObjectFor(_InputField)
        name: field
        object: FieldObjInp
        type: !_InputBase
          name: FldFieldObjInp
    fields:
      - !_InputField
        name: field
        type: !_InputBase
          name: FldFieldObjInp
    name: FieldObjInp
    typeKind: !_TypeKind Input
  !_Identifier FieldObjOutp: !_TypeOutput
    allFields:
      - !_ObjectFor(_OutputField)
        name: field
        object: FieldObjOutp
        type: !_OutputBase
          name: FldFieldObjOutp
    fields:
      - !_OutputField
        name: field
        type: !_OutputBase
          name: FldFieldObjOutp
    name: FieldObjOutp
    typeKind: !_TypeKind Output
  !_Identifier FieldOutp: !_TypeOutput
    allFields:
      - !_ObjectFor(_OutputField)
        name: field
        object: FieldOutp
        type: !_OutputBase
          name: String
    fields:
      - !_OutputField
        name: field
        type: !_OutputBase
          name: String
    name: FieldOutp
    typeKind: !_TypeKind Output
  !_Identifier FieldSmplDual: !_TypeDual
    allFields:
      - !_ObjectFor(_DualField)
        name: field
        object: FieldSmplDual
        type: !_DualBase
          name: Number
    fields:
      - !_DualField
        name: field
        type: !_DualBase
          name: Number
    name: FieldSmplDual
    typeKind: !_TypeKind Dual
  !_Identifier FieldSmplInp: !_TypeInput
    allFields:
      - !_ObjectFor(_InputField)
        name: field
        object: FieldSmplInp
        type: !_InputBase
          name: Number
    fields:
      - !_InputField
        name: field
        type: !_InputBase
          name: Number
    name: FieldSmplInp
    typeKind: !_TypeKind Input
  !_Identifier FieldSmplOutp: !_TypeOutput
    allFields:
      - !_ObjectFor(_OutputField)
        name: field
        object: FieldSmplOutp
        type: !_OutputBase
          name: Number
    fields:
      - !_OutputField
        name: field
        type: !_OutputBase
          name: Number
    name: FieldSmplOutp
    typeKind: !_TypeKind Output
  !_Identifier FieldTypeDescrDual: !_TypeDual
    allFields:
      - !_ObjectFor(_DualField)
        name: field
        object: FieldTypeDescrDual
        type: !_DualBase
          description: 'Test Descr'
          name: Number
    fields:
      - !_DualField
        name: field
        type: !_DualBase
          description: 'Test Descr'
          name: Number
    name: FieldTypeDescrDual
    typeKind: !_TypeKind Dual
  !_Identifier FieldTypeDescrInp: !_TypeInput
    allFields:
      - !_ObjectFor(_InputField)
        name: field
        object: FieldTypeDescrInp
        type: !_InputBase
          description: 'Test Descr'
          name: Number
    fields:
      - !_InputField
        name: field
        type: !_InputBase
          description: 'Test Descr'
          name: Number
    name: FieldTypeDescrInp
    typeKind: !_TypeKind Input
  !_Identifier FieldTypeDescrOutp: !_TypeOutput
    allFields:
      - !_ObjectFor(_OutputField)
        name: field
        object: FieldTypeDescrOutp
        type: !_OutputBase
          description: 'Test Descr'
          name: Number
    fields:
      - !_OutputField
        name: field
        type: !_OutputBase
          description: 'Test Descr'
          name: Number
    name: FieldTypeDescrOutp
    typeKind: !_TypeKind Output
  !_Identifier FldFieldDualDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: FldFieldDualDual
        type: !_DualBase
          name: String
    allFields:
      - !_ObjectFor(_DualField)
        name: field
        object: FldFieldDualDual
        type: !_DualBase
          name: Number
    alternates:
      - !_DualAlternate
        type: !_DualBase
          name: String
    fields:
      - !_DualField
        name: field
        type: !_DualBase
          name: Number
    name: FldFieldDualDual
    typeKind: !_TypeKind Dual
  !_Identifier FldFieldDualInp: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: FldFieldDualInp
        type: !_DualBase
          name: String
    allFields:
      - !_ObjectFor(_DualField)
        name: field
        object: FldFieldDualInp
        type: !_DualBase
          name: Number
    alternates:
      - !_DualAlternate
        type: !_DualBase
          name: String
    fields:
      - !_DualField
        name: field
        type: !_DualBase
          name: Number
    name: FldFieldDualInp
    typeKind: !_TypeKind Dual
  !_Identifier FldFieldDualOutp: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: FldFieldDualOutp
        type: !_DualBase
          name: String
    allFields:
      - !_ObjectFor(_DualField)
        name: field
        object: FldFieldDualOutp
        type: !_DualBase
          name: Number
    alternates:
      - !_DualAlternate
        type: !_DualBase
          name: String
    fields:
      - !_DualField
        name: field
        type: !_DualBase
          name: Number
    name: FldFieldDualOutp
    typeKind: !_TypeKind Dual
  !_Identifier FldFieldModParamDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: FldFieldModParamDual
        type: !_DualBase
          name: String
    allFields:
      - !_ObjectFor(_DualField)
        name: field
        object: FldFieldModParamDual
        type: !_DualBase
          name: Number
    alternates:
      - !_DualAlternate
        type: !_DualBase
          name: String
    fields:
      - !_DualField
        name: field
        type: !_DualBase
          name: Number
    name: FldFieldModParamDual
    typeKind: !_TypeKind Dual
  !_Identifier FldFieldModParamInp: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        object: FldFieldModParamInp
        type: !_InputBase
          name: String
    allFields:
      - !_ObjectFor(_InputField)
        name: field
        object: FldFieldModParamInp
        type: !_InputBase
          name: Number
    alternates:
      - !_InputAlternate
        type: !_InputBase
          name: String
    fields:
      - !_InputField
        name: field
        type: !_InputBase
          name: Number
    name: FldFieldModParamInp
    typeKind: !_TypeKind Input
  !_Identifier FldFieldModParamOutp: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: FldFieldModParamOutp
        type: !_OutputBase
          name: String
    allFields:
      - !_ObjectFor(_OutputField)
        name: field
        object: FldFieldModParamOutp
        type: !_OutputBase
          name: Number
    alternates:
      - !_OutputAlternate
        type: !_OutputBase
          name: String
    fields:
      - !_OutputField
        name: field
        type: !_OutputBase
          name: Number
    name: FldFieldModParamOutp
    typeKind: !_TypeKind Output
  !_Identifier FldFieldObjDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: FldFieldObjDual
        type: !_DualBase
          name: String
    allFields:
      - !_ObjectFor(_DualField)
        name: field
        object: FldFieldObjDual
        type: !_DualBase
          name: Number
    alternates:
      - !_DualAlternate
        type: !_DualBase
          name: String
    fields:
      - !_DualField
        name: field
        type: !_DualBase
          name: Number
    name: FldFieldObjDual
    typeKind: !_TypeKind Dual
  !_Identifier FldFieldObjInp: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        object: FldFieldObjInp
        type: !_InputBase
          name: String
    allFields:
      - !_ObjectFor(_InputField)
        name: field
        object: FldFieldObjInp
        type: !_InputBase
          name: Number
    alternates:
      - !_InputAlternate
        type: !_InputBase
          name: String
    fields:
      - !_InputField
        name: field
        type: !_InputBase
          name: Number
    name: FldFieldObjInp
    typeKind: !_TypeKind Input
  !_Identifier FldFieldObjOutp: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: FldFieldObjOutp
        type: !_OutputBase
          name: String
    allFields:
      - !_ObjectFor(_OutputField)
        name: field
        object: FldFieldObjOutp
        type: !_OutputBase
          name: Number
    alternates:
      - !_OutputAlternate
        type: !_OutputBase
          name: String
    fields:
      - !_OutputField
        name: field
        type: !_OutputBase
          name: Number
    name: FldFieldObjOutp
    typeKind: !_TypeKind Output
  !_Identifier FldInpFieldNull: !_TypeDual
    name: FldInpFieldNull
    typeKind: !_TypeKind Dual
  !_Identifier FldObjFieldAliasDual: !_TypeDual
    name: FldObjFieldAliasDual
    typeKind: !_TypeKind Dual
  !_Identifier FldObjFieldAliasInp: !_TypeInput
    name: FldObjFieldAliasInp
    typeKind: !_TypeKind Input
  !_Identifier FldObjFieldAliasOutp: !_TypeOutput
    name: FldObjFieldAliasOutp
    typeKind: !_TypeKind Output
  !_Identifier FldObjFieldDual: !_TypeDual
    name: FldObjFieldDual
    typeKind: !_TypeKind Dual
  !_Identifier FldObjFieldInp: !_TypeInput
    name: FldObjFieldInp
    typeKind: !_TypeKind Input
  !_Identifier FldObjFieldOutp: !_TypeOutput
    name: FldObjFieldOutp
    typeKind: !_TypeKind Output
  !_Identifier FldOutpDescrParam: !_TypeDual
    name: FldOutpDescrParam
    typeKind: !_TypeKind Dual
  !_Identifier FldOutpFieldParam: !_TypeDual
    name: FldOutpFieldParam
    typeKind: !_TypeKind Dual
  !_Identifier FldOutpParam: !_TypeDual
    name: FldOutpParam
    typeKind: !_TypeKind Dual
  !_Identifier FldOutpParamDescr: !_TypeDual
    name: FldOutpParamDescr
    typeKind: !_TypeKind Dual
  !_Identifier FldOutpParamTypeDescr: !_TypeDual
    name: FldOutpParamTypeDescr
    typeKind: !_TypeKind Dual
  !_Identifier FldOutpPrntParam: !_TypeDual
    name: FldOutpPrntParam
    typeKind: !_TypeKind Dual
  !_Identifier GnrcAltArgDescrDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: GnrcAltArgDescrDual
        type: !_DualBase
          name: RefGnrcAltArgDescrDual
          typeArgs:
            - !_DualArg
              description: 'Test Descr'
              typeParam: type
    alternates:
      - !_DualAlternate
        type: !_DualBase
          name: RefGnrcAltArgDescrDual
          typeArgs:
            - !_DualArg
              description: 'Test Descr'
              typeParam: type
    name: GnrcAltArgDescrDual
    typeKind: !_TypeKind Dual
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: String
          typeKind: !_TypeKind Basic
        name: type
  !_Identifier GnrcAltArgDescrInp: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        object: GnrcAltArgDescrInp
        type: !_InputBase
          name: RefGnrcAltArgDescrInp
          typeArgs:
            - !_InputArg
              description: 'Test Descr'
              typeParam: type
    alternates:
      - !_InputAlternate
        type: !_InputBase
          name: RefGnrcAltArgDescrInp
          typeArgs:
            - !_InputArg
              description: 'Test Descr'
              typeParam: type
    name: GnrcAltArgDescrInp
    typeKind: !_TypeKind Input
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: String
          typeKind: !_TypeKind Basic
        name: type
  !_Identifier GnrcAltArgDescrOutp: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: GnrcAltArgDescrOutp
        type: !_OutputBase
          name: RefGnrcAltArgDescrOutp
          typeArgs:
            - !_OutputArg
              description: 'Test Descr'
              typeParam: type
    alternates:
      - !_OutputAlternate
        type: !_OutputBase
          name: RefGnrcAltArgDescrOutp
          typeArgs:
            - !_OutputArg
              description: 'Test Descr'
              typeParam: type
    name: GnrcAltArgDescrOutp
    typeKind: !_TypeKind Output
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: String
          typeKind: !_TypeKind Basic
        name: type
  !_Identifier GnrcAltArgDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: GnrcAltArgDual
        type: !_DualBase
          name: RefGnrcAltArgDual
          typeArgs:
            - !_DualArg
              typeParam: type
    alternates:
      - !_DualAlternate
        type: !_DualBase
          name: RefGnrcAltArgDual
          typeArgs:
            - !_DualArg
              typeParam: type
    name: GnrcAltArgDual
    typeKind: !_TypeKind Dual
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: String
          typeKind: !_TypeKind Basic
        name: type
  !_Identifier GnrcAltArgInp: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        object: GnrcAltArgInp
        type: !_InputBase
          name: RefGnrcAltArgInp
          typeArgs:
            - !_InputArg
              typeParam: type
    alternates:
      - !_InputAlternate
        type: !_InputBase
          name: RefGnrcAltArgInp
          typeArgs:
            - !_InputArg
              typeParam: type
    name: GnrcAltArgInp
    typeKind: !_TypeKind Input
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: String
          typeKind: !_TypeKind Basic
        name: type
  !_Identifier GnrcAltArgOutp: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: GnrcAltArgOutp
        type: !_OutputBase
          name: RefGnrcAltArgOutp
          typeArgs:
            - !_OutputArg
              typeParam: type
    alternates:
      - !_OutputAlternate
        type: !_OutputBase
          name: RefGnrcAltArgOutp
          typeArgs:
            - !_OutputArg
              typeParam: type
    name: GnrcAltArgOutp
    typeKind: !_TypeKind Output
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: String
          typeKind: !_TypeKind Basic
        name: type
  !_Identifier GnrcAltDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: GnrcAltDual
        type: !_DualBase
          typeParam: type
    alternates:
      - !_DualAlternate
        type: !_DualBase
          typeParam: type
    name: GnrcAltDual
    typeKind: !_TypeKind Dual
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: String
          typeKind: !_TypeKind Basic
        name: type
  !_Identifier GnrcAltDualDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: GnrcAltDualDual
        type: !_DualBase
          name: RefGnrcAltDualDual
          typeArgs:
            - !_DualArg
              name: AltGnrcAltDualDual
    alternates:
      - !_DualAlternate
        type: !_DualBase
          name: RefGnrcAltDualDual
          typeArgs:
            - !_DualArg
              name: AltGnrcAltDualDual
    name: GnrcAltDualDual
    typeKind: !_TypeKind Dual
  !_Identifier GnrcAltDualInp: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        object: GnrcAltDualInp
        type: !_InputBase
          name: RefGnrcAltDualInp
          typeArgs:
            - !_DualArg
              name: AltGnrcAltDualInp
    alternates:
      - !_InputAlternate
        type: !_InputBase
          name: RefGnrcAltDualInp
          typeArgs:
            - !_DualArg
              name: AltGnrcAltDualInp
    name: GnrcAltDualInp
    typeKind: !_TypeKind Input
  !_Identifier GnrcAltDualOutp: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: GnrcAltDualOutp
        type: !_OutputBase
          name: RefGnrcAltDualOutp
          typeArgs:
            - !_DualArg
              name: AltGnrcAltDualOutp
    alternates:
      - !_OutputAlternate
        type: !_OutputBase
          name: RefGnrcAltDualOutp
          typeArgs:
            - !_DualArg
              name: AltGnrcAltDualOutp
    name: GnrcAltDualOutp
    typeKind: !_TypeKind Output
  !_Identifier GnrcAltInp: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        object: GnrcAltInp
        type: !_InputBase
          typeParam: type
    alternates:
      - !_InputAlternate
        type: !_InputBase
          typeParam: type
    name: GnrcAltInp
    typeKind: !_TypeKind Input
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: String
          typeKind: !_TypeKind Basic
        name: type
  !_Identifier GnrcAltOutp: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: GnrcAltOutp
        type: !_OutputBase
          typeParam: type
    alternates:
      - !_OutputAlternate
        type: !_OutputBase
          typeParam: type
    name: GnrcAltOutp
    typeKind: !_TypeKind Output
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: String
          typeKind: !_TypeKind Basic
        name: type
  !_Identifier GnrcAltParamDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: GnrcAltParamDual
        type: !_DualBase
          name: RefGnrcAltParamDual
          typeArgs:
            - !_DualArg
              name: AltGnrcAltParamDual
    alternates:
      - !_DualAlternate
        type: !_DualBase
          name: RefGnrcAltParamDual
          typeArgs:
            - !_DualArg
              name: AltGnrcAltParamDual
    name: GnrcAltParamDual
    typeKind: !_TypeKind Dual
  !_Identifier GnrcAltParamInp: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        object: GnrcAltParamInp
        type: !_InputBase
          name: RefGnrcAltParamInp
          typeArgs:
            - !_InputArg
              name: AltGnrcAltParamInp
    alternates:
      - !_InputAlternate
        type: !_InputBase
          name: RefGnrcAltParamInp
          typeArgs:
            - !_InputArg
              name: AltGnrcAltParamInp
    name: GnrcAltParamInp
    typeKind: !_TypeKind Input
  !_Identifier GnrcAltParamOutp: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: GnrcAltParamOutp
        type: !_OutputBase
          name: RefGnrcAltParamOutp
          typeArgs:
            - !_OutputArg
              name: AltGnrcAltParamOutp
    alternates:
      - !_OutputAlternate
        type: !_OutputBase
          name: RefGnrcAltParamOutp
          typeArgs:
            - !_OutputArg
              name: AltGnrcAltParamOutp
    name: GnrcAltParamOutp
    typeKind: !_TypeKind Output
  !_Identifier GnrcAltSmplDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: GnrcAltSmplDual
        type: !_DualBase
          name: RefGnrcAltSmplDual
          typeArgs:
            - !_DualArg
              name: String
    alternates:
      - !_DualAlternate
        type: !_DualBase
          name: RefGnrcAltSmplDual
          typeArgs:
            - !_DualArg
              name: String
    name: GnrcAltSmplDual
    typeKind: !_TypeKind Dual
  !_Identifier GnrcAltSmplInp: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        object: GnrcAltSmplInp
        type: !_InputBase
          name: RefGnrcAltSmplInp
          typeArgs:
            - !_InputArg
              name: String
    alternates:
      - !_InputAlternate
        type: !_InputBase
          name: RefGnrcAltSmplInp
          typeArgs:
            - !_InputArg
              name: String
    name: GnrcAltSmplInp
    typeKind: !_TypeKind Input
  !_Identifier GnrcAltSmplOutp: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: GnrcAltSmplOutp
        type: !_OutputBase
          name: RefGnrcAltSmplOutp
          typeArgs:
            - !_OutputArg
              name: String
    alternates:
      - !_OutputAlternate
        type: !_OutputBase
          name: RefGnrcAltSmplOutp
          typeArgs:
            - !_OutputArg
              name: String
    name: GnrcAltSmplOutp
    typeKind: !_TypeKind Output
  !_Identifier GnrcDescrDual: !_TypeDual
    allFields:
      - !_ObjectFor(_DualField)
        name: field
        object: GnrcDescrDual
        type: !_DualBase
          typeParam: type
    fields:
      - !_DualField
        name: field
        type: !_DualBase
          typeParam: type
    name: GnrcDescrDual
    typeKind: !_TypeKind Dual
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: String
          typeKind: !_TypeKind Basic
        description: 'Test Descr'
        name: type
  !_Identifier GnrcDescrInp: !_TypeInput
    allFields:
      - !_ObjectFor(_InputField)
        name: field
        object: GnrcDescrInp
        type: !_InputBase
          typeParam: type
    fields:
      - !_InputField
        name: field
        type: !_InputBase
          typeParam: type
    name: GnrcDescrInp
    typeKind: !_TypeKind Input
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: String
          typeKind: !_TypeKind Basic
        description: 'Test Descr'
        name: type
  !_Identifier GnrcDescrOutp: !_TypeOutput
    allFields:
      - !_ObjectFor(_OutputField)
        name: field
        object: GnrcDescrOutp
        type: !_OutputBase
          typeParam: type
    fields:
      - !_OutputField
        name: field
        type: !_OutputBase
          typeParam: type
    name: GnrcDescrOutp
    typeKind: !_TypeKind Output
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: String
          typeKind: !_TypeKind Basic
        description: 'Test Descr'
        name: type
  !_Identifier GnrcFieldArgDual: !_TypeDual
    allFields:
      - !_ObjectFor(_DualField)
        name: field
        object: GnrcFieldArgDual
        type: !_DualBase
          name: RefGnrcFieldArgDual
          typeArgs:
            - !_DualArg
              typeParam: type
    fields:
      - !_DualField
        name: field
        type: !_DualBase
          name: RefGnrcFieldArgDual
          typeArgs:
            - !_DualArg
              typeParam: type
    name: GnrcFieldArgDual
    typeKind: !_TypeKind Dual
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: String
          typeKind: !_TypeKind Basic
        name: type
  !_Identifier GnrcFieldArgInp: !_TypeInput
    allFields:
      - !_ObjectFor(_InputField)
        name: field
        object: GnrcFieldArgInp
        type: !_InputBase
          name: RefGnrcFieldArgInp
          typeArgs:
            - !_InputArg
              typeParam: type
    fields:
      - !_InputField
        name: field
        type: !_InputBase
          name: RefGnrcFieldArgInp
          typeArgs:
            - !_InputArg
              typeParam: type
    name: GnrcFieldArgInp
    typeKind: !_TypeKind Input
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: String
          typeKind: !_TypeKind Basic
        name: type
  !_Identifier GnrcFieldArgOutp: !_TypeOutput
    allFields:
      - !_ObjectFor(_OutputField)
        name: field
        object: GnrcFieldArgOutp
        type: !_OutputBase
          name: RefGnrcFieldArgOutp
          typeArgs:
            - !_OutputArg
              typeParam: type
    fields:
      - !_OutputField
        name: field
        type: !_OutputBase
          name: RefGnrcFieldArgOutp
          typeArgs:
            - !_OutputArg
              typeParam: type
    name: GnrcFieldArgOutp
    typeKind: !_TypeKind Output
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: String
          typeKind: !_TypeKind Basic
        name: type
  !_Identifier GnrcFieldDual: !_TypeDual
    allFields:
      - !_ObjectFor(_DualField)
        name: field
        object: GnrcFieldDual
        type: !_DualBase
          typeParam: type
    fields:
      - !_DualField
        name: field
        type: !_DualBase
          typeParam: type
    name: GnrcFieldDual
    typeKind: !_TypeKind Dual
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: String
          typeKind: !_TypeKind Basic
        name: type
  !_Identifier GnrcFieldDualDual: !_TypeDual
    allFields:
      - !_ObjectFor(_DualField)
        name: field
        object: GnrcFieldDualDual
        type: !_DualBase
          name: RefGnrcFieldDualDual
          typeArgs:
            - !_DualArg
              name: AltGnrcFieldDualDual
    fields:
      - !_DualField
        name: field
        type: !_DualBase
          name: RefGnrcFieldDualDual
          typeArgs:
            - !_DualArg
              name: AltGnrcFieldDualDual
    name: GnrcFieldDualDual
    typeKind: !_TypeKind Dual
  !_Identifier GnrcFieldDualInp: !_TypeInput
    allFields:
      - !_ObjectFor(_InputField)
        name: field
        object: GnrcFieldDualInp
        type: !_InputBase
          name: RefGnrcFieldDualInp
          typeArgs:
            - !_DualArg
              name: AltGnrcFieldDualInp
    fields:
      - !_InputField
        name: field
        type: !_InputBase
          name: RefGnrcFieldDualInp
          typeArgs:
            - !_DualArg
              name: AltGnrcFieldDualInp
    name: GnrcFieldDualInp
    typeKind: !_TypeKind Input
  !_Identifier GnrcFieldDualOutp: !_TypeOutput
    allFields:
      - !_ObjectFor(_OutputField)
        name: field
        object: GnrcFieldDualOutp
        type: !_OutputBase
          name: RefGnrcFieldDualOutp
          typeArgs:
            - !_DualArg
              name: AltGnrcFieldDualOutp
    fields:
      - !_OutputField
        name: field
        type: !_OutputBase
          name: RefGnrcFieldDualOutp
          typeArgs:
            - !_DualArg
              name: AltGnrcFieldDualOutp
    name: GnrcFieldDualOutp
    typeKind: !_TypeKind Output
  !_Identifier GnrcFieldInp: !_TypeInput
    allFields:
      - !_ObjectFor(_InputField)
        name: field
        object: GnrcFieldInp
        type: !_InputBase
          typeParam: type
    fields:
      - !_InputField
        name: field
        type: !_InputBase
          typeParam: type
    name: GnrcFieldInp
    typeKind: !_TypeKind Input
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: String
          typeKind: !_TypeKind Basic
        name: type
  !_Identifier GnrcFieldOutp: !_TypeOutput
    allFields:
      - !_ObjectFor(_OutputField)
        name: field
        object: GnrcFieldOutp
        type: !_OutputBase
          typeParam: type
    fields:
      - !_OutputField
        name: field
        type: !_OutputBase
          typeParam: type
    name: GnrcFieldOutp
    typeKind: !_TypeKind Output
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: String
          typeKind: !_TypeKind Basic
        name: type
  !_Identifier GnrcFieldParamDual: !_TypeDual
    allFields:
      - !_ObjectFor(_DualField)
        name: field
        object: GnrcFieldParamDual
        type: !_DualBase
          name: RefGnrcFieldParamDual
          typeArgs:
            - !_DualArg
              name: AltGnrcFieldParamDual
    fields:
      - !_DualField
        name: field
        type: !_DualBase
          name: RefGnrcFieldParamDual
          typeArgs:
            - !_DualArg
              name: AltGnrcFieldParamDual
    name: GnrcFieldParamDual
    typeKind: !_TypeKind Dual
  !_Identifier GnrcFieldParamInp: !_TypeInput
    allFields:
      - !_ObjectFor(_InputField)
        name: field
        object: GnrcFieldParamInp
        type: !_InputBase
          name: RefGnrcFieldParamInp
          typeArgs:
            - !_InputArg
              name: AltGnrcFieldParamInp
    fields:
      - !_InputField
        name: field
        type: !_InputBase
          name: RefGnrcFieldParamInp
          typeArgs:
            - !_InputArg
              name: AltGnrcFieldParamInp
    name: GnrcFieldParamInp
    typeKind: !_TypeKind Input
  !_Identifier GnrcFieldParamOutp: !_TypeOutput
    allFields:
      - !_ObjectFor(_OutputField)
        name: field
        object: GnrcFieldParamOutp
        type: !_OutputBase
          name: RefGnrcFieldParamOutp
          typeArgs:
            - !_OutputArg
              name: AltGnrcFieldParamOutp
    fields:
      - !_OutputField
        name: field
        type: !_OutputBase
          name: RefGnrcFieldParamOutp
          typeArgs:
            - !_OutputArg
              name: AltGnrcFieldParamOutp
    name: GnrcFieldParamOutp
    typeKind: !_TypeKind Output
  !_Identifier GnrcPrntArgDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: RefGnrcPrntArgDual
        type: !_DualBase
          typeParam: ref
    name: GnrcPrntArgDual
    parent: !_DualBase
      name: RefGnrcPrntArgDual
      typeArgs:
        - !_DualArg
          typeParam: type
    typeKind: !_TypeKind Dual
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: String
          typeKind: !_TypeKind Basic
        name: type
  !_Identifier GnrcPrntArgInp: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        object: RefGnrcPrntArgInp
        type: !_InputBase
          typeParam: ref
    name: GnrcPrntArgInp
    parent: !_InputBase
      name: RefGnrcPrntArgInp
      typeArgs:
        - !_InputArg
          typeParam: type
    typeKind: !_TypeKind Input
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: String
          typeKind: !_TypeKind Basic
        name: type
  !_Identifier GnrcPrntArgOutp: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: RefGnrcPrntArgOutp
        type: !_OutputBase
          typeParam: ref
    name: GnrcPrntArgOutp
    parent: !_OutputBase
      name: RefGnrcPrntArgOutp
      typeArgs:
        - !_OutputArg
          typeParam: type
    typeKind: !_TypeKind Output
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: String
          typeKind: !_TypeKind Basic
        name: type
  !_Identifier GnrcPrntDescrDual: !_TypeDual
    name: GnrcPrntDescrDual
    parent: !_DualBase
      description: 'Parent comment'
      typeParam: type
    typeKind: !_TypeKind Dual
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: String
          typeKind: !_TypeKind Basic
        name: type
  !_Identifier GnrcPrntDescrInp: !_TypeInput
    name: GnrcPrntDescrInp
    parent: !_InputBase
      description: 'Parent comment'
      typeParam: type
    typeKind: !_TypeKind Input
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: String
          typeKind: !_TypeKind Basic
        name: type
  !_Identifier GnrcPrntDescrOutp: !_TypeOutput
    name: GnrcPrntDescrOutp
    parent: !_OutputBase
      description: 'Parent comment'
      typeParam: type
    typeKind: !_TypeKind Output
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: String
          typeKind: !_TypeKind Basic
        name: type
  !_Identifier GnrcPrntDual: !_TypeDual
    name: GnrcPrntDual
    parent: !_DualBase
      typeParam: type
    typeKind: !_TypeKind Dual
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: String
          typeKind: !_TypeKind Basic
        name: type
  !_Identifier GnrcPrntDualDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: RefGnrcPrntDualDual
        type: !_DualBase
          name: AltGnrcPrntDualDual
    name: GnrcPrntDualDual
    parent: !_DualBase
      name: RefGnrcPrntDualDual
      typeArgs:
        - !_DualArg
          name: AltGnrcPrntDualDual
    typeKind: !_TypeKind Dual
  !_Identifier GnrcPrntDualInp: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        object: RefGnrcPrntDualInp
        type: !_DualBase
          name: AltGnrcPrntDualInp
    name: GnrcPrntDualInp
    parent: !_InputBase
      name: RefGnrcPrntDualInp
      typeArgs:
        - !_DualArg
          name: AltGnrcPrntDualInp
    typeKind: !_TypeKind Input
  !_Identifier GnrcPrntDualOutp: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: RefGnrcPrntDualOutp
        type: !_DualBase
          name: AltGnrcPrntDualOutp
    name: GnrcPrntDualOutp
    parent: !_OutputBase
      name: RefGnrcPrntDualOutp
      typeArgs:
        - !_DualArg
          name: AltGnrcPrntDualOutp
    typeKind: !_TypeKind Output
  !_Identifier GnrcPrntDualPrntDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: AltGnrcPrntDualPrntDual
        type: !_DualBase
          name: String
    allFields:
      - !_ObjectFor(_DualField)
        name: alt
        object: AltGnrcPrntDualPrntDual
        type: !_DualBase
          name: Number
    name: GnrcPrntDualPrntDual
    parent: !_DualBase
      name: RefGnrcPrntDualPrntDual
      typeArgs:
        - !_DualArg
          name: AltGnrcPrntDualPrntDual
    typeKind: !_TypeKind Dual
  !_Identifier GnrcPrntDualPrntInp: !_TypeInput
    name: GnrcPrntDualPrntInp
    parent: !_InputBase
      name: RefGnrcPrntDualPrntInp
      typeArgs:
        - !_DualArg
          name: AltGnrcPrntDualPrntInp
    typeKind: !_TypeKind Input
  !_Identifier GnrcPrntDualPrntOutp: !_TypeOutput
    name: GnrcPrntDualPrntOutp
    parent: !_OutputBase
      name: RefGnrcPrntDualPrntOutp
      typeArgs:
        - !_DualArg
          name: AltGnrcPrntDualPrntOutp
    typeKind: !_TypeKind Output
  !_Identifier GnrcPrntEnumChildDual: !_TypeDual
    allFields:
      - !_ObjectFor(_DualField)
        name: field
        object: FieldGnrcPrntEnumChildDual
        type: !_DualBase
          name: ParentGnrcPrntEnumChildDual
    name: GnrcPrntEnumChildDual
    parent: !_DualBase
      name: FieldGnrcPrntEnumChildDual
      typeArgs:
        - !_DualArg
          name: ParentGnrcPrntEnumChildDual
    typeKind: !_TypeKind Dual
  !_Identifier GnrcPrntEnumChildInp: !_TypeInput
    allFields:
      - !_ObjectFor(_InputField)
        name: field
        object: FieldGnrcPrntEnumChildInp
        type: !_InputBase
          name: ParentGnrcPrntEnumChildInp
    name: GnrcPrntEnumChildInp
    parent: !_InputBase
      name: FieldGnrcPrntEnumChildInp
      typeArgs:
        - !_InputArg
          name: ParentGnrcPrntEnumChildInp
    typeKind: !_TypeKind Input
  !_Identifier GnrcPrntEnumChildOutp: !_TypeOutput
    allFields:
      - !_ObjectFor(_OutputField)
        name: field
        object: FieldGnrcPrntEnumChildOutp
        type: !_OutputBase
          name: ParentGnrcPrntEnumChildOutp
    name: GnrcPrntEnumChildOutp
    parent: !_OutputBase
      name: FieldGnrcPrntEnumChildOutp
      typeArgs:
        - !_OutputArg
          name: ParentGnrcPrntEnumChildOutp
    typeKind: !_TypeKind Output
  !_Identifier GnrcPrntEnumDomDual: !_TypeDual
    allFields:
      - !_ObjectFor(_DualField)
        name: field
        object: FieldGnrcPrntEnumDomDual
        type: !_DualBase
          name: DomGnrcPrntEnumDomDual
    name: GnrcPrntEnumDomDual
    parent: !_DualBase
      name: FieldGnrcPrntEnumDomDual
      typeArgs:
        - !_DualArg
          name: DomGnrcPrntEnumDomDual
    typeKind: !_TypeKind Dual
  !_Identifier GnrcPrntEnumDomInp: !_TypeInput
    allFields:
      - !_ObjectFor(_InputField)
        name: field
        object: FieldGnrcPrntEnumDomInp
        type: !_InputBase
          name: DomGnrcPrntEnumDomInp
    name: GnrcPrntEnumDomInp
    parent: !_InputBase
      name: FieldGnrcPrntEnumDomInp
      typeArgs:
        - !_InputArg
          name: DomGnrcPrntEnumDomInp
    typeKind: !_TypeKind Input
  !_Identifier GnrcPrntEnumDomOutp: !_TypeOutput
    allFields:
      - !_ObjectFor(_OutputField)
        name: field
        object: FieldGnrcPrntEnumDomOutp
        type: !_OutputBase
          name: DomGnrcPrntEnumDomOutp
    name: GnrcPrntEnumDomOutp
    parent: !_OutputBase
      name: FieldGnrcPrntEnumDomOutp
      typeArgs:
        - !_OutputArg
          name: DomGnrcPrntEnumDomOutp
    typeKind: !_TypeKind Output
  !_Identifier GnrcPrntEnumPrntDual: !_TypeDual
    allFields:
      - !_ObjectFor(_DualField)
        name: field
        object: FieldGnrcPrntEnumPrntDual
        type: !_DualBase
          name: EnumGnrcPrntEnumPrntDual
    name: GnrcPrntEnumPrntDual
    parent: !_DualBase
      name: FieldGnrcPrntEnumPrntDual
      typeArgs:
        - !_DualArg
          name: EnumGnrcPrntEnumPrntDual
    typeKind: !_TypeKind Dual
  !_Identifier GnrcPrntEnumPrntInp: !_TypeInput
    allFields:
      - !_ObjectFor(_InputField)
        name: field
        object: FieldGnrcPrntEnumPrntInp
        type: !_InputBase
          name: EnumGnrcPrntEnumPrntInp
    name: GnrcPrntEnumPrntInp
    parent: !_InputBase
      name: FieldGnrcPrntEnumPrntInp
      typeArgs:
        - !_InputArg
          name: EnumGnrcPrntEnumPrntInp
    typeKind: !_TypeKind Input
  !_Identifier GnrcPrntEnumPrntOutp: !_TypeOutput
    allFields:
      - !_ObjectFor(_OutputField)
        name: field
        object: FieldGnrcPrntEnumPrntOutp
        type: !_OutputBase
          name: EnumGnrcPrntEnumPrntOutp
    name: GnrcPrntEnumPrntOutp
    parent: !_OutputBase
      name: FieldGnrcPrntEnumPrntOutp
      typeArgs:
        - !_OutputArg
          name: EnumGnrcPrntEnumPrntOutp
    typeKind: !_TypeKind Output
  !_Identifier GnrcPrntInp: !_TypeInput
    name: GnrcPrntInp
    parent: !_InputBase
      typeParam: type
    typeKind: !_TypeKind Input
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: String
          typeKind: !_TypeKind Basic
        name: type
  !_Identifier GnrcPrntOutp: !_TypeOutput
    name: GnrcPrntOutp
    parent: !_OutputBase
      typeParam: type
    typeKind: !_TypeKind Output
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: String
          typeKind: !_TypeKind Basic
        name: type
  !_Identifier GnrcPrntParamDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: RefGnrcPrntParamDual
        type: !_DualBase
          name: AltGnrcPrntParamDual
    name: GnrcPrntParamDual
    parent: !_DualBase
      name: RefGnrcPrntParamDual
      typeArgs:
        - !_DualArg
          name: AltGnrcPrntParamDual
    typeKind: !_TypeKind Dual
  !_Identifier GnrcPrntParamInp: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        object: RefGnrcPrntParamInp
        type: !_InputBase
          name: AltGnrcPrntParamInp
    name: GnrcPrntParamInp
    parent: !_InputBase
      name: RefGnrcPrntParamInp
      typeArgs:
        - !_InputArg
          name: AltGnrcPrntParamInp
    typeKind: !_TypeKind Input
  !_Identifier GnrcPrntParamOutp: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: RefGnrcPrntParamOutp
        type: !_OutputBase
          name: AltGnrcPrntParamOutp
    name: GnrcPrntParamOutp
    parent: !_OutputBase
      name: RefGnrcPrntParamOutp
      typeArgs:
        - !_OutputArg
          name: AltGnrcPrntParamOutp
    typeKind: !_TypeKind Output
  !_Identifier GnrcPrntParamPrntDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: AltGnrcPrntParamPrntDual
        type: !_DualBase
          name: String
    allFields:
      - !_ObjectFor(_DualField)
        name: alt
        object: AltGnrcPrntParamPrntDual
        type: !_DualBase
          name: Number
    name: GnrcPrntParamPrntDual
    parent: !_DualBase
      name: RefGnrcPrntParamPrntDual
      typeArgs:
        - !_DualArg
          name: AltGnrcPrntParamPrntDual
    typeKind: !_TypeKind Dual
  !_Identifier GnrcPrntParamPrntInp: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        object: AltGnrcPrntParamPrntInp
        type: !_InputBase
          name: String
    allFields:
      - !_ObjectFor(_InputField)
        name: alt
        object: AltGnrcPrntParamPrntInp
        type: !_InputBase
          name: Number
    name: GnrcPrntParamPrntInp
    parent: !_InputBase
      name: RefGnrcPrntParamPrntInp
      typeArgs:
        - !_InputArg
          name: AltGnrcPrntParamPrntInp
    typeKind: !_TypeKind Input
  !_Identifier GnrcPrntParamPrntOutp: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: AltGnrcPrntParamPrntOutp
        type: !_OutputBase
          name: String
    allFields:
      - !_ObjectFor(_OutputField)
        name: alt
        object: AltGnrcPrntParamPrntOutp
        type: !_OutputBase
          name: Number
    name: GnrcPrntParamPrntOutp
    parent: !_OutputBase
      name: RefGnrcPrntParamPrntOutp
      typeArgs:
        - !_OutputArg
          name: AltGnrcPrntParamPrntOutp
    typeKind: !_TypeKind Output
  !_Identifier GnrcPrntSmplEnumDual: !_TypeDual
    allFields:
      - !_ObjectFor(_DualField)
        name: field
        object: FieldGnrcPrntSmplEnumDual
        type: !_DualBase
          name: EnumGnrcPrntSmplEnumDual
    name: GnrcPrntSmplEnumDual
    parent: !_DualBase
      name: FieldGnrcPrntSmplEnumDual
      typeArgs:
        - !_DualArg
          name: EnumGnrcPrntSmplEnumDual
    typeKind: !_TypeKind Dual
  !_Identifier GnrcPrntSmplEnumInp: !_TypeInput
    allFields:
      - !_ObjectFor(_InputField)
        name: field
        object: FieldGnrcPrntSmplEnumInp
        type: !_InputBase
          name: EnumGnrcPrntSmplEnumInp
    name: GnrcPrntSmplEnumInp
    parent: !_InputBase
      name: FieldGnrcPrntSmplEnumInp
      typeArgs:
        - !_InputArg
          name: EnumGnrcPrntSmplEnumInp
    typeKind: !_TypeKind Input
  !_Identifier GnrcPrntSmplEnumOutp: !_TypeOutput
    allFields:
      - !_ObjectFor(_OutputField)
        name: field
        object: FieldGnrcPrntSmplEnumOutp
        type: !_OutputBase
          name: EnumGnrcPrntSmplEnumOutp
    name: GnrcPrntSmplEnumOutp
    parent: !_OutputBase
      name: FieldGnrcPrntSmplEnumOutp
      typeArgs:
        - !_OutputArg
          name: EnumGnrcPrntSmplEnumOutp
    typeKind: !_TypeKind Output
  !_Identifier GnrcPrntStrDomDual: !_TypeDual
    allFields:
      - !_ObjectFor(_DualField)
        name: field
        object: FieldGnrcPrntStrDomDual
        type: !_DualBase
          name: DomGnrcPrntStrDomDual
    name: GnrcPrntStrDomDual
    parent: !_DualBase
      name: FieldGnrcPrntStrDomDual
      typeArgs:
        - !_DualArg
          name: DomGnrcPrntStrDomDual
    typeKind: !_TypeKind Dual
  !_Identifier GnrcPrntStrDomInp: !_TypeInput
    allFields:
      - !_ObjectFor(_InputField)
        name: field
        object: FieldGnrcPrntStrDomInp
        type: !_InputBase
          name: DomGnrcPrntStrDomInp
    name: GnrcPrntStrDomInp
    parent: !_InputBase
      name: FieldGnrcPrntStrDomInp
      typeArgs:
        - !_InputArg
          name: DomGnrcPrntStrDomInp
    typeKind: !_TypeKind Input
  !_Identifier GnrcPrntStrDomOutp: !_TypeOutput
    allFields:
      - !_ObjectFor(_OutputField)
        name: field
        object: FieldGnrcPrntStrDomOutp
        type: !_OutputBase
          name: DomGnrcPrntStrDomOutp
    name: GnrcPrntStrDomOutp
    parent: !_OutputBase
      name: FieldGnrcPrntStrDomOutp
      typeArgs:
        - !_OutputArg
          name: DomGnrcPrntStrDomOutp
    typeKind: !_TypeKind Output
  !_Identifier GrndCnstPrntDualGrndDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: GrndCnstPrntDualGrndDual
        type: !_DualBase
          name: String
    alternates:
      - !_DualAlternate
        type: !_DualBase
          name: String
    name: GrndCnstPrntDualGrndDual
    typeKind: !_TypeKind Dual
  !_Identifier GrndCnstPrntDualGrndInp: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: GrndCnstPrntDualGrndInp
        type: !_DualBase
          name: String
    alternates:
      - !_DualAlternate
        type: !_DualBase
          name: String
    name: GrndCnstPrntDualGrndInp
    typeKind: !_TypeKind Dual
  !_Identifier GrndCnstPrntDualGrndOutp: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: GrndCnstPrntDualGrndOutp
        type: !_DualBase
          name: String
    alternates:
      - !_DualAlternate
        type: !_DualBase
          name: String
    name: GrndCnstPrntDualGrndOutp
    typeKind: !_TypeKind Dual
  !_Identifier InDrctParam: !_TypeInput
    name: InDrctParam
    typeKind: !_TypeKind Input
  !_Identifier InDrctParamDict: !_TypeInput
    name: InDrctParamDict
    typeKind: !_TypeKind Input
  !_Identifier InDrctParamIn: !_TypeInput
    name: InDrctParamIn
    typeKind: !_TypeKind Input
  !_Identifier InDrctParamList: !_TypeInput
    name: InDrctParamList
    typeKind: !_TypeKind Input
  !_Identifier InDrctParamOpt: !_TypeInput
    name: InDrctParamOpt
    typeKind: !_TypeKind Input
  !_Identifier InOutpDescrParam: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        object: InOutpDescrParam
        type: !_InputBase
          name: String
    allFields:
      - !_ObjectFor(_InputField)
        name: param
        object: InOutpDescrParam
        type: !_InputBase
          name: Number
    alternates:
      - !_InputAlternate
        type: !_InputBase
          name: String
    fields:
      - !_InputField
        name: param
        type: !_InputBase
          name: Number
    name: InOutpDescrParam
    typeKind: !_TypeKind Input
  !_Identifier InOutpParam: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        object: InOutpParam
        type: !_InputBase
          name: String
    allFields:
      - !_ObjectFor(_InputField)
        name: param
        object: InOutpParam
        type: !_InputBase
          name: Number
    alternates:
      - !_InputAlternate
        type: !_InputBase
          name: String
    fields:
      - !_InputField
        name: param
        type: !_InputBase
          name: Number
    name: InOutpParam
    typeKind: !_TypeKind Input
  !_Identifier InOutpParamDescr: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        object: InOutpParamDescr
        type: !_InputBase
          name: String
    allFields:
      - !_ObjectFor(_InputField)
        name: param
        object: InOutpParamDescr
        type: !_InputBase
          name: Number
    alternates:
      - !_InputAlternate
        type: !_InputBase
          name: String
    fields:
      - !_InputField
        name: param
        type: !_InputBase
          name: Number
    name: InOutpParamDescr
    typeKind: !_TypeKind Input
  !_Identifier InOutpParamModDmn: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        object: InOutpParamModDmn
        type: !_InputBase
          name: String
    allFields:
      - !_ObjectFor(_InputField)
        name: param
        object: InOutpParamModDmn
        type: !_InputBase
          name: Number
    alternates:
      - !_InputAlternate
        type: !_InputBase
          name: String
    fields:
      - !_InputField
        name: param
        type: !_InputBase
          name: Number
    name: InOutpParamModDmn
    typeKind: !_TypeKind Input
  !_Identifier InOutpParamModParam: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        object: InOutpParamModParam
        type: !_InputBase
          name: String
    allFields:
      - !_ObjectFor(_InputField)
        name: param
        object: InOutpParamModParam
        type: !_InputBase
          name: Number
    alternates:
      - !_InputAlternate
        type: !_InputBase
          name: String
    fields:
      - !_InputField
        name: param
        type: !_InputBase
          name: Number
    name: InOutpParamModParam
    typeKind: !_TypeKind Input
  !_Identifier InOutpParamTypeDescr: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        object: InOutpParamTypeDescr
        type: !_InputBase
          name: String
    allFields:
      - !_ObjectFor(_InputField)
        name: param
        object: InOutpParamTypeDescr
        type: !_InputBase
          name: Number
    alternates:
      - !_InputAlternate
        type: !_InputBase
          name: String
    fields:
      - !_InputField
        name: param
        type: !_InputBase
          name: Number
    name: InOutpParamTypeDescr
    typeKind: !_TypeKind Input
  !_Identifier InOutpPrntParam: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        object: InOutpPrntParam
        type: !_InputBase
          name: String
    allFields:
      - !_ObjectFor(_InputField)
        name: param
        object: InOutpPrntParam
        type: !_InputBase
          name: Number
    alternates:
      - !_InputAlternate
        type: !_InputBase
          name: String
    fields:
      - !_InputField
        name: param
        type: !_InputBase
          name: Number
    name: InOutpPrntParam
    typeKind: !_TypeKind Input
  !_Identifier InpFieldDescrNmbr: !_TypeInput
    allFields:
      - !_ObjectFor(_InputField)
        default: 42
        description: 'Test Descr'
        name: field
        object: InpFieldDescrNmbr
        type: !_InputBase
          name: Number
    fields:
      - !_InputField
        default: 42
        description: 'Test Descr'
        name: field
        type: !_InputBase
          name: Number
    name: InpFieldDescrNmbr
    typeKind: !_TypeKind Input
  !_Identifier InpFieldEnum: !_TypeInput
    allFields:
      - !_ObjectFor(_InputField)
        default: inpFieldEnum
        name: field
        object: InpFieldEnum
        type: !_InputBase
          name: EnumInpFieldEnum
    fields:
      - !_InputField
        default: inpFieldEnum
        name: field
        type: !_InputBase
          name: EnumInpFieldEnum
    name: InpFieldEnum
    typeKind: !_TypeKind Input
  !_Identifier InpFieldNmbr: !_TypeInput
    allFields:
      - !_ObjectFor(_InputField)
        default: 42
        name: field
        object: InpFieldNmbr
        type: !_InputBase
          name: Number
    fields:
      - !_InputField
        default: 42
        name: field
        type: !_InputBase
          name: Number
    name: InpFieldNmbr
    typeKind: !_TypeKind Input
  !_Identifier InpFieldNmbrDescr: !_TypeInput
    allFields:
      - !_ObjectFor(_InputField)
        default: 42
        name: field
        object: InpFieldNmbrDescr
        type: !_InputBase
          description: 'Test Descr'
          name: Number
    fields:
      - !_InputField
        default: 42
        name: field
        type: !_InputBase
          description: 'Test Descr'
          name: Number
    name: InpFieldNmbrDescr
    typeKind: !_TypeKind Input
  !_Identifier InpFieldNull: !_TypeInput
    allFields:
      - !_ObjectFor(_InputField)
        default: !Null null
        modifiers: [!_Modifier{modifierKind:!_ModifierKind Opt}]
        name: field
        object: InpFieldNull
        type: !_DualBase
          name: FldInpFieldNull
    fields:
      - !_InputField
        default: !Null null
        modifiers: [!_Modifier{modifierKind:!_ModifierKind Opt}]
        name: field
        type: !_DualBase
          name: FldInpFieldNull
    name: InpFieldNull
    typeKind: !_TypeKind Input
  !_Identifier InpFieldStr: !_TypeInput
    allFields:
      - !_ObjectFor(_InputField)
        default: 'default'
        name: field
        object: InpFieldStr
        type: !_InputBase
          name: String
    fields:
      - !_InputField
        default: 'default'
        name: field
        type: !_InputBase
          name: String
    name: InpFieldStr
    typeKind: !_TypeKind Input
  !_Identifier JustObjCnstDomEnumDual: !_DomainEnum
    allItems:
      - !_DomainItem(_DomainLabel)
        domain: JustObjCnstDomEnumDual
        exclude: false
        value: !_EnumValue
          label: objCnstDomEnumDual
          name: EnumObjCnstDomEnumDual
          typeKind: !_SimpleKind Enum
    domainKind: !_DomainKind Enum
    items:
      - !_DomainLabel
        exclude: false
        value: !_EnumValue
          label: objCnstDomEnumDual
          name: EnumObjCnstDomEnumDual
          typeKind: !_SimpleKind Enum
    name: JustObjCnstDomEnumDual
    typeKind: !_TypeKind Domain
  !_Identifier JustObjCnstDomEnumInp: !_DomainEnum
    allItems:
      - !_DomainItem(_DomainLabel)
        domain: JustObjCnstDomEnumInp
        exclude: false
        value: !_EnumValue
          label: objCnstDomEnumInp
          name: EnumObjCnstDomEnumInp
          typeKind: !_SimpleKind Enum
    domainKind: !_DomainKind Enum
    items:
      - !_DomainLabel
        exclude: false
        value: !_EnumValue
          label: objCnstDomEnumInp
          name: EnumObjCnstDomEnumInp
          typeKind: !_SimpleKind Enum
    name: JustObjCnstDomEnumInp
    typeKind: !_TypeKind Domain
  !_Identifier JustObjCnstDomEnumOutp: !_DomainEnum
    allItems:
      - !_DomainItem(_DomainLabel)
        domain: JustObjCnstDomEnumOutp
        exclude: false
        value: !_EnumValue
          label: objCnstDomEnumOutp
          name: EnumObjCnstDomEnumOutp
          typeKind: !_SimpleKind Enum
    domainKind: !_DomainKind Enum
    items:
      - !_DomainLabel
        exclude: false
        value: !_EnumValue
          label: objCnstDomEnumOutp
          name: EnumObjCnstDomEnumOutp
          typeKind: !_SimpleKind Enum
    name: JustObjCnstDomEnumOutp
    typeKind: !_TypeKind Domain
  !_Identifier ObjAliasDual: !_TypeDual
    aliases: [Dual1,Dual2]
    name: ObjAliasDual
    typeKind: !_TypeKind Dual
  !_Identifier ObjAliasInp: !_TypeInput
    aliases: [Input1,Input2]
    name: ObjAliasInp
    typeKind: !_TypeKind Input
  !_Identifier ObjAliasOutp: !_TypeOutput
    aliases: [Output1,Output2]
    name: ObjAliasOutp
    typeKind: !_TypeKind Output
  !_Identifier ObjAltDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: ObjAltDual
        type: !_DualBase
          name: ObjAltDualType
    alternates:
      - !_DualAlternate
        type: !_DualBase
          name: ObjAltDualType
    name: ObjAltDual
    typeKind: !_TypeKind Dual
  !_Identifier ObjAltDualType: !_TypeDual
    name: ObjAltDualType
    typeKind: !_TypeKind Dual
  !_Identifier ObjAltInp: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        object: ObjAltInp
        type: !_InputBase
          name: ObjAltInpType
    alternates:
      - !_InputAlternate
        type: !_InputBase
          name: ObjAltInpType
    name: ObjAltInp
    typeKind: !_TypeKind Input
  !_Identifier ObjAltInpType: !_TypeInput
    name: ObjAltInpType
    typeKind: !_TypeKind Input
  !_Identifier ObjAltOutp: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: ObjAltOutp
        type: !_OutputBase
          name: ObjAltOutpType
    alternates:
      - !_OutputAlternate
        type: !_OutputBase
          name: ObjAltOutpType
    name: ObjAltOutp
    typeKind: !_TypeKind Output
  !_Identifier ObjAltOutpType: !_TypeOutput
    name: ObjAltOutpType
    typeKind: !_TypeKind Output
  !_Identifier ObjCnstDomEnumDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: ObjCnstDomEnumDual
        type: !_DualBase
          name: RefObjCnstDomEnumDual
          typeArgs:
            - !_DualArg
              name: objCnstDomEnumDual
    alternates:
      - !_DualAlternate
        type: !_DualBase
          name: RefObjCnstDomEnumDual
          typeArgs:
            - !_DualArg
              name: objCnstDomEnumDual
    name: ObjCnstDomEnumDual
    typeKind: !_TypeKind Dual
  !_Identifier ObjCnstDomEnumInp: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        object: ObjCnstDomEnumInp
        type: !_InputBase
          name: RefObjCnstDomEnumInp
          typeArgs:
            - !_InputArg
              name: objCnstDomEnumInp
    alternates:
      - !_InputAlternate
        type: !_InputBase
          name: RefObjCnstDomEnumInp
          typeArgs:
            - !_InputArg
              name: objCnstDomEnumInp
    name: ObjCnstDomEnumInp
    typeKind: !_TypeKind Input
  !_Identifier ObjCnstDomEnumOutp: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: ObjCnstDomEnumOutp
        type: !_OutputBase
          name: RefObjCnstDomEnumOutp
          typeArgs:
            - !_OutputArg
              name: objCnstDomEnumOutp
    alternates:
      - !_OutputAlternate
        type: !_OutputBase
          name: RefObjCnstDomEnumOutp
          typeArgs:
            - !_OutputArg
              name: objCnstDomEnumOutp
    name: ObjCnstDomEnumOutp
    typeKind: !_TypeKind Output
  !_Identifier ObjCnstDual: !_TypeDual
    allFields:
      - !_ObjectFor(_DualField)
        name: field
        object: ObjCnstDual
        type: !_DualBase
          typeParam: type
      - !_ObjectFor(_DualField)
        name: str
        object: ObjCnstDual
        type: !_DualBase
          typeParam: type
    fields:
      - !_DualField
        name: field
        type: !_DualBase
          typeParam: type
      - !_DualField
        name: str
        type: !_DualBase
          typeParam: type
    name: ObjCnstDual
    typeKind: !_TypeKind Dual
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: String
          typeKind: !_TypeKind Basic
        name: type
  !_Identifier ObjCnstEnumDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: ObjCnstEnumDual
        type: !_DualBase
          name: RefObjCnstEnumDual
          typeArgs:
            - !_DualArg
              name: objCnstEnumDual
    alternates:
      - !_DualAlternate
        type: !_DualBase
          name: RefObjCnstEnumDual
          typeArgs:
            - !_DualArg
              name: objCnstEnumDual
    name: ObjCnstEnumDual
    typeKind: !_TypeKind Dual
  !_Identifier ObjCnstEnumInp: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        object: ObjCnstEnumInp
        type: !_InputBase
          name: RefObjCnstEnumInp
          typeArgs:
            - !_InputArg
              name: objCnstEnumInp
    alternates:
      - !_InputAlternate
        type: !_InputBase
          name: RefObjCnstEnumInp
          typeArgs:
            - !_InputArg
              name: objCnstEnumInp
    name: ObjCnstEnumInp
    typeKind: !_TypeKind Input
  !_Identifier ObjCnstEnumOutp: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: ObjCnstEnumOutp
        type: !_OutputBase
          name: RefObjCnstEnumOutp
          typeArgs:
            - !_OutputArg
              name: objCnstEnumOutp
    alternates:
      - !_OutputAlternate
        type: !_OutputBase
          name: RefObjCnstEnumOutp
          typeArgs:
            - !_OutputArg
              name: objCnstEnumOutp
    name: ObjCnstEnumOutp
    typeKind: !_TypeKind Output
  !_Identifier ObjCnstEnumPrntDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: ObjCnstEnumPrntDual
        type: !_DualBase
          name: RefObjCnstEnumPrntDual
          typeArgs:
            - !_DualArg
              name: objCnstEnumPrntDual
    alternates:
      - !_DualAlternate
        type: !_DualBase
          name: RefObjCnstEnumPrntDual
          typeArgs:
            - !_DualArg
              name: objCnstEnumPrntDual
    name: ObjCnstEnumPrntDual
    typeKind: !_TypeKind Dual
  !_Identifier ObjCnstEnumPrntInp: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        object: ObjCnstEnumPrntInp
        type: !_InputBase
          name: RefObjCnstEnumPrntInp
          typeArgs:
            - !_InputArg
              name: objCnstEnumPrntInp
    alternates:
      - !_InputAlternate
        type: !_InputBase
          name: RefObjCnstEnumPrntInp
          typeArgs:
            - !_InputArg
              name: objCnstEnumPrntInp
    name: ObjCnstEnumPrntInp
    typeKind: !_TypeKind Input
  !_Identifier ObjCnstEnumPrntOutp: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: ObjCnstEnumPrntOutp
        type: !_OutputBase
          name: RefObjCnstEnumPrntOutp
          typeArgs:
            - !_OutputArg
              name: objCnstEnumPrntOutp
    alternates:
      - !_OutputAlternate
        type: !_OutputBase
          name: RefObjCnstEnumPrntOutp
          typeArgs:
            - !_OutputArg
              name: objCnstEnumPrntOutp
    name: ObjCnstEnumPrntOutp
    typeKind: !_TypeKind Output
  !_Identifier ObjCnstInp: !_TypeInput
    allFields:
      - !_ObjectFor(_InputField)
        name: field
        object: ObjCnstInp
        type: !_InputBase
          typeParam: type
      - !_ObjectFor(_InputField)
        name: str
        object: ObjCnstInp
        type: !_InputBase
          typeParam: type
    fields:
      - !_InputField
        name: field
        type: !_InputBase
          typeParam: type
      - !_InputField
        name: str
        type: !_InputBase
          typeParam: type
    name: ObjCnstInp
    typeKind: !_TypeKind Input
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: String
          typeKind: !_TypeKind Basic
        name: type
  !_Identifier ObjCnstOutp: !_TypeOutput
    allFields:
      - !_ObjectFor(_OutputField)
        name: field
        object: ObjCnstOutp
        type: !_OutputBase
          typeParam: type
      - !_ObjectFor(_OutputField)
        name: str
        object: ObjCnstOutp
        type: !_OutputBase
          typeParam: type
    fields:
      - !_OutputField
        name: field
        type: !_OutputBase
          typeParam: type
      - !_OutputField
        name: str
        type: !_OutputBase
          typeParam: type
    name: ObjCnstOutp
    typeKind: !_TypeKind Output
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: String
          typeKind: !_TypeKind Basic
        name: type
  !_Identifier ObjCnstPrntEnumDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: ObjCnstPrntEnumDual
        type: !_DualBase
          name: RefObjCnstPrntEnumDual
          typeArgs:
            - !_DualArg
              name: parentObjCnstPrntEnumDual
    alternates:
      - !_DualAlternate
        type: !_DualBase
          name: RefObjCnstPrntEnumDual
          typeArgs:
            - !_DualArg
              name: parentObjCnstPrntEnumDual
    name: ObjCnstPrntEnumDual
    typeKind: !_TypeKind Dual
  !_Identifier ObjCnstPrntEnumInp: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        object: ObjCnstPrntEnumInp
        type: !_InputBase
          name: RefObjCnstPrntEnumInp
          typeArgs:
            - !_InputArg
              name: parentObjCnstPrntEnumInp
    alternates:
      - !_InputAlternate
        type: !_InputBase
          name: RefObjCnstPrntEnumInp
          typeArgs:
            - !_InputArg
              name: parentObjCnstPrntEnumInp
    name: ObjCnstPrntEnumInp
    typeKind: !_TypeKind Input
  !_Identifier ObjCnstPrntEnumOutp: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: ObjCnstPrntEnumOutp
        type: !_OutputBase
          name: RefObjCnstPrntEnumOutp
          typeArgs:
            - !_OutputArg
              name: parentObjCnstPrntEnumOutp
    alternates:
      - !_OutputAlternate
        type: !_OutputBase
          name: RefObjCnstPrntEnumOutp
          typeArgs:
            - !_OutputArg
              name: parentObjCnstPrntEnumOutp
    name: ObjCnstPrntEnumOutp
    typeKind: !_TypeKind Output
  !_Identifier ObjDual: !_TypeDual
    name: ObjDual
    typeKind: !_TypeKind Dual
  !_Identifier ObjDualAltDualDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: ObjDualAltDualDual
        type: !_DualBase
          name: String
    allFields:
      - !_ObjectFor(_DualField)
        name: alt
        object: ObjDualAltDualDual
        type: !_DualBase
          name: Number
    alternates:
      - !_DualAlternate
        type: !_DualBase
          name: String
    fields:
      - !_DualField
        name: alt
        type: !_DualBase
          name: Number
    name: ObjDualAltDualDual
    typeKind: !_TypeKind Dual
  !_Identifier ObjDualAltDualInp: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: ObjDualAltDualInp
        type: !_DualBase
          name: String
    allFields:
      - !_ObjectFor(_DualField)
        name: alt
        object: ObjDualAltDualInp
        type: !_DualBase
          name: Number
    alternates:
      - !_DualAlternate
        type: !_DualBase
          name: String
    fields:
      - !_DualField
        name: alt
        type: !_DualBase
          name: Number
    name: ObjDualAltDualInp
    typeKind: !_TypeKind Dual
  !_Identifier ObjDualAltDualOutp: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: ObjDualAltDualOutp
        type: !_DualBase
          name: String
    allFields:
      - !_ObjectFor(_DualField)
        name: alt
        object: ObjDualAltDualOutp
        type: !_DualBase
          name: Number
    alternates:
      - !_DualAlternate
        type: !_DualBase
          name: String
    fields:
      - !_DualField
        name: alt
        type: !_DualBase
          name: Number
    name: ObjDualAltDualOutp
    typeKind: !_TypeKind Dual
  !_Identifier ObjFieldAliasDual: !_TypeDual
    allFields:
      - !_ObjectFor(_DualField)
        aliases: [field1,field2]
        name: field
        object: ObjFieldAliasDual
        type: !_DualBase
          name: FldObjFieldAliasDual
    fields:
      - !_DualField
        aliases: [field1,field2]
        name: field
        type: !_DualBase
          name: FldObjFieldAliasDual
    name: ObjFieldAliasDual
    typeKind: !_TypeKind Dual
  !_Identifier ObjFieldAliasInp: !_TypeInput
    allFields:
      - !_ObjectFor(_InputField)
        aliases: [field1,field2]
        name: field
        object: ObjFieldAliasInp
        type: !_InputBase
          name: FldObjFieldAliasInp
    fields:
      - !_InputField
        aliases: [field1,field2]
        name: field
        type: !_InputBase
          name: FldObjFieldAliasInp
    name: ObjFieldAliasInp
    typeKind: !_TypeKind Input
  !_Identifier ObjFieldAliasOutp: !_TypeOutput
    allFields:
      - !_ObjectFor(_OutputField)
        aliases: [field1,field2]
        name: field
        object: ObjFieldAliasOutp
        type: !_OutputBase
          name: FldObjFieldAliasOutp
    fields:
      - !_OutputField
        aliases: [field1,field2]
        name: field
        type: !_OutputBase
          name: FldObjFieldAliasOutp
    name: ObjFieldAliasOutp
    typeKind: !_TypeKind Output
  !_Identifier ObjFieldDual: !_TypeDual
    allFields:
      - !_ObjectFor(_DualField)
        name: field
        object: ObjFieldDual
        type: !_DualBase
          name: FldObjFieldDual
    fields:
      - !_DualField
        name: field
        type: !_DualBase
          name: FldObjFieldDual
    name: ObjFieldDual
    typeKind: !_TypeKind Dual
  !_Identifier ObjFieldEnumAliasDual: !_TypeDual
    allFields:
      - !_ObjectFor(_DualField)
        aliases: [field1,field2]
        name: field
        object: ObjFieldEnumAliasDual
        type: !_DualBase
          name: Boolean
    fields:
      - !_DualField
        aliases: [field1,field2]
        name: field
        type: !_DualBase
          name: Boolean
    name: ObjFieldEnumAliasDual
    typeKind: !_TypeKind Dual
  !_Identifier ObjFieldEnumAliasInp: !_TypeInput
    allFields:
      - !_ObjectFor(_InputField)
        aliases: [field1,field2]
        name: field
        object: ObjFieldEnumAliasInp
        type: !_InputBase
          name: Boolean
    fields:
      - !_InputField
        aliases: [field1,field2]
        name: field
        type: !_InputBase
          name: Boolean
    name: ObjFieldEnumAliasInp
    typeKind: !_TypeKind Input
  !_Identifier ObjFieldEnumAliasOutp: !_TypeOutput
    allFields:
      - !_ObjectFor(_OutputField)
        field: field
        label: true
        name: Boolean
        object: ObjFieldEnumAliasOutp
        typeKind: !_SimpleKind Enum
    fields:
      - !_OutputEnum
        field: field
        label: true
        name: Boolean
        typeKind: !_SimpleKind Enum
    name: ObjFieldEnumAliasOutp
    typeKind: !_TypeKind Output
  !_Identifier ObjFieldEnumDual: !_TypeDual
    allFields:
      - !_ObjectFor(_DualField)
        name: field
        object: ObjFieldEnumDual
        type: !_DualBase
          name: EnumObjFieldEnumDual
    fields:
      - !_DualField
        name: field
        type: !_DualBase
          name: EnumObjFieldEnumDual
    name: ObjFieldEnumDual
    typeKind: !_TypeKind Dual
  !_Identifier ObjFieldEnumInp: !_TypeInput
    allFields:
      - !_ObjectFor(_InputField)
        name: field
        object: ObjFieldEnumInp
        type: !_InputBase
          name: EnumObjFieldEnumInp
    fields:
      - !_InputField
        name: field
        type: !_InputBase
          name: EnumObjFieldEnumInp
    name: ObjFieldEnumInp
    typeKind: !_TypeKind Input
  !_Identifier ObjFieldEnumOutp: !_TypeOutput
    allFields:
      - !_ObjectFor(_OutputField)
        field: field
        label: objFieldEnumOutp
        name: EnumObjFieldEnumOutp
        object: ObjFieldEnumOutp
        typeKind: !_SimpleKind Enum
    fields:
      - !_OutputEnum
        field: field
        label: objFieldEnumOutp
        name: EnumObjFieldEnumOutp
        typeKind: !_SimpleKind Enum
    name: ObjFieldEnumOutp
    typeKind: !_TypeKind Output
  !_Identifier ObjFieldEnumPrntDual: !_TypeDual
    allFields:
      - !_ObjectFor(_DualField)
        name: field
        object: ObjFieldEnumPrntDual
        type: !_DualBase
          name: EnumObjFieldEnumPrntDual
    fields:
      - !_DualField
        name: field
        type: !_DualBase
          name: EnumObjFieldEnumPrntDual
    name: ObjFieldEnumPrntDual
    typeKind: !_TypeKind Dual
  !_Identifier ObjFieldEnumPrntInp: !_TypeInput
    allFields:
      - !_ObjectFor(_InputField)
        name: field
        object: ObjFieldEnumPrntInp
        type: !_InputBase
          name: EnumObjFieldEnumPrntInp
    fields:
      - !_InputField
        name: field
        type: !_InputBase
          name: EnumObjFieldEnumPrntInp
    name: ObjFieldEnumPrntInp
    typeKind: !_TypeKind Input
  !_Identifier ObjFieldEnumPrntOutp: !_TypeOutput
    allFields:
      - !_ObjectFor(_OutputField)
        field: field
        label: prnt_objFieldEnumPrntOutp
        name: EnumObjFieldEnumPrntOutp
        object: ObjFieldEnumPrntOutp
        typeKind: !_SimpleKind Enum
    fields:
      - !_OutputEnum
        field: field
        label: prnt_objFieldEnumPrntOutp
        name: EnumObjFieldEnumPrntOutp
        typeKind: !_SimpleKind Enum
    name: ObjFieldEnumPrntOutp
    typeKind: !_TypeKind Output
  !_Identifier ObjFieldEnumValueDual: !_TypeDual
    allFields:
      - !_ObjectFor(_DualField)
        name: field
        object: ObjFieldEnumValueDual
        type: !_DualBase
          name: Boolean
    fields:
      - !_DualField
        name: field
        type: !_DualBase
          name: Boolean
    name: ObjFieldEnumValueDual
    typeKind: !_TypeKind Dual
  !_Identifier ObjFieldEnumValueInp: !_TypeInput
    allFields:
      - !_ObjectFor(_InputField)
        name: field
        object: ObjFieldEnumValueInp
        type: !_InputBase
          name: Boolean
    fields:
      - !_InputField
        name: field
        type: !_InputBase
          name: Boolean
    name: ObjFieldEnumValueInp
    typeKind: !_TypeKind Input
  !_Identifier ObjFieldEnumValueOutp: !_TypeOutput
    allFields:
      - !_ObjectFor(_OutputField)
        field: field
        label: true
        name: Boolean
        object: ObjFieldEnumValueOutp
        typeKind: !_SimpleKind Enum
    fields:
      - !_OutputEnum
        field: field
        label: true
        name: Boolean
        typeKind: !_SimpleKind Enum
    name: ObjFieldEnumValueOutp
    typeKind: !_TypeKind Output
  !_Identifier ObjFieldInp: !_TypeInput
    allFields:
      - !_ObjectFor(_InputField)
        name: field
        object: ObjFieldInp
        type: !_InputBase
          name: FldObjFieldInp
    fields:
      - !_InputField
        name: field
        type: !_InputBase
          name: FldObjFieldInp
    name: ObjFieldInp
    typeKind: !_TypeKind Input
  !_Identifier ObjFieldOutp: !_TypeOutput
    allFields:
      - !_ObjectFor(_OutputField)
        name: field
        object: ObjFieldOutp
        type: !_OutputBase
          name: FldObjFieldOutp
    fields:
      - !_OutputField
        name: field
        type: !_OutputBase
          name: FldObjFieldOutp
    name: ObjFieldOutp
    typeKind: !_TypeKind Output
  !_Identifier ObjFieldTypeAliasDual: !_TypeDual
    allFields:
      - !_ObjectFor(_DualField)
        name: field
        object: ObjFieldTypeAliasDual
        type: !_DualBase
          name: String
    fields:
      - !_DualField
        name: field
        type: !_DualBase
          name: String
    name: ObjFieldTypeAliasDual
    typeKind: !_TypeKind Dual
  !_Identifier ObjFieldTypeAliasInp: !_TypeInput
    allFields:
      - !_ObjectFor(_InputField)
        name: field
        object: ObjFieldTypeAliasInp
        type: !_InputBase
          name: String
    fields:
      - !_InputField
        name: field
        type: !_InputBase
          name: String
    name: ObjFieldTypeAliasInp
    typeKind: !_TypeKind Input
  !_Identifier ObjFieldTypeAliasOutp: !_TypeOutput
    allFields:
      - !_ObjectFor(_OutputField)
        name: field
        object: ObjFieldTypeAliasOutp
        type: !_OutputBase
          name: String
    fields:
      - !_OutputField
        name: field
        type: !_OutputBase
          name: String
    name: ObjFieldTypeAliasOutp
    typeKind: !_TypeKind Output
  !_Identifier ObjFieldValueDescrDual: !_TypeDual
    allFields:
      - !_ObjectFor(_DualField)
        name: field
        object: ObjFieldValueDescrDual
        type: !_DualBase
          description: 'Test Descr'
          name: EnumObjFieldValueDescrDual
    fields:
      - !_DualField
        name: field
        type: !_DualBase
          description: 'Test Descr'
          name: EnumObjFieldValueDescrDual
    name: ObjFieldValueDescrDual
    typeKind: !_TypeKind Dual
  !_Identifier ObjFieldValueDescrInp: !_TypeInput
    allFields:
      - !_ObjectFor(_InputField)
        name: field
        object: ObjFieldValueDescrInp
        type: !_InputBase
          description: 'Test Descr'
          name: EnumObjFieldValueDescrInp
    fields:
      - !_InputField
        name: field
        type: !_InputBase
          description: 'Test Descr'
          name: EnumObjFieldValueDescrInp
    name: ObjFieldValueDescrInp
    typeKind: !_TypeKind Input
  !_Identifier ObjFieldValueDescrOutp: !_TypeOutput
    allFields:
      - !_ObjectFor(_OutputField)
        description: 'Test Descr'
        field: field
        label: objFieldValueDescrOutp
        name: EnumObjFieldValueDescrOutp
        object: ObjFieldValueDescrOutp
        typeKind: !_SimpleKind Enum
    fields:
      - !_OutputEnum
        description: 'Test Descr'
        field: field
        label: objFieldValueDescrOutp
        name: EnumObjFieldValueDescrOutp
        typeKind: !_SimpleKind Enum
    name: ObjFieldValueDescrOutp
    typeKind: !_TypeKind Output
  !_Identifier ObjFieldValueDual: !_TypeDual
    allFields:
      - !_ObjectFor(_DualField)
        name: field
        object: ObjFieldValueDual
        type: !_DualBase
          name: EnumObjFieldValueDual
    fields:
      - !_DualField
        name: field
        type: !_DualBase
          name: EnumObjFieldValueDual
    name: ObjFieldValueDual
    typeKind: !_TypeKind Dual
  !_Identifier ObjFieldValueInp: !_TypeInput
    allFields:
      - !_ObjectFor(_InputField)
        name: field
        object: ObjFieldValueInp
        type: !_InputBase
          name: EnumObjFieldValueInp
    fields:
      - !_InputField
        name: field
        type: !_InputBase
          name: EnumObjFieldValueInp
    name: ObjFieldValueInp
    typeKind: !_TypeKind Input
  !_Identifier ObjFieldValueOutp: !_TypeOutput
    allFields:
      - !_ObjectFor(_OutputField)
        field: field
        label: objFieldValueOutp
        name: EnumObjFieldValueOutp
        object: ObjFieldValueOutp
        typeKind: !_SimpleKind Enum
    fields:
      - !_OutputEnum
        field: field
        label: objFieldValueOutp
        name: EnumObjFieldValueOutp
        typeKind: !_SimpleKind Enum
    name: ObjFieldValueOutp
    typeKind: !_TypeKind Output
  !_Identifier ObjGnrcEnumDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: ObjGnrcEnumDual
        type: !_DualBase
          name: RefObjGnrcEnumDual
          typeArgs:
            - !_DualArg
              name: EnumObjGnrcEnumDual
    alternates:
      - !_DualAlternate
        type: !_DualBase
          name: RefObjGnrcEnumDual
          typeArgs:
            - !_DualArg
              name: EnumObjGnrcEnumDual
    name: ObjGnrcEnumDual
    typeKind: !_TypeKind Dual
  !_Identifier ObjGnrcEnumInp: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        object: ObjGnrcEnumInp
        type: !_InputBase
          name: RefObjGnrcEnumInp
          typeArgs:
            - !_InputArg
              name: EnumObjGnrcEnumInp
    alternates:
      - !_InputAlternate
        type: !_InputBase
          name: RefObjGnrcEnumInp
          typeArgs:
            - !_InputArg
              name: EnumObjGnrcEnumInp
    name: ObjGnrcEnumInp
    typeKind: !_TypeKind Input
  !_Identifier ObjGnrcEnumOutp: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: ObjGnrcEnumOutp
        type: !_OutputBase
          name: RefObjGnrcEnumOutp
          typeArgs:
            - !_TypeRef(_SimpleKind)
              label: objGnrcEnumOutp
              name: EnumObjGnrcEnumOutp
              typeKind: !_SimpleKind Enum
    alternates:
      - !_OutputAlternate
        type: !_OutputBase
          name: RefObjGnrcEnumOutp
          typeArgs:
            - !_TypeRef(_SimpleKind)
              label: objGnrcEnumOutp
              name: EnumObjGnrcEnumOutp
              typeKind: !_SimpleKind Enum
    name: ObjGnrcEnumOutp
    typeKind: !_TypeKind Output
  !_Identifier ObjGnrcValueDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: ObjGnrcValueDual
        type: !_DualBase
          name: RefObjGnrcValueDual
          typeArgs:
            - !_DualArg
              name: objGnrcValueDual
    alternates:
      - !_DualAlternate
        type: !_DualBase
          name: RefObjGnrcValueDual
          typeArgs:
            - !_DualArg
              name: objGnrcValueDual
    name: ObjGnrcValueDual
    typeKind: !_TypeKind Dual
  !_Identifier ObjGnrcValueInp: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        object: ObjGnrcValueInp
        type: !_InputBase
          name: RefObjGnrcValueInp
          typeArgs:
            - !_InputArg
              name: objGnrcValueInp
    alternates:
      - !_InputAlternate
        type: !_InputBase
          name: RefObjGnrcValueInp
          typeArgs:
            - !_InputArg
              name: objGnrcValueInp
    name: ObjGnrcValueInp
    typeKind: !_TypeKind Input
  !_Identifier ObjGnrcValueOutp: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: ObjGnrcValueOutp
        type: !_OutputBase
          name: RefObjGnrcValueOutp
          typeArgs:
            - !_OutputArg
              name: objGnrcValueOutp
    alternates:
      - !_OutputAlternate
        type: !_OutputBase
          name: RefObjGnrcValueOutp
          typeArgs:
            - !_OutputArg
              name: objGnrcValueOutp
    name: ObjGnrcValueOutp
    typeKind: !_TypeKind Output
  !_Identifier ObjInp: !_TypeInput
    name: ObjInp
    typeKind: !_TypeKind Input
  !_Identifier ObjOutp: !_TypeOutput
    name: ObjOutp
    typeKind: !_TypeKind Output
  !_Identifier ObjParamCnstDual: !_TypeDual
    allFields:
      - !_ObjectFor(_DualField)
        name: test
        object: ObjParamCnstDual
        type: !_DualBase
          typeParam: test
      - !_ObjectFor(_DualField)
        name: type
        object: ObjParamCnstDual
        type: !_DualBase
          typeParam: test
    fields:
      - !_DualField
        name: test
        type: !_DualBase
          typeParam: test
      - !_DualField
        name: type
        type: !_DualBase
          typeParam: test
    name: ObjParamCnstDual
    typeKind: !_TypeKind Dual
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: String
          typeKind: !_TypeKind Basic
        name: test
  !_Identifier ObjParamCnstInp: !_TypeInput
    allFields:
      - !_ObjectFor(_InputField)
        name: test
        object: ObjParamCnstInp
        type: !_InputBase
          typeParam: test
      - !_ObjectFor(_InputField)
        name: type
        object: ObjParamCnstInp
        type: !_InputBase
          typeParam: test
    fields:
      - !_InputField
        name: test
        type: !_InputBase
          typeParam: test
      - !_InputField
        name: type
        type: !_InputBase
          typeParam: test
    name: ObjParamCnstInp
    typeKind: !_TypeKind Input
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: String
          typeKind: !_TypeKind Basic
        name: test
  !_Identifier ObjParamCnstOutp: !_TypeOutput
    allFields:
      - !_ObjectFor(_OutputField)
        name: test
        object: ObjParamCnstOutp
        type: !_OutputBase
          typeParam: test
      - !_ObjectFor(_OutputField)
        name: type
        object: ObjParamCnstOutp
        type: !_OutputBase
          typeParam: test
    fields:
      - !_OutputField
        name: test
        type: !_OutputBase
          typeParam: test
      - !_OutputField
        name: type
        type: !_OutputBase
          typeParam: test
    name: ObjParamCnstOutp
    typeKind: !_TypeKind Output
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: String
          typeKind: !_TypeKind Basic
        name: test
  !_Identifier ObjParamDual: !_TypeDual
    allFields:
      - !_ObjectFor(_DualField)
        name: test
        object: ObjParamDual
        type: !_DualBase
          typeParam: test
      - !_ObjectFor(_DualField)
        name: type
        object: ObjParamDual
        type: !_DualBase
          typeParam: type
    fields:
      - !_DualField
        name: test
        type: !_DualBase
          typeParam: test
      - !_DualField
        name: type
        type: !_DualBase
          typeParam: type
    name: ObjParamDual
    typeKind: !_TypeKind Dual
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: String
          typeKind: !_TypeKind Basic
        name: test
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: String
          typeKind: !_TypeKind Basic
        name: type
  !_Identifier ObjParamDupDual: !_TypeDual
    allFields:
      - !_ObjectFor(_DualField)
        name: test
        object: ObjParamDupDual
        type: !_DualBase
          typeParam: test
      - !_ObjectFor(_DualField)
        name: type
        object: ObjParamDupDual
        type: !_DualBase
          typeParam: test
    fields:
      - !_DualField
        name: test
        type: !_DualBase
          typeParam: test
      - !_DualField
        name: type
        type: !_DualBase
          typeParam: test
    name: ObjParamDupDual
    typeKind: !_TypeKind Dual
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: String
          typeKind: !_TypeKind Basic
        name: test
  !_Identifier ObjParamDupInp: !_TypeInput
    allFields:
      - !_ObjectFor(_InputField)
        name: test
        object: ObjParamDupInp
        type: !_InputBase
          typeParam: test
      - !_ObjectFor(_InputField)
        name: type
        object: ObjParamDupInp
        type: !_InputBase
          typeParam: test
    fields:
      - !_InputField
        name: test
        type: !_InputBase
          typeParam: test
      - !_InputField
        name: type
        type: !_InputBase
          typeParam: test
    name: ObjParamDupInp
    typeKind: !_TypeKind Input
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: String
          typeKind: !_TypeKind Basic
        name: test
  !_Identifier ObjParamDupOutp: !_TypeOutput
    allFields:
      - !_ObjectFor(_OutputField)
        name: test
        object: ObjParamDupOutp
        type: !_OutputBase
          typeParam: test
      - !_ObjectFor(_OutputField)
        name: type
        object: ObjParamDupOutp
        type: !_OutputBase
          typeParam: test
    fields:
      - !_OutputField
        name: test
        type: !_OutputBase
          typeParam: test
      - !_OutputField
        name: type
        type: !_OutputBase
          typeParam: test
    name: ObjParamDupOutp
    typeKind: !_TypeKind Output
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: String
          typeKind: !_TypeKind Basic
        name: test
  !_Identifier ObjParamInp: !_TypeInput
    allFields:
      - !_ObjectFor(_InputField)
        name: test
        object: ObjParamInp
        type: !_InputBase
          typeParam: test
      - !_ObjectFor(_InputField)
        name: type
        object: ObjParamInp
        type: !_InputBase
          typeParam: type
    fields:
      - !_InputField
        name: test
        type: !_InputBase
          typeParam: test
      - !_InputField
        name: type
        type: !_InputBase
          typeParam: type
    name: ObjParamInp
    typeKind: !_TypeKind Input
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: String
          typeKind: !_TypeKind Basic
        name: test
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: String
          typeKind: !_TypeKind Basic
        name: type
  !_Identifier ObjParamOutp: !_TypeOutput
    allFields:
      - !_ObjectFor(_OutputField)
        name: test
        object: ObjParamOutp
        type: !_OutputBase
          typeParam: test
      - !_ObjectFor(_OutputField)
        name: type
        object: ObjParamOutp
        type: !_OutputBase
          typeParam: type
    fields:
      - !_OutputField
        name: test
        type: !_OutputBase
          typeParam: test
      - !_OutputField
        name: type
        type: !_OutputBase
          typeParam: type
    name: ObjParamOutp
    typeKind: !_TypeKind Output
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: String
          typeKind: !_TypeKind Basic
        name: test
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: String
          typeKind: !_TypeKind Basic
        name: type
  !_Identifier ObjPrntDual: !_TypeDual
    name: ObjPrntDual
    parent: !_DualBase
      name: RefObjPrntDual
    typeKind: !_TypeKind Dual
  !_Identifier ObjPrntInp: !_TypeInput
    name: ObjPrntInp
    parent: !_InputBase
      name: RefObjPrntInp
    typeKind: !_TypeKind Input
  !_Identifier ObjPrntOutp: !_TypeOutput
    name: ObjPrntOutp
    parent: !_OutputBase
      name: RefObjPrntOutp
    typeKind: !_TypeKind Output
  !_Identifier OutpDescrParam: !_TypeOutput
    allFields:
      - !_ObjectFor(_OutputField)
        description: 'Test Descr'
        name: field
        object: OutpDescrParam
        parameters:
          - !_InputParam
            name: InOutpDescrParam
        type: !_DualBase
          name: FldOutpDescrParam
    fields:
      - !_OutputField
        description: 'Test Descr'
        name: field
        parameters:
          - !_InputParam
            name: InOutpDescrParam
        type: !_DualBase
          name: FldOutpDescrParam
    name: OutpDescrParam
    typeKind: !_TypeKind Output
  !_Identifier OutpFieldParam: !_TypeOutput
    allFields:
      - !_ObjectFor(_OutputField)
        name: field
        object: OutpFieldParam
        parameters:
          - !_InputParam
            name: OutpFieldParam1
          - !_InputParam
            name: OutpFieldParam2
        type: !_DualBase
          name: FldOutpFieldParam
    fields:
      - !_OutputField
        name: field
        parameters:
          - !_InputParam
            name: OutpFieldParam1
          - !_InputParam
            name: OutpFieldParam2
        type: !_DualBase
          name: FldOutpFieldParam
    name: OutpFieldParam
    typeKind: !_TypeKind Output
  !_Identifier OutpFieldParam1: !_TypeInput
    name: OutpFieldParam1
    typeKind: !_TypeKind Input
  !_Identifier OutpFieldParam2: !_TypeInput
    name: OutpFieldParam2
    typeKind: !_TypeKind Input
  !_Identifier OutpParam: !_TypeOutput
    allFields:
      - !_ObjectFor(_OutputField)
        name: field
        object: OutpParam
        parameters:
          - !_InputParam
            name: InOutpParam
        type: !_DualBase
          name: FldOutpParam
    fields:
      - !_OutputField
        name: field
        parameters:
          - !_InputParam
            name: InOutpParam
        type: !_DualBase
          name: FldOutpParam
    name: OutpParam
    typeKind: !_TypeKind Output
  !_Identifier OutpParamDescr: !_TypeOutput
    allFields:
      - !_ObjectFor(_OutputField)
        name: field
        object: OutpParamDescr
        parameters:
          - !_InputParam
            description: 'Test Descr'
            name: InOutpParamDescr
        type: !_DualBase
          name: FldOutpParamDescr
    fields:
      - !_OutputField
        name: field
        parameters:
          - !_InputParam
            description: 'Test Descr'
            name: InOutpParamDescr
        type: !_DualBase
          name: FldOutpParamDescr
    name: OutpParamDescr
    typeKind: !_TypeKind Output
  !_Identifier OutpParamModDmn: !_TypeOutput
    allFields:
      - !_ObjectFor(_OutputField)
        name: field
        object: OutpParamModDmn
        parameters:
          - !_InputParam
            modifiers: [!_ModifierDictionary{by:DomOutpParamModDmn,modifierKind:!_ModifierKind Dict,typeKind:!_SimpleKind Domain}]
            name: InOutpParamModDmn
        type: !_OutputBase
          name: DomOutpParamModDmn
    fields:
      - !_OutputField
        name: field
        parameters:
          - !_InputParam
            modifiers: [!_ModifierDictionary{by:DomOutpParamModDmn,modifierKind:!_ModifierKind Dict,typeKind:!_SimpleKind Domain}]
            name: InOutpParamModDmn
        type: !_OutputBase
          name: DomOutpParamModDmn
    name: OutpParamModDmn
    typeKind: !_TypeKind Output
  !_Identifier OutpParamModParam: !_TypeOutput
    allFields:
      - !_ObjectFor(_OutputField)
        name: field
        object: OutpParamModParam
        parameters:
          - !_InputParam
            modifiers: [!_ModifierTypeParam{by:mod,modifierKind:!_ModifierKind Param}]
            name: InOutpParamModParam
        type: !_OutputBase
          name: DomOutpParamModParam
    fields:
      - !_OutputField
        name: field
        parameters:
          - !_InputParam
            modifiers: [!_ModifierTypeParam{by:mod,modifierKind:!_ModifierKind Param}]
            name: InOutpParamModParam
        type: !_OutputBase
          name: DomOutpParamModParam
    name: OutpParamModParam
    typeKind: !_TypeKind Output
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: String
          typeKind: !_TypeKind Basic
        name: mod
  !_Identifier OutpParamTypeDescr: !_TypeOutput
    allFields:
      - !_ObjectFor(_OutputField)
        name: field
        object: OutpParamTypeDescr
        parameters:
          - !_InputParam
            name: InOutpParamTypeDescr
        type: !_DualBase
          description: 'Test Descr'
          name: FldOutpParamTypeDescr
    fields:
      - !_OutputField
        name: field
        parameters:
          - !_InputParam
            name: InOutpParamTypeDescr
        type: !_DualBase
          description: 'Test Descr'
          name: FldOutpParamTypeDescr
    name: OutpParamTypeDescr
    typeKind: !_TypeKind Output
  !_Identifier OutpPrntGnrc: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: OutpPrntGnrc
        type: !_OutputBase
          name: RefOutpPrntGnrc
          typeArgs:
            - !_TypeRef(_SimpleKind)
              label: prnt_outpPrntGnrc
              name: EnumOutpPrntGnrc
              typeKind: !_SimpleKind Enum
    alternates:
      - !_OutputAlternate
        type: !_OutputBase
          name: RefOutpPrntGnrc
          typeArgs:
            - !_TypeRef(_SimpleKind)
              label: prnt_outpPrntGnrc
              name: EnumOutpPrntGnrc
              typeKind: !_SimpleKind Enum
    name: OutpPrntGnrc
    typeKind: !_TypeKind Output
  !_Identifier OutpPrntParam: !_TypeOutput
    allFields:
      - !_ObjectFor(_OutputField)
        name: field
        object: PrntOutpPrntParam
        parameters:
          - !_InputParam
            name: PrntOutpPrntParamIn
        type: !_DualBase
          name: FldOutpPrntParam
      - !_ObjectFor(_OutputField)
        name: field
        object: OutpPrntParam
        parameters:
          - !_InputParam
            name: InOutpPrntParam
        type: !_DualBase
          name: FldOutpPrntParam
    fields:
      - !_OutputField
        name: field
        parameters:
          - !_InputParam
            name: InOutpPrntParam
        type: !_DualBase
          name: FldOutpPrntParam
    name: OutpPrntParam
    parent: !_OutputBase
      name: PrntOutpPrntParam
    typeKind: !_TypeKind Output
  !_Identifier ParentGnrcPrntEnumChildDual: !_TypeEnum
    allItems:
      - !_EnumLabel
        enum: ParentGnrcPrntEnumChildDual
        name: gnrcPrntEnumChildDualParent
    items:
      - !_Aliased
        name: gnrcPrntEnumChildDualParent
    name: ParentGnrcPrntEnumChildDual
    typeKind: !_TypeKind Enum
  !_Identifier ParentGnrcPrntEnumChildInp: !_TypeEnum
    allItems:
      - !_EnumLabel
        enum: ParentGnrcPrntEnumChildInp
        name: gnrcPrntEnumChildInpParent
    items:
      - !_Aliased
        name: gnrcPrntEnumChildInpParent
    name: ParentGnrcPrntEnumChildInp
    typeKind: !_TypeKind Enum
  !_Identifier ParentGnrcPrntEnumChildOutp: !_TypeEnum
    allItems:
      - !_EnumLabel
        enum: ParentGnrcPrntEnumChildOutp
        name: gnrcPrntEnumChildOutpParent
    items:
      - !_Aliased
        name: gnrcPrntEnumChildOutpParent
    name: ParentGnrcPrntEnumChildOutp
    typeKind: !_TypeKind Enum
  !_Identifier ParentGnrcPrntEnumPrntDual: !_TypeEnum
    allItems:
      - !_EnumLabel
        enum: ParentGnrcPrntEnumPrntDual
        name: gnrcPrntEnumPrntDualParent
    items:
      - !_Aliased
        name: gnrcPrntEnumPrntDualParent
    name: ParentGnrcPrntEnumPrntDual
    typeKind: !_TypeKind Enum
  !_Identifier ParentGnrcPrntEnumPrntInp: !_TypeEnum
    allItems:
      - !_EnumLabel
        enum: ParentGnrcPrntEnumPrntInp
        name: gnrcPrntEnumPrntInpParent
    items:
      - !_Aliased
        name: gnrcPrntEnumPrntInpParent
    name: ParentGnrcPrntEnumPrntInp
    typeKind: !_TypeKind Enum
  !_Identifier ParentGnrcPrntEnumPrntOutp: !_TypeEnum
    allItems:
      - !_EnumLabel
        enum: ParentGnrcPrntEnumPrntOutp
        name: gnrcPrntEnumPrntOutpParent
    items:
      - !_Aliased
        name: gnrcPrntEnumPrntOutpParent
    name: ParentGnrcPrntEnumPrntOutp
    typeKind: !_TypeKind Enum
  !_Identifier ParentObjCnstEnumPrntDual: !_TypeEnum
    allItems:
      - !_EnumLabel
        enum: ParentObjCnstEnumPrntDual
        name: parentObjCnstEnumPrntDual
    items:
      - !_Aliased
        name: parentObjCnstEnumPrntDual
    name: ParentObjCnstEnumPrntDual
    typeKind: !_TypeKind Enum
  !_Identifier ParentObjCnstEnumPrntInp: !_TypeEnum
    allItems:
      - !_EnumLabel
        enum: ParentObjCnstEnumPrntInp
        name: parentObjCnstEnumPrntInp
    items:
      - !_Aliased
        name: parentObjCnstEnumPrntInp
    name: ParentObjCnstEnumPrntInp
    typeKind: !_TypeKind Enum
  !_Identifier ParentObjCnstEnumPrntOutp: !_TypeEnum
    allItems:
      - !_EnumLabel
        enum: ParentObjCnstEnumPrntOutp
        name: parentObjCnstEnumPrntOutp
    items:
      - !_Aliased
        name: parentObjCnstEnumPrntOutp
    name: ParentObjCnstEnumPrntOutp
    typeKind: !_TypeKind Enum
  !_Identifier ParentObjCnstPrntEnumDual: !_TypeEnum
    allItems:
      - !_EnumLabel
        enum: ParentObjCnstPrntEnumDual
        name: parentObjCnstPrntEnumDual
    items:
      - !_Aliased
        name: parentObjCnstPrntEnumDual
    name: ParentObjCnstPrntEnumDual
    typeKind: !_TypeKind Enum
  !_Identifier ParentObjCnstPrntEnumInp: !_TypeEnum
    allItems:
      - !_EnumLabel
        enum: ParentObjCnstPrntEnumInp
        name: parentObjCnstPrntEnumInp
    items:
      - !_Aliased
        name: parentObjCnstPrntEnumInp
    name: ParentObjCnstPrntEnumInp
    typeKind: !_TypeKind Enum
  !_Identifier ParentObjCnstPrntEnumOutp: !_TypeEnum
    allItems:
      - !_EnumLabel
        enum: ParentObjCnstPrntEnumOutp
        name: parentObjCnstPrntEnumOutp
    items:
      - !_Aliased
        name: parentObjCnstPrntEnumOutp
    name: ParentObjCnstPrntEnumOutp
    typeKind: !_TypeKind Enum
  !_Identifier PrntAltDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: RefPrntAltDual
        type: !_DualBase
          name: String
      - !_ObjectFor(_DualAlternate)
        object: PrntAltDual
        type: !_DualBase
          name: Number
    allFields:
      - !_ObjectFor(_DualField)
        name: parent
        object: RefPrntAltDual
        type: !_DualBase
          name: Number
    alternates:
      - !_DualAlternate
        type: !_DualBase
          name: Number
    name: PrntAltDual
    parent: !_DualBase
      name: RefPrntAltDual
    typeKind: !_TypeKind Dual
  !_Identifier PrntAltInp: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        object: RefPrntAltInp
        type: !_InputBase
          name: String
      - !_ObjectFor(_InputAlternate)
        object: PrntAltInp
        type: !_InputBase
          name: Number
    allFields:
      - !_ObjectFor(_InputField)
        name: parent
        object: RefPrntAltInp
        type: !_InputBase
          name: Number
    alternates:
      - !_InputAlternate
        type: !_InputBase
          name: Number
    name: PrntAltInp
    parent: !_InputBase
      name: RefPrntAltInp
    typeKind: !_TypeKind Input
  !_Identifier PrntAltOutp: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: RefPrntAltOutp
        type: !_OutputBase
          name: String
      - !_ObjectFor(_OutputAlternate)
        object: PrntAltOutp
        type: !_OutputBase
          name: Number
    allFields:
      - !_ObjectFor(_OutputField)
        name: parent
        object: RefPrntAltOutp
        type: !_OutputBase
          name: Number
    alternates:
      - !_OutputAlternate
        type: !_OutputBase
          name: Number
    name: PrntAltOutp
    parent: !_OutputBase
      name: RefPrntAltOutp
    typeKind: !_TypeKind Output
  !_Identifier PrntCnstAltDualDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: PrntCnstAltDualDual
        type: !_DualBase
          name: String
    alternates:
      - !_DualAlternate
        type: !_DualBase
          name: String
    name: PrntCnstAltDualDual
    typeKind: !_TypeKind Dual
  !_Identifier PrntCnstAltDualInp: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: PrntCnstAltDualInp
        type: !_DualBase
          name: String
    alternates:
      - !_DualAlternate
        type: !_DualBase
          name: String
    name: PrntCnstAltDualInp
    typeKind: !_TypeKind Dual
  !_Identifier PrntCnstAltDualOutp: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: PrntCnstAltDualOutp
        type: !_DualBase
          name: String
    alternates:
      - !_DualAlternate
        type: !_DualBase
          name: String
    name: PrntCnstAltDualOutp
    typeKind: !_TypeKind Dual
  !_Identifier PrntCnstAltObjDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: PrntCnstAltObjDual
        type: !_DualBase
          name: String
    alternates:
      - !_DualAlternate
        type: !_DualBase
          name: String
    name: PrntCnstAltObjDual
    typeKind: !_TypeKind Dual
  !_Identifier PrntCnstAltObjInp: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        object: PrntCnstAltObjInp
        type: !_InputBase
          name: String
    alternates:
      - !_InputAlternate
        type: !_InputBase
          name: String
    name: PrntCnstAltObjInp
    typeKind: !_TypeKind Input
  !_Identifier PrntCnstAltObjOutp: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: PrntCnstAltObjOutp
        type: !_OutputBase
          name: String
    alternates:
      - !_OutputAlternate
        type: !_OutputBase
          name: String
    name: PrntCnstAltObjOutp
    typeKind: !_TypeKind Output
  !_Identifier PrntCnstFieldDualDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: PrntCnstFieldDualDual
        type: !_DualBase
          name: String
    alternates:
      - !_DualAlternate
        type: !_DualBase
          name: String
    name: PrntCnstFieldDualDual
    typeKind: !_TypeKind Dual
  !_Identifier PrntCnstFieldDualInp: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: PrntCnstFieldDualInp
        type: !_DualBase
          name: String
    alternates:
      - !_DualAlternate
        type: !_DualBase
          name: String
    name: PrntCnstFieldDualInp
    typeKind: !_TypeKind Dual
  !_Identifier PrntCnstFieldDualOutp: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: PrntCnstFieldDualOutp
        type: !_DualBase
          name: String
    alternates:
      - !_DualAlternate
        type: !_DualBase
          name: String
    name: PrntCnstFieldDualOutp
    typeKind: !_TypeKind Dual
  !_Identifier PrntCnstFieldObjDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: PrntCnstFieldObjDual
        type: !_DualBase
          name: String
    alternates:
      - !_DualAlternate
        type: !_DualBase
          name: String
    name: PrntCnstFieldObjDual
    typeKind: !_TypeKind Dual
  !_Identifier PrntCnstFieldObjInp: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        object: PrntCnstFieldObjInp
        type: !_InputBase
          name: String
    alternates:
      - !_InputAlternate
        type: !_InputBase
          name: String
    name: PrntCnstFieldObjInp
    typeKind: !_TypeKind Input
  !_Identifier PrntCnstFieldObjOutp: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: PrntCnstFieldObjOutp
        type: !_OutputBase
          name: String
    alternates:
      - !_OutputAlternate
        type: !_OutputBase
          name: String
    name: PrntCnstFieldObjOutp
    typeKind: !_TypeKind Output
  !_Identifier PrntCnstPrntDualGrndDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: GrndCnstPrntDualGrndDual
        type: !_DualBase
          name: String
    name: PrntCnstPrntDualGrndDual
    parent: !_DualBase
      name: GrndCnstPrntDualGrndDual
    typeKind: !_TypeKind Dual
  !_Identifier PrntCnstPrntDualGrndInp: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: GrndCnstPrntDualGrndInp
        type: !_DualBase
          name: String
    name: PrntCnstPrntDualGrndInp
    parent: !_DualBase
      name: GrndCnstPrntDualGrndInp
    typeKind: !_TypeKind Dual
  !_Identifier PrntCnstPrntDualGrndOutp: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: GrndCnstPrntDualGrndOutp
        type: !_DualBase
          name: String
    name: PrntCnstPrntDualGrndOutp
    parent: !_DualBase
      name: GrndCnstPrntDualGrndOutp
    typeKind: !_TypeKind Dual
  !_Identifier PrntCnstPrntDualPrntDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: PrntCnstPrntDualPrntDual
        type: !_DualBase
          name: String
    alternates:
      - !_DualAlternate
        type: !_DualBase
          name: String
    name: PrntCnstPrntDualPrntDual
    typeKind: !_TypeKind Dual
  !_Identifier PrntCnstPrntDualPrntInp: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: PrntCnstPrntDualPrntInp
        type: !_DualBase
          name: String
    alternates:
      - !_DualAlternate
        type: !_DualBase
          name: String
    name: PrntCnstPrntDualPrntInp
    typeKind: !_TypeKind Dual
  !_Identifier PrntCnstPrntDualPrntOutp: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: PrntCnstPrntDualPrntOutp
        type: !_DualBase
          name: String
    alternates:
      - !_DualAlternate
        type: !_DualBase
          name: String
    name: PrntCnstPrntDualPrntOutp
    typeKind: !_TypeKind Dual
  !_Identifier PrntCnstPrntObjPrntDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: PrntCnstPrntObjPrntDual
        type: !_DualBase
          name: String
    alternates:
      - !_DualAlternate
        type: !_DualBase
          name: String
    name: PrntCnstPrntObjPrntDual
    typeKind: !_TypeKind Dual
  !_Identifier PrntCnstPrntObjPrntInp: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        object: PrntCnstPrntObjPrntInp
        type: !_InputBase
          name: String
    alternates:
      - !_InputAlternate
        type: !_InputBase
          name: String
    name: PrntCnstPrntObjPrntInp
    typeKind: !_TypeKind Input
  !_Identifier PrntCnstPrntObjPrntOutp: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: PrntCnstPrntObjPrntOutp
        type: !_OutputBase
          name: String
    alternates:
      - !_OutputAlternate
        type: !_OutputBase
          name: String
    name: PrntCnstPrntObjPrntOutp
    typeKind: !_TypeKind Output
  !_Identifier PrntDescrDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: RefPrntDescrDual
        type: !_DualBase
          name: String
    allFields:
      - !_ObjectFor(_DualField)
        name: parent
        object: RefPrntDescrDual
        type: !_DualBase
          name: Number
    name: PrntDescrDual
    parent: !_DualBase
      description: 'Test Descr'
      name: RefPrntDescrDual
    typeKind: !_TypeKind Dual
  !_Identifier PrntDescrInp: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        object: RefPrntDescrInp
        type: !_InputBase
          name: String
    allFields:
      - !_ObjectFor(_InputField)
        name: parent
        object: RefPrntDescrInp
        type: !_InputBase
          name: Number
    name: PrntDescrInp
    parent: !_InputBase
      description: 'Test Descr'
      name: RefPrntDescrInp
    typeKind: !_TypeKind Input
  !_Identifier PrntDescrOutp: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: RefPrntDescrOutp
        type: !_OutputBase
          name: String
    allFields:
      - !_ObjectFor(_OutputField)
        name: parent
        object: RefPrntDescrOutp
        type: !_OutputBase
          name: Number
    name: PrntDescrOutp
    parent: !_OutputBase
      description: 'Test Descr'
      name: RefPrntDescrOutp
    typeKind: !_TypeKind Output
  !_Identifier PrntDmnBoolPrnt: !_DomainBoolean
    allItems:
      - !_DomainItem(_DomainTrueFalse)
        domain: PrntDmnBoolPrnt
        exclude: false
        value: true
    domainKind: !_DomainKind Boolean
    items:
      - !_DomainTrueFalse
        exclude: false
        value: true
    name: PrntDmnBoolPrnt
    typeKind: !_TypeKind Domain
  !_Identifier PrntDmnBoolPrntDescr: !_DomainBoolean
    allItems:
      - !_DomainItem(_DomainTrueFalse)
        domain: PrntDmnBoolPrntDescr
        exclude: false
        value: true
    domainKind: !_DomainKind Boolean
    items:
      - !_DomainTrueFalse
        exclude: false
        value: true
    name: PrntDmnBoolPrntDescr
    typeKind: !_TypeKind Domain
  !_Identifier PrntDmnEnumAllPrnt: !_TypeEnum
    allItems:
      - !_EnumLabel
        enum: PrntDmnEnumAllPrnt
        name: prnt_dmnEnumAllPrnt
    items:
      - !_Aliased
        name: prnt_dmnEnumAllPrnt
    name: PrntDmnEnumAllPrnt
    typeKind: !_TypeKind Enum
  !_Identifier PrntDmnEnumPrnt: !_DomainEnum
    allItems:
      - !_DomainItem(_DomainLabel)
        domain: PrntDmnEnumPrnt
        exclude: false
        value: !_EnumValue
          label: prnt_dmnEnumPrnt
          name: EnumDmnEnumPrnt
          typeKind: !_SimpleKind Enum
    domainKind: !_DomainKind Enum
    items:
      - !_DomainLabel
        exclude: false
        value: !_EnumValue
          label: prnt_dmnEnumPrnt
          name: EnumDmnEnumPrnt
          typeKind: !_SimpleKind Enum
    name: PrntDmnEnumPrnt
    typeKind: !_TypeKind Domain
  !_Identifier PrntDmnEnumPrntDescr: !_DomainEnum
    allItems:
      - !_DomainItem(_DomainLabel)
        domain: PrntDmnEnumPrntDescr
        exclude: false
        value: !_EnumValue
          label: prnt_dmnEnumPrntDescr
          name: EnumDmnEnumPrntDescr
          typeKind: !_SimpleKind Enum
    domainKind: !_DomainKind Enum
    items:
      - !_DomainLabel
        exclude: false
        value: !_EnumValue
          label: prnt_dmnEnumPrntDescr
          name: EnumDmnEnumPrntDescr
          typeKind: !_SimpleKind Enum
    name: PrntDmnEnumPrntDescr
    typeKind: !_TypeKind Domain
  !_Identifier PrntDmnEnumUnqPrnt: !_TypeEnum
    allItems:
      - !_EnumLabel
        enum: PrntDmnEnumUnqPrnt
        name: dmnEnumUnqPrnt
      - !_EnumLabel
        enum: PrntDmnEnumUnqPrnt
        name: prnt_dmnEnumUnqPrnt
    items:
      - !_Aliased
        name: dmnEnumUnqPrnt
      - !_Aliased
        name: prnt_dmnEnumUnqPrnt
    name: PrntDmnEnumUnqPrnt
    typeKind: !_TypeKind Enum
  !_Identifier PrntDmnEnumValuePrnt: !_TypeEnum
    allItems:
      - !_EnumLabel
        enum: PrntDmnEnumValuePrnt
        name: prnt_dmnEnumValuePrnt
    items:
      - !_Aliased
        name: prnt_dmnEnumValuePrnt
    name: PrntDmnEnumValuePrnt
    typeKind: !_TypeKind Enum
  !_Identifier PrntDmnNmbrPrnt: !_DomainNumber
    allItems:
      - !_DomainItem(_DomainRange)
        domain: PrntDmnNmbrPrnt
        exclude: false
        to: 2
    domainKind: !_DomainKind Number
    items:
      - !_DomainRange
        exclude: false
        to: 2
    name: PrntDmnNmbrPrnt
    typeKind: !_TypeKind Domain
  !_Identifier PrntDmnNmbrPrntDescr: !_DomainNumber
    allItems:
      - !_DomainItem(_DomainRange)
        domain: PrntDmnNmbrPrntDescr
        exclude: false
        to: 2
    domainKind: !_DomainKind Number
    items:
      - !_DomainRange
        exclude: false
        to: 2
    name: PrntDmnNmbrPrntDescr
    typeKind: !_TypeKind Domain
  !_Identifier PrntDmnStrPrnt: !_DomainString
    allItems:
      - !_DomainItem(_DomainRegex)
        domain: PrntDmnStrPrnt
        exclude: false
        pattern: b+
    domainKind: !_DomainKind String
    items:
      - !_DomainRegex
        exclude: false
        pattern: b+
    name: PrntDmnStrPrnt
    typeKind: !_TypeKind Domain
  !_Identifier PrntDmnStrPrntDescr: !_DomainString
    allItems:
      - !_DomainItem(_DomainRegex)
        domain: PrntDmnStrPrntDescr
        exclude: false
        pattern: b+
    domainKind: !_DomainKind String
    items:
      - !_DomainRegex
        exclude: false
        pattern: b+
    name: PrntDmnStrPrntDescr
    typeKind: !_TypeKind Domain
  !_Identifier PrntDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: RefPrntDual
        type: !_DualBase
          name: String
    allFields:
      - !_ObjectFor(_DualField)
        name: parent
        object: RefPrntDual
        type: !_DualBase
          name: Number
    name: PrntDual
    parent: !_DualBase
      name: RefPrntDual
    typeKind: !_TypeKind Dual
  !_Identifier PrntDualDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: RefPrntDualDual
        type: !_DualBase
          name: String
    allFields:
      - !_ObjectFor(_DualField)
        name: parent
        object: RefPrntDualDual
        type: !_DualBase
          name: Number
    name: PrntDualDual
    parent: !_DualBase
      name: RefPrntDualDual
    typeKind: !_TypeKind Dual
  !_Identifier PrntDualInp: !_TypeInput
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: RefPrntDualInp
        type: !_DualBase
          name: String
    allFields:
      - !_ObjectFor(_DualField)
        name: parent
        object: RefPrntDualInp
        type: !_DualBase
          name: Number
    name: PrntDualInp
    parent: !_DualBase
      name: RefPrntDualInp
    typeKind: !_TypeKind Input
  !_Identifier PrntDualOutp: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: RefPrntDualOutp
        type: !_DualBase
          name: String
    allFields:
      - !_ObjectFor(_DualField)
        name: parent
        object: RefPrntDualOutp
        type: !_DualBase
          name: Number
    name: PrntDualOutp
    parent: !_DualBase
      name: RefPrntDualOutp
    typeKind: !_TypeKind Output
  !_Identifier PrntEnumPrnt: !_TypeEnum
    allItems:
      - !_EnumLabel
        enum: PrntEnumPrnt
        name: prnt_enumPrnt
    items:
      - !_Aliased
        name: prnt_enumPrnt
    name: PrntEnumPrnt
    typeKind: !_TypeKind Enum
  !_Identifier PrntEnumPrntAlias: !_TypeEnum
    allItems:
      - !_EnumLabel
        enum: PrntEnumPrntAlias
        name: prnt_enumPrntAlias
    items:
      - !_Aliased
        name: prnt_enumPrntAlias
    name: PrntEnumPrntAlias
    typeKind: !_TypeKind Enum
  !_Identifier PrntEnumPrntDescr: !_TypeEnum
    allItems:
      - !_EnumLabel
        enum: PrntEnumPrntDescr
        name: prnt_enumPrntDescr
    items:
      - !_Aliased
        name: prnt_enumPrntDescr
    name: PrntEnumPrntDescr
    typeKind: !_TypeKind Enum
  !_Identifier PrntEnumPrntDup: !_TypeEnum
    allItems:
      - !_EnumLabel
        aliases: [enumPrntDup]
        enum: PrntEnumPrntDup
        name: prnt_enumPrntDup
    items:
      - !_Aliased
        aliases: [enumPrntDup]
        name: prnt_enumPrntDup
    name: PrntEnumPrntDup
    typeKind: !_TypeKind Enum
  !_Identifier PrntEnumSamePrnt: !_TypeEnum
    allItems:
      - !_EnumLabel
        enum: PrntEnumSamePrnt
        name: prnt_enumSamePrnt
    items:
      - !_Aliased
        name: prnt_enumSamePrnt
    name: PrntEnumSamePrnt
    typeKind: !_TypeKind Enum
  !_Identifier PrntFieldDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: RefPrntFieldDual
        type: !_DualBase
          name: String
    allFields:
      - !_ObjectFor(_DualField)
        name: parent
        object: RefPrntFieldDual
        type: !_DualBase
          name: Number
      - !_ObjectFor(_DualField)
        name: field
        object: PrntFieldDual
        type: !_DualBase
          name: Number
    fields:
      - !_DualField
        name: field
        type: !_DualBase
          name: Number
    name: PrntFieldDual
    parent: !_DualBase
      name: RefPrntFieldDual
    typeKind: !_TypeKind Dual
  !_Identifier PrntFieldInp: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        object: RefPrntFieldInp
        type: !_InputBase
          name: String
    allFields:
      - !_ObjectFor(_InputField)
        name: parent
        object: RefPrntFieldInp
        type: !_InputBase
          name: Number
      - !_ObjectFor(_InputField)
        name: field
        object: PrntFieldInp
        type: !_InputBase
          name: Number
    fields:
      - !_InputField
        name: field
        type: !_InputBase
          name: Number
    name: PrntFieldInp
    parent: !_InputBase
      name: RefPrntFieldInp
    typeKind: !_TypeKind Input
  !_Identifier PrntFieldOutp: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: RefPrntFieldOutp
        type: !_OutputBase
          name: String
    allFields:
      - !_ObjectFor(_OutputField)
        name: parent
        object: RefPrntFieldOutp
        type: !_OutputBase
          name: Number
      - !_ObjectFor(_OutputField)
        name: field
        object: PrntFieldOutp
        type: !_OutputBase
          name: Number
    fields:
      - !_OutputField
        name: field
        type: !_OutputBase
          name: Number
    name: PrntFieldOutp
    parent: !_OutputBase
      name: RefPrntFieldOutp
    typeKind: !_TypeKind Output
  !_Identifier PrntInp: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        object: RefPrntInp
        type: !_InputBase
          name: String
    allFields:
      - !_ObjectFor(_InputField)
        name: parent
        object: RefPrntInp
        type: !_InputBase
          name: Number
    name: PrntInp
    parent: !_InputBase
      name: RefPrntInp
    typeKind: !_TypeKind Input
  !_Identifier PrntObjFieldEnumPrntDual: !_TypeEnum
    allItems:
      - !_EnumLabel
        enum: PrntObjFieldEnumPrntDual
        name: prnt_objFieldEnumPrntDual
    items:
      - !_Aliased
        name: prnt_objFieldEnumPrntDual
    name: PrntObjFieldEnumPrntDual
    typeKind: !_TypeKind Enum
  !_Identifier PrntObjFieldEnumPrntInp: !_TypeEnum
    allItems:
      - !_EnumLabel
        enum: PrntObjFieldEnumPrntInp
        name: prnt_objFieldEnumPrntInp
    items:
      - !_Aliased
        name: prnt_objFieldEnumPrntInp
    name: PrntObjFieldEnumPrntInp
    typeKind: !_TypeKind Enum
  !_Identifier PrntObjFieldEnumPrntOutp: !_TypeEnum
    allItems:
      - !_EnumLabel
        enum: PrntObjFieldEnumPrntOutp
        name: prnt_objFieldEnumPrntOutp
    items:
      - !_Aliased
        name: prnt_objFieldEnumPrntOutp
    name: PrntObjFieldEnumPrntOutp
    typeKind: !_TypeKind Enum
  !_Identifier PrntOutp: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: RefPrntOutp
        type: !_OutputBase
          name: String
    allFields:
      - !_ObjectFor(_OutputField)
        name: parent
        object: RefPrntOutp
        type: !_OutputBase
          name: Number
    name: PrntOutp
    parent: !_OutputBase
      name: RefPrntOutp
    typeKind: !_TypeKind Output
  !_Identifier PrntOutpPrntGnrc: !_TypeEnum
    allItems:
      - !_EnumLabel
        enum: PrntOutpPrntGnrc
        name: prnt_outpPrntGnrc
    items:
      - !_Aliased
        name: prnt_outpPrntGnrc
    name: PrntOutpPrntGnrc
    typeKind: !_TypeKind Enum
  !_Identifier PrntOutpPrntParam: !_TypeOutput
    allFields:
      - !_ObjectFor(_OutputField)
        name: field
        object: PrntOutpPrntParam
        parameters:
          - !_InputParam
            name: PrntOutpPrntParamIn
        type: !_DualBase
          name: FldOutpPrntParam
    fields:
      - !_OutputField
        name: field
        parameters:
          - !_InputParam
            name: PrntOutpPrntParamIn
        type: !_DualBase
          name: FldOutpPrntParam
    name: PrntOutpPrntParam
    typeKind: !_TypeKind Output
  !_Identifier PrntOutpPrntParamIn: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        object: PrntOutpPrntParamIn
        type: !_InputBase
          name: String
    allFields:
      - !_ObjectFor(_InputField)
        name: parent
        object: PrntOutpPrntParamIn
        type: !_InputBase
          name: Number
    alternates:
      - !_InputAlternate
        type: !_InputBase
          name: String
    fields:
      - !_InputField
        name: parent
        type: !_InputBase
          name: Number
    name: PrntOutpPrntParamIn
    typeKind: !_TypeKind Input
  !_Identifier PrntParamDiffDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: RefPrntParamDiffDual
        type: !_DualBase
          typeParam: b
    allFields:
      - !_ObjectFor(_DualField)
        name: field
        object: PrntParamDiffDual
        type: !_DualBase
          typeParam: a
    fields:
      - !_DualField
        name: field
        type: !_DualBase
          typeParam: a
    name: PrntParamDiffDual
    parent: !_DualBase
      name: RefPrntParamDiffDual
      typeArgs:
        - !_DualArg
          typeParam: a
    typeKind: !_TypeKind Dual
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: String
          typeKind: !_TypeKind Basic
        name: a
  !_Identifier PrntParamDiffInp: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        object: RefPrntParamDiffInp
        type: !_InputBase
          typeParam: b
    allFields:
      - !_ObjectFor(_InputField)
        name: field
        object: PrntParamDiffInp
        type: !_InputBase
          typeParam: a
    fields:
      - !_InputField
        name: field
        type: !_InputBase
          typeParam: a
    name: PrntParamDiffInp
    parent: !_InputBase
      name: RefPrntParamDiffInp
      typeArgs:
        - !_InputArg
          typeParam: a
    typeKind: !_TypeKind Input
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: String
          typeKind: !_TypeKind Basic
        name: a
  !_Identifier PrntParamDiffOutp: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: RefPrntParamDiffOutp
        type: !_OutputBase
          typeParam: b
    allFields:
      - !_ObjectFor(_OutputField)
        name: field
        object: PrntParamDiffOutp
        type: !_OutputBase
          typeParam: a
    fields:
      - !_OutputField
        name: field
        type: !_OutputBase
          typeParam: a
    name: PrntParamDiffOutp
    parent: !_OutputBase
      name: RefPrntParamDiffOutp
      typeArgs:
        - !_OutputArg
          typeParam: a
    typeKind: !_TypeKind Output
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: String
          typeKind: !_TypeKind Basic
        name: a
  !_Identifier PrntParamSameDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: RefPrntParamSameDual
        type: !_DualBase
          typeParam: a
    allFields:
      - !_ObjectFor(_DualField)
        name: field
        object: PrntParamSameDual
        type: !_DualBase
          typeParam: a
    fields:
      - !_DualField
        name: field
        type: !_DualBase
          typeParam: a
    name: PrntParamSameDual
    parent: !_DualBase
      name: RefPrntParamSameDual
      typeArgs:
        - !_DualArg
          typeParam: a
    typeKind: !_TypeKind Dual
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: String
          typeKind: !_TypeKind Basic
        name: a
  !_Identifier PrntParamSameInp: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        object: RefPrntParamSameInp
        type: !_InputBase
          typeParam: a
    allFields:
      - !_ObjectFor(_InputField)
        name: field
        object: PrntParamSameInp
        type: !_InputBase
          typeParam: a
    fields:
      - !_InputField
        name: field
        type: !_InputBase
          typeParam: a
    name: PrntParamSameInp
    parent: !_InputBase
      name: RefPrntParamSameInp
      typeArgs:
        - !_InputArg
          typeParam: a
    typeKind: !_TypeKind Input
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: String
          typeKind: !_TypeKind Basic
        name: a
  !_Identifier PrntParamSameOutp: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: RefPrntParamSameOutp
        type: !_OutputBase
          typeParam: a
    allFields:
      - !_ObjectFor(_OutputField)
        name: field
        object: PrntParamSameOutp
        type: !_OutputBase
          typeParam: a
    fields:
      - !_OutputField
        name: field
        type: !_OutputBase
          typeParam: a
    name: PrntParamSameOutp
    parent: !_OutputBase
      name: RefPrntParamSameOutp
      typeArgs:
        - !_OutputArg
          typeParam: a
    typeKind: !_TypeKind Output
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: String
          typeKind: !_TypeKind Basic
        name: a
  !_Identifier PrntUnionPrnt: !_TypeUnion
    allItems:
      - !_UnionMember
        name: Number
        union: PrntUnionPrnt
    items:
      - !_Aliased
        name: Number
    name: PrntUnionPrnt
    typeKind: !_TypeKind Union
  !_Identifier PrntUnionPrntDescr: !_TypeUnion
    allItems:
      - !_UnionMember
        name: Number
        union: PrntUnionPrntDescr
    items:
      - !_Aliased
        name: Number
    name: PrntUnionPrntDescr
    typeKind: !_TypeKind Union
  !_Identifier PrntUnionPrntDup: !_TypeUnion
    allItems:
      - !_UnionMember
        name: Number
        union: PrntUnionPrntDup
    items:
      - !_Aliased
        name: Number
    name: PrntUnionPrntDup
    typeKind: !_TypeKind Union
  !_Identifier PrntUnionSamePrnt: !_TypeUnion
    allItems:
      - !_UnionMember
        name: String
        union: PrntUnionSamePrnt
    items:
      - !_Aliased
        name: String
    name: PrntUnionSamePrnt
    typeKind: !_TypeKind Union
  !_Identifier RefCnstAltDmnDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: RefCnstAltDmnDual
        type: !_DualBase
          typeParam: ref
    alternates:
      - !_DualAlternate
        type: !_DualBase
          typeParam: ref
    name: RefCnstAltDmnDual
    typeKind: !_TypeKind Dual
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: String
          typeKind: !_TypeKind Basic
        name: ref
  !_Identifier RefCnstAltDmnInp: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        object: RefCnstAltDmnInp
        type: !_InputBase
          typeParam: ref
    alternates:
      - !_InputAlternate
        type: !_InputBase
          typeParam: ref
    name: RefCnstAltDmnInp
    typeKind: !_TypeKind Input
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: String
          typeKind: !_TypeKind Basic
        name: ref
  !_Identifier RefCnstAltDmnOutp: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: RefCnstAltDmnOutp
        type: !_OutputBase
          typeParam: ref
    alternates:
      - !_OutputAlternate
        type: !_OutputBase
          typeParam: ref
    name: RefCnstAltDmnOutp
    typeKind: !_TypeKind Output
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: String
          typeKind: !_TypeKind Basic
        name: ref
  !_Identifier RefCnstAltDualDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: RefCnstAltDualDual
        type: !_DualBase
          typeParam: ref
    alternates:
      - !_DualAlternate
        type: !_DualBase
          typeParam: ref
    name: RefCnstAltDualDual
    typeKind: !_TypeKind Dual
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: PrntCnstAltDualDual
          typeKind: !_TypeKind Dual
        name: ref
  !_Identifier RefCnstAltDualInp: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        object: RefCnstAltDualInp
        type: !_InputBase
          typeParam: ref
    alternates:
      - !_InputAlternate
        type: !_InputBase
          typeParam: ref
    name: RefCnstAltDualInp
    typeKind: !_TypeKind Input
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: PrntCnstAltDualInp
          typeKind: !_TypeKind Dual
        name: ref
  !_Identifier RefCnstAltDualOutp: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: RefCnstAltDualOutp
        type: !_OutputBase
          typeParam: ref
    alternates:
      - !_OutputAlternate
        type: !_OutputBase
          typeParam: ref
    name: RefCnstAltDualOutp
    typeKind: !_TypeKind Output
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: PrntCnstAltDualOutp
          typeKind: !_TypeKind Dual
        name: ref
  !_Identifier RefCnstAltObjDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: RefCnstAltObjDual
        type: !_DualBase
          typeParam: ref
    alternates:
      - !_DualAlternate
        type: !_DualBase
          typeParam: ref
    name: RefCnstAltObjDual
    typeKind: !_TypeKind Dual
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: PrntCnstAltObjDual
          typeKind: !_TypeKind Dual
        name: ref
  !_Identifier RefCnstAltObjInp: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        object: RefCnstAltObjInp
        type: !_InputBase
          typeParam: ref
    alternates:
      - !_InputAlternate
        type: !_InputBase
          typeParam: ref
    name: RefCnstAltObjInp
    typeKind: !_TypeKind Input
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: PrntCnstAltObjInp
          typeKind: !_TypeKind Input
        name: ref
  !_Identifier RefCnstAltObjOutp: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: RefCnstAltObjOutp
        type: !_OutputBase
          typeParam: ref
    alternates:
      - !_OutputAlternate
        type: !_OutputBase
          typeParam: ref
    name: RefCnstAltObjOutp
    typeKind: !_TypeKind Output
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: PrntCnstAltObjOutp
          typeKind: !_TypeKind Output
        name: ref
  !_Identifier RefCnstFieldDmnDual: !_TypeDual
    allFields:
      - !_ObjectFor(_DualField)
        name: field
        object: RefCnstFieldDmnDual
        type: !_DualBase
          typeParam: ref
    fields:
      - !_DualField
        name: field
        type: !_DualBase
          typeParam: ref
    name: RefCnstFieldDmnDual
    typeKind: !_TypeKind Dual
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: String
          typeKind: !_TypeKind Basic
        name: ref
  !_Identifier RefCnstFieldDmnInp: !_TypeInput
    allFields:
      - !_ObjectFor(_InputField)
        name: field
        object: RefCnstFieldDmnInp
        type: !_InputBase
          typeParam: ref
    fields:
      - !_InputField
        name: field
        type: !_InputBase
          typeParam: ref
    name: RefCnstFieldDmnInp
    typeKind: !_TypeKind Input
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: String
          typeKind: !_TypeKind Basic
        name: ref
  !_Identifier RefCnstFieldDmnOutp: !_TypeOutput
    allFields:
      - !_ObjectFor(_OutputField)
        name: field
        object: RefCnstFieldDmnOutp
        type: !_OutputBase
          typeParam: ref
    fields:
      - !_OutputField
        name: field
        type: !_OutputBase
          typeParam: ref
    name: RefCnstFieldDmnOutp
    typeKind: !_TypeKind Output
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: String
          typeKind: !_TypeKind Basic
        name: ref
  !_Identifier RefCnstFieldDualDual: !_TypeDual
    allFields:
      - !_ObjectFor(_DualField)
        name: field
        object: RefCnstFieldDualDual
        type: !_DualBase
          typeParam: ref
    fields:
      - !_DualField
        name: field
        type: !_DualBase
          typeParam: ref
    name: RefCnstFieldDualDual
    typeKind: !_TypeKind Dual
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: PrntCnstFieldDualDual
          typeKind: !_TypeKind Dual
        name: ref
  !_Identifier RefCnstFieldDualInp: !_TypeInput
    allFields:
      - !_ObjectFor(_InputField)
        name: field
        object: RefCnstFieldDualInp
        type: !_InputBase
          typeParam: ref
    fields:
      - !_InputField
        name: field
        type: !_InputBase
          typeParam: ref
    name: RefCnstFieldDualInp
    typeKind: !_TypeKind Input
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: PrntCnstFieldDualInp
          typeKind: !_TypeKind Dual
        name: ref
  !_Identifier RefCnstFieldDualOutp: !_TypeOutput
    allFields:
      - !_ObjectFor(_OutputField)
        name: field
        object: RefCnstFieldDualOutp
        type: !_OutputBase
          typeParam: ref
    fields:
      - !_OutputField
        name: field
        type: !_OutputBase
          typeParam: ref
    name: RefCnstFieldDualOutp
    typeKind: !_TypeKind Output
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: PrntCnstFieldDualOutp
          typeKind: !_TypeKind Dual
        name: ref
  !_Identifier RefCnstFieldObjDual: !_TypeDual
    allFields:
      - !_ObjectFor(_DualField)
        name: field
        object: RefCnstFieldObjDual
        type: !_DualBase
          typeParam: ref
    fields:
      - !_DualField
        name: field
        type: !_DualBase
          typeParam: ref
    name: RefCnstFieldObjDual
    typeKind: !_TypeKind Dual
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: PrntCnstFieldObjDual
          typeKind: !_TypeKind Dual
        name: ref
  !_Identifier RefCnstFieldObjInp: !_TypeInput
    allFields:
      - !_ObjectFor(_InputField)
        name: field
        object: RefCnstFieldObjInp
        type: !_InputBase
          typeParam: ref
    fields:
      - !_InputField
        name: field
        type: !_InputBase
          typeParam: ref
    name: RefCnstFieldObjInp
    typeKind: !_TypeKind Input
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: PrntCnstFieldObjInp
          typeKind: !_TypeKind Input
        name: ref
  !_Identifier RefCnstFieldObjOutp: !_TypeOutput
    allFields:
      - !_ObjectFor(_OutputField)
        name: field
        object: RefCnstFieldObjOutp
        type: !_OutputBase
          typeParam: ref
    fields:
      - !_OutputField
        name: field
        type: !_OutputBase
          typeParam: ref
    name: RefCnstFieldObjOutp
    typeKind: !_TypeKind Output
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: PrntCnstFieldObjOutp
          typeKind: !_TypeKind Output
        name: ref
  !_Identifier RefCnstPrntDualGrndDual: !_TypeDual
    name: RefCnstPrntDualGrndDual
    parent: !_DualBase
      typeParam: ref
    typeKind: !_TypeKind Dual
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: GrndCnstPrntDualGrndDual
          typeKind: !_TypeKind Dual
        name: ref
  !_Identifier RefCnstPrntDualGrndInp: !_TypeInput
    name: RefCnstPrntDualGrndInp
    parent: !_InputBase
      typeParam: ref
    typeKind: !_TypeKind Input
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: GrndCnstPrntDualGrndInp
          typeKind: !_TypeKind Dual
        name: ref
  !_Identifier RefCnstPrntDualGrndOutp: !_TypeOutput
    name: RefCnstPrntDualGrndOutp
    parent: !_OutputBase
      typeParam: ref
    typeKind: !_TypeKind Output
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: GrndCnstPrntDualGrndOutp
          typeKind: !_TypeKind Dual
        name: ref
  !_Identifier RefCnstPrntDualPrntDual: !_TypeDual
    name: RefCnstPrntDualPrntDual
    parent: !_DualBase
      typeParam: ref
    typeKind: !_TypeKind Dual
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: PrntCnstPrntDualPrntDual
          typeKind: !_TypeKind Dual
        name: ref
  !_Identifier RefCnstPrntDualPrntInp: !_TypeInput
    name: RefCnstPrntDualPrntInp
    parent: !_InputBase
      typeParam: ref
    typeKind: !_TypeKind Input
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: PrntCnstPrntDualPrntInp
          typeKind: !_TypeKind Dual
        name: ref
  !_Identifier RefCnstPrntDualPrntOutp: !_TypeOutput
    name: RefCnstPrntDualPrntOutp
    parent: !_OutputBase
      typeParam: ref
    typeKind: !_TypeKind Output
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: PrntCnstPrntDualPrntOutp
          typeKind: !_TypeKind Dual
        name: ref
  !_Identifier RefCnstPrntObjPrntDual: !_TypeDual
    name: RefCnstPrntObjPrntDual
    parent: !_DualBase
      typeParam: ref
    typeKind: !_TypeKind Dual
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: PrntCnstPrntObjPrntDual
          typeKind: !_TypeKind Dual
        name: ref
  !_Identifier RefCnstPrntObjPrntInp: !_TypeInput
    name: RefCnstPrntObjPrntInp
    parent: !_InputBase
      typeParam: ref
    typeKind: !_TypeKind Input
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: PrntCnstPrntObjPrntInp
          typeKind: !_TypeKind Input
        name: ref
  !_Identifier RefCnstPrntObjPrntOutp: !_TypeOutput
    name: RefCnstPrntObjPrntOutp
    parent: !_OutputBase
      typeParam: ref
    typeKind: !_TypeKind Output
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: PrntCnstPrntObjPrntOutp
          typeKind: !_TypeKind Output
        name: ref
  !_Identifier RefGnrcAltArgDescrDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: RefGnrcAltArgDescrDual
        type: !_DualBase
          typeParam: ref
    alternates:
      - !_DualAlternate
        type: !_DualBase
          typeParam: ref
    name: RefGnrcAltArgDescrDual
    typeKind: !_TypeKind Dual
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: String
          typeKind: !_TypeKind Basic
        name: ref
  !_Identifier RefGnrcAltArgDescrInp: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        object: RefGnrcAltArgDescrInp
        type: !_InputBase
          typeParam: ref
    alternates:
      - !_InputAlternate
        type: !_InputBase
          typeParam: ref
    name: RefGnrcAltArgDescrInp
    typeKind: !_TypeKind Input
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: String
          typeKind: !_TypeKind Basic
        name: ref
  !_Identifier RefGnrcAltArgDescrOutp: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: RefGnrcAltArgDescrOutp
        type: !_OutputBase
          typeParam: ref
    alternates:
      - !_OutputAlternate
        type: !_OutputBase
          typeParam: ref
    name: RefGnrcAltArgDescrOutp
    typeKind: !_TypeKind Output
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: String
          typeKind: !_TypeKind Basic
        name: ref
  !_Identifier RefGnrcAltArgDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: RefGnrcAltArgDual
        type: !_DualBase
          typeParam: ref
    alternates:
      - !_DualAlternate
        type: !_DualBase
          typeParam: ref
    name: RefGnrcAltArgDual
    typeKind: !_TypeKind Dual
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: String
          typeKind: !_TypeKind Basic
        name: ref
  !_Identifier RefGnrcAltArgInp: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        object: RefGnrcAltArgInp
        type: !_InputBase
          typeParam: ref
    alternates:
      - !_InputAlternate
        type: !_InputBase
          typeParam: ref
    name: RefGnrcAltArgInp
    typeKind: !_TypeKind Input
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: String
          typeKind: !_TypeKind Basic
        name: ref
  !_Identifier RefGnrcAltArgOutp: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: RefGnrcAltArgOutp
        type: !_OutputBase
          typeParam: ref
    alternates:
      - !_OutputAlternate
        type: !_OutputBase
          typeParam: ref
    name: RefGnrcAltArgOutp
    typeKind: !_TypeKind Output
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: String
          typeKind: !_TypeKind Basic
        name: ref
  !_Identifier RefGnrcAltDualDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: RefGnrcAltDualDual
        type: !_DualBase
          typeParam: ref
    alternates:
      - !_DualAlternate
        type: !_DualBase
          typeParam: ref
    name: RefGnrcAltDualDual
    typeKind: !_TypeKind Dual
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: _Dual
          typeKind: !_TypeKind Internal
        name: ref
  !_Identifier RefGnrcAltDualInp: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        object: RefGnrcAltDualInp
        type: !_InputBase
          typeParam: ref
    alternates:
      - !_InputAlternate
        type: !_InputBase
          typeParam: ref
    name: RefGnrcAltDualInp
    typeKind: !_TypeKind Input
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: _Dual
          typeKind: !_TypeKind Internal
        name: ref
  !_Identifier RefGnrcAltDualOutp: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: RefGnrcAltDualOutp
        type: !_OutputBase
          typeParam: ref
    alternates:
      - !_OutputAlternate
        type: !_OutputBase
          typeParam: ref
    name: RefGnrcAltDualOutp
    typeKind: !_TypeKind Output
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: _Dual
          typeKind: !_TypeKind Internal
        name: ref
  !_Identifier RefGnrcAltModParamDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        collections:
          - !_ModifierTypeParam
            by: mod
            modifierKind: !_ModifierKind Param
        object: RefGnrcAltModParamDual
        type: !_DualBase
          typeParam: ref
    alternates:
      - !_DualAlternate
        collections:
          - !_ModifierTypeParam
            by: mod
            modifierKind: !_ModifierKind Param
        type: !_DualBase
          typeParam: ref
    name: RefGnrcAltModParamDual
    typeKind: !_TypeKind Dual
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: String
          typeKind: !_TypeKind Basic
        name: ref
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: String
          typeKind: !_TypeKind Basic
        name: mod
  !_Identifier RefGnrcAltModParamInp: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        collections:
          - !_ModifierTypeParam
            by: mod
            modifierKind: !_ModifierKind Param
        object: RefGnrcAltModParamInp
        type: !_InputBase
          typeParam: ref
    alternates:
      - !_InputAlternate
        collections:
          - !_ModifierTypeParam
            by: mod
            modifierKind: !_ModifierKind Param
        type: !_InputBase
          typeParam: ref
    name: RefGnrcAltModParamInp
    typeKind: !_TypeKind Input
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: String
          typeKind: !_TypeKind Basic
        name: ref
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: String
          typeKind: !_TypeKind Basic
        name: mod
  !_Identifier RefGnrcAltModParamOutp: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        collections:
          - !_ModifierTypeParam
            by: mod
            modifierKind: !_ModifierKind Param
        object: RefGnrcAltModParamOutp
        type: !_OutputBase
          typeParam: ref
    alternates:
      - !_OutputAlternate
        collections:
          - !_ModifierTypeParam
            by: mod
            modifierKind: !_ModifierKind Param
        type: !_OutputBase
          typeParam: ref
    name: RefGnrcAltModParamOutp
    typeKind: !_TypeKind Output
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: String
          typeKind: !_TypeKind Basic
        name: ref
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: String
          typeKind: !_TypeKind Basic
        name: mod
  !_Identifier RefGnrcAltModStrDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        collections:
          - !_ModifierDictionary
            by: '*'
            modifierKind: !_ModifierKind Dict
            typeKind: !_SimpleKind Basic
        object: RefGnrcAltModStrDual
        type: !_DualBase
          typeParam: ref
    alternates:
      - !_DualAlternate
        collections:
          - !_ModifierDictionary
            by: '*'
            modifierKind: !_ModifierKind Dict
            typeKind: !_SimpleKind Basic
        type: !_DualBase
          typeParam: ref
    name: RefGnrcAltModStrDual
    typeKind: !_TypeKind Dual
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: String
          typeKind: !_TypeKind Basic
        name: ref
  !_Identifier RefGnrcAltModStrInp: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        collections:
          - !_ModifierDictionary
            by: '*'
            modifierKind: !_ModifierKind Dict
            typeKind: !_SimpleKind Basic
        object: RefGnrcAltModStrInp
        type: !_InputBase
          typeParam: ref
    alternates:
      - !_InputAlternate
        collections:
          - !_ModifierDictionary
            by: '*'
            modifierKind: !_ModifierKind Dict
            typeKind: !_SimpleKind Basic
        type: !_InputBase
          typeParam: ref
    name: RefGnrcAltModStrInp
    typeKind: !_TypeKind Input
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: String
          typeKind: !_TypeKind Basic
        name: ref
  !_Identifier RefGnrcAltModStrOutp: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        collections:
          - !_ModifierDictionary
            by: '*'
            modifierKind: !_ModifierKind Dict
            typeKind: !_SimpleKind Basic
        object: RefGnrcAltModStrOutp
        type: !_OutputBase
          typeParam: ref
    alternates:
      - !_OutputAlternate
        collections:
          - !_ModifierDictionary
            by: '*'
            modifierKind: !_ModifierKind Dict
            typeKind: !_SimpleKind Basic
        type: !_OutputBase
          typeParam: ref
    name: RefGnrcAltModStrOutp
    typeKind: !_TypeKind Output
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: String
          typeKind: !_TypeKind Basic
        name: ref
  !_Identifier RefGnrcAltParamDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: RefGnrcAltParamDual
        type: !_DualBase
          typeParam: ref
    alternates:
      - !_DualAlternate
        type: !_DualBase
          typeParam: ref
    name: RefGnrcAltParamDual
    typeKind: !_TypeKind Dual
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: _Dual
          typeKind: !_TypeKind Internal
        name: ref
  !_Identifier RefGnrcAltParamInp: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        object: RefGnrcAltParamInp
        type: !_InputBase
          typeParam: ref
    alternates:
      - !_InputAlternate
        type: !_InputBase
          typeParam: ref
    name: RefGnrcAltParamInp
    typeKind: !_TypeKind Input
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: _Input
          typeKind: !_TypeKind Internal
        name: ref
  !_Identifier RefGnrcAltParamOutp: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: RefGnrcAltParamOutp
        type: !_OutputBase
          typeParam: ref
    alternates:
      - !_OutputAlternate
        type: !_OutputBase
          typeParam: ref
    name: RefGnrcAltParamOutp
    typeKind: !_TypeKind Output
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: _Output
          typeKind: !_TypeKind Internal
        name: ref
  !_Identifier RefGnrcAltSmplDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: RefGnrcAltSmplDual
        type: !_DualBase
          typeParam: ref
    alternates:
      - !_DualAlternate
        type: !_DualBase
          typeParam: ref
    name: RefGnrcAltSmplDual
    typeKind: !_TypeKind Dual
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: String
          typeKind: !_TypeKind Basic
        name: ref
  !_Identifier RefGnrcAltSmplInp: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        object: RefGnrcAltSmplInp
        type: !_InputBase
          typeParam: ref
    alternates:
      - !_InputAlternate
        type: !_InputBase
          typeParam: ref
    name: RefGnrcAltSmplInp
    typeKind: !_TypeKind Input
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: String
          typeKind: !_TypeKind Basic
        name: ref
  !_Identifier RefGnrcAltSmplOutp: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: RefGnrcAltSmplOutp
        type: !_OutputBase
          typeParam: ref
    alternates:
      - !_OutputAlternate
        type: !_OutputBase
          typeParam: ref
    name: RefGnrcAltSmplOutp
    typeKind: !_TypeKind Output
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: String
          typeKind: !_TypeKind Basic
        name: ref
  !_Identifier RefGnrcFieldArgDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: RefGnrcFieldArgDual
        type: !_DualBase
          typeParam: ref
    alternates:
      - !_DualAlternate
        type: !_DualBase
          typeParam: ref
    name: RefGnrcFieldArgDual
    typeKind: !_TypeKind Dual
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: String
          typeKind: !_TypeKind Basic
        name: ref
  !_Identifier RefGnrcFieldArgInp: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        object: RefGnrcFieldArgInp
        type: !_InputBase
          typeParam: ref
    alternates:
      - !_InputAlternate
        type: !_InputBase
          typeParam: ref
    name: RefGnrcFieldArgInp
    typeKind: !_TypeKind Input
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: String
          typeKind: !_TypeKind Basic
        name: ref
  !_Identifier RefGnrcFieldArgOutp: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: RefGnrcFieldArgOutp
        type: !_OutputBase
          typeParam: ref
    alternates:
      - !_OutputAlternate
        type: !_OutputBase
          typeParam: ref
    name: RefGnrcFieldArgOutp
    typeKind: !_TypeKind Output
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: String
          typeKind: !_TypeKind Basic
        name: ref
  !_Identifier RefGnrcFieldDualDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: RefGnrcFieldDualDual
        type: !_DualBase
          typeParam: ref
    alternates:
      - !_DualAlternate
        type: !_DualBase
          typeParam: ref
    name: RefGnrcFieldDualDual
    typeKind: !_TypeKind Dual
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: _Dual
          typeKind: !_TypeKind Internal
        name: ref
  !_Identifier RefGnrcFieldDualInp: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        object: RefGnrcFieldDualInp
        type: !_InputBase
          typeParam: ref
    alternates:
      - !_InputAlternate
        type: !_InputBase
          typeParam: ref
    name: RefGnrcFieldDualInp
    typeKind: !_TypeKind Input
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: _Dual
          typeKind: !_TypeKind Internal
        name: ref
  !_Identifier RefGnrcFieldDualOutp: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: RefGnrcFieldDualOutp
        type: !_OutputBase
          typeParam: ref
    alternates:
      - !_OutputAlternate
        type: !_OutputBase
          typeParam: ref
    name: RefGnrcFieldDualOutp
    typeKind: !_TypeKind Output
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: _Dual
          typeKind: !_TypeKind Internal
        name: ref
  !_Identifier RefGnrcFieldParamDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: RefGnrcFieldParamDual
        type: !_DualBase
          typeParam: ref
    alternates:
      - !_DualAlternate
        type: !_DualBase
          typeParam: ref
    name: RefGnrcFieldParamDual
    typeKind: !_TypeKind Dual
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: _Dual
          typeKind: !_TypeKind Internal
        name: ref
  !_Identifier RefGnrcFieldParamInp: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        object: RefGnrcFieldParamInp
        type: !_InputBase
          typeParam: ref
    alternates:
      - !_InputAlternate
        type: !_InputBase
          typeParam: ref
    name: RefGnrcFieldParamInp
    typeKind: !_TypeKind Input
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: _Input
          typeKind: !_TypeKind Internal
        name: ref
  !_Identifier RefGnrcFieldParamOutp: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: RefGnrcFieldParamOutp
        type: !_OutputBase
          typeParam: ref
    alternates:
      - !_OutputAlternate
        type: !_OutputBase
          typeParam: ref
    name: RefGnrcFieldParamOutp
    typeKind: !_TypeKind Output
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: _Output
          typeKind: !_TypeKind Internal
        name: ref
  !_Identifier RefGnrcPrntArgDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: RefGnrcPrntArgDual
        type: !_DualBase
          typeParam: ref
    alternates:
      - !_DualAlternate
        type: !_DualBase
          typeParam: ref
    name: RefGnrcPrntArgDual
    typeKind: !_TypeKind Dual
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: String
          typeKind: !_TypeKind Basic
        name: ref
  !_Identifier RefGnrcPrntArgInp: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        object: RefGnrcPrntArgInp
        type: !_InputBase
          typeParam: ref
    alternates:
      - !_InputAlternate
        type: !_InputBase
          typeParam: ref
    name: RefGnrcPrntArgInp
    typeKind: !_TypeKind Input
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: String
          typeKind: !_TypeKind Basic
        name: ref
  !_Identifier RefGnrcPrntArgOutp: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: RefGnrcPrntArgOutp
        type: !_OutputBase
          typeParam: ref
    alternates:
      - !_OutputAlternate
        type: !_OutputBase
          typeParam: ref
    name: RefGnrcPrntArgOutp
    typeKind: !_TypeKind Output
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: String
          typeKind: !_TypeKind Basic
        name: ref
  !_Identifier RefGnrcPrntDualDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: RefGnrcPrntDualDual
        type: !_DualBase
          typeParam: ref
    alternates:
      - !_DualAlternate
        type: !_DualBase
          typeParam: ref
    name: RefGnrcPrntDualDual
    typeKind: !_TypeKind Dual
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: _Dual
          typeKind: !_TypeKind Internal
        name: ref
  !_Identifier RefGnrcPrntDualInp: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        object: RefGnrcPrntDualInp
        type: !_InputBase
          typeParam: ref
    alternates:
      - !_InputAlternate
        type: !_InputBase
          typeParam: ref
    name: RefGnrcPrntDualInp
    typeKind: !_TypeKind Input
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: _Dual
          typeKind: !_TypeKind Internal
        name: ref
  !_Identifier RefGnrcPrntDualOutp: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: RefGnrcPrntDualOutp
        type: !_OutputBase
          typeParam: ref
    alternates:
      - !_OutputAlternate
        type: !_OutputBase
          typeParam: ref
    name: RefGnrcPrntDualOutp
    typeKind: !_TypeKind Output
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: _Dual
          typeKind: !_TypeKind Internal
        name: ref
  !_Identifier RefGnrcPrntDualPrntDual: !_TypeDual
    name: RefGnrcPrntDualPrntDual
    parent: !_DualBase
      typeParam: ref
    typeKind: !_TypeKind Dual
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: _Dual
          typeKind: !_TypeKind Internal
        name: ref
  !_Identifier RefGnrcPrntDualPrntInp: !_TypeInput
    name: RefGnrcPrntDualPrntInp
    parent: !_InputBase
      typeParam: ref
    typeKind: !_TypeKind Input
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: _Dual
          typeKind: !_TypeKind Internal
        name: ref
  !_Identifier RefGnrcPrntDualPrntOutp: !_TypeOutput
    name: RefGnrcPrntDualPrntOutp
    parent: !_OutputBase
      typeParam: ref
    typeKind: !_TypeKind Output
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: _Dual
          typeKind: !_TypeKind Internal
        name: ref
  !_Identifier RefGnrcPrntParamDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: RefGnrcPrntParamDual
        type: !_DualBase
          typeParam: ref
    alternates:
      - !_DualAlternate
        type: !_DualBase
          typeParam: ref
    name: RefGnrcPrntParamDual
    typeKind: !_TypeKind Dual
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: _Dual
          typeKind: !_TypeKind Internal
        name: ref
  !_Identifier RefGnrcPrntParamInp: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        object: RefGnrcPrntParamInp
        type: !_InputBase
          typeParam: ref
    alternates:
      - !_InputAlternate
        type: !_InputBase
          typeParam: ref
    name: RefGnrcPrntParamInp
    typeKind: !_TypeKind Input
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: _Input
          typeKind: !_TypeKind Internal
        name: ref
  !_Identifier RefGnrcPrntParamOutp: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: RefGnrcPrntParamOutp
        type: !_OutputBase
          typeParam: ref
    alternates:
      - !_OutputAlternate
        type: !_OutputBase
          typeParam: ref
    name: RefGnrcPrntParamOutp
    typeKind: !_TypeKind Output
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: _Output
          typeKind: !_TypeKind Internal
        name: ref
  !_Identifier RefGnrcPrntParamPrntDual: !_TypeDual
    name: RefGnrcPrntParamPrntDual
    parent: !_DualBase
      typeParam: ref
    typeKind: !_TypeKind Dual
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: _Dual
          typeKind: !_TypeKind Internal
        name: ref
  !_Identifier RefGnrcPrntParamPrntInp: !_TypeInput
    name: RefGnrcPrntParamPrntInp
    parent: !_InputBase
      typeParam: ref
    typeKind: !_TypeKind Input
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: _Input
          typeKind: !_TypeKind Internal
        name: ref
  !_Identifier RefGnrcPrntParamPrntOutp: !_TypeOutput
    name: RefGnrcPrntParamPrntOutp
    parent: !_OutputBase
      typeParam: ref
    typeKind: !_TypeKind Output
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: _Output
          typeKind: !_TypeKind Internal
        name: ref
  !_Identifier RefObjCnstDomEnumDual: !_TypeDual
    allFields:
      - !_ObjectFor(_DualField)
        name: field
        object: RefObjCnstDomEnumDual
        type: !_DualBase
          typeParam: type
    fields:
      - !_DualField
        name: field
        type: !_DualBase
          typeParam: type
    name: RefObjCnstDomEnumDual
    typeKind: !_TypeKind Dual
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: JustObjCnstDomEnumDual
          typeKind: !_TypeKind Domain
        name: type
  !_Identifier RefObjCnstDomEnumInp: !_TypeInput
    allFields:
      - !_ObjectFor(_InputField)
        name: field
        object: RefObjCnstDomEnumInp
        type: !_InputBase
          typeParam: type
    fields:
      - !_InputField
        name: field
        type: !_InputBase
          typeParam: type
    name: RefObjCnstDomEnumInp
    typeKind: !_TypeKind Input
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: JustObjCnstDomEnumInp
          typeKind: !_TypeKind Domain
        name: type
  !_Identifier RefObjCnstDomEnumOutp: !_TypeOutput
    allFields:
      - !_ObjectFor(_OutputField)
        name: field
        object: RefObjCnstDomEnumOutp
        type: !_OutputBase
          typeParam: type
    fields:
      - !_OutputField
        name: field
        type: !_OutputBase
          typeParam: type
    name: RefObjCnstDomEnumOutp
    typeKind: !_TypeKind Output
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: JustObjCnstDomEnumOutp
          typeKind: !_TypeKind Domain
        name: type
  !_Identifier RefObjCnstEnumDual: !_TypeDual
    allFields:
      - !_ObjectFor(_DualField)
        name: field
        object: RefObjCnstEnumDual
        type: !_DualBase
          typeParam: type
    fields:
      - !_DualField
        name: field
        type: !_DualBase
          typeParam: type
    name: RefObjCnstEnumDual
    typeKind: !_TypeKind Dual
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: EnumObjCnstEnumDual
          typeKind: !_TypeKind Enum
        name: type
  !_Identifier RefObjCnstEnumInp: !_TypeInput
    allFields:
      - !_ObjectFor(_InputField)
        name: field
        object: RefObjCnstEnumInp
        type: !_InputBase
          typeParam: type
    fields:
      - !_InputField
        name: field
        type: !_InputBase
          typeParam: type
    name: RefObjCnstEnumInp
    typeKind: !_TypeKind Input
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: EnumObjCnstEnumInp
          typeKind: !_TypeKind Enum
        name: type
  !_Identifier RefObjCnstEnumOutp: !_TypeOutput
    allFields:
      - !_ObjectFor(_OutputField)
        name: field
        object: RefObjCnstEnumOutp
        type: !_OutputBase
          typeParam: type
    fields:
      - !_OutputField
        name: field
        type: !_OutputBase
          typeParam: type
    name: RefObjCnstEnumOutp
    typeKind: !_TypeKind Output
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: EnumObjCnstEnumOutp
          typeKind: !_TypeKind Enum
        name: type
  !_Identifier RefObjCnstEnumPrntDual: !_TypeDual
    allFields:
      - !_ObjectFor(_DualField)
        name: field
        object: RefObjCnstEnumPrntDual
        type: !_DualBase
          typeParam: type
    fields:
      - !_DualField
        name: field
        type: !_DualBase
          typeParam: type
    name: RefObjCnstEnumPrntDual
    typeKind: !_TypeKind Dual
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: ParentObjCnstEnumPrntDual
          typeKind: !_TypeKind Enum
        name: type
  !_Identifier RefObjCnstEnumPrntInp: !_TypeInput
    allFields:
      - !_ObjectFor(_InputField)
        name: field
        object: RefObjCnstEnumPrntInp
        type: !_InputBase
          typeParam: type
    fields:
      - !_InputField
        name: field
        type: !_InputBase
          typeParam: type
    name: RefObjCnstEnumPrntInp
    typeKind: !_TypeKind Input
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: ParentObjCnstEnumPrntInp
          typeKind: !_TypeKind Enum
        name: type
  !_Identifier RefObjCnstEnumPrntOutp: !_TypeOutput
    allFields:
      - !_ObjectFor(_OutputField)
        name: field
        object: RefObjCnstEnumPrntOutp
        type: !_OutputBase
          typeParam: type
    fields:
      - !_OutputField
        name: field
        type: !_OutputBase
          typeParam: type
    name: RefObjCnstEnumPrntOutp
    typeKind: !_TypeKind Output
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: ParentObjCnstEnumPrntOutp
          typeKind: !_TypeKind Enum
        name: type
  !_Identifier RefObjCnstPrntEnumDual: !_TypeDual
    allFields:
      - !_ObjectFor(_DualField)
        name: field
        object: RefObjCnstPrntEnumDual
        type: !_DualBase
          typeParam: type
    fields:
      - !_DualField
        name: field
        type: !_DualBase
          typeParam: type
    name: RefObjCnstPrntEnumDual
    typeKind: !_TypeKind Dual
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: EnumObjCnstPrntEnumDual
          typeKind: !_TypeKind Enum
        name: type
  !_Identifier RefObjCnstPrntEnumInp: !_TypeInput
    allFields:
      - !_ObjectFor(_InputField)
        name: field
        object: RefObjCnstPrntEnumInp
        type: !_InputBase
          typeParam: type
    fields:
      - !_InputField
        name: field
        type: !_InputBase
          typeParam: type
    name: RefObjCnstPrntEnumInp
    typeKind: !_TypeKind Input
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: EnumObjCnstPrntEnumInp
          typeKind: !_TypeKind Enum
        name: type
  !_Identifier RefObjCnstPrntEnumOutp: !_TypeOutput
    allFields:
      - !_ObjectFor(_OutputField)
        name: field
        object: RefObjCnstPrntEnumOutp
        type: !_OutputBase
          typeParam: type
    fields:
      - !_OutputField
        name: field
        type: !_OutputBase
          typeParam: type
    name: RefObjCnstPrntEnumOutp
    typeKind: !_TypeKind Output
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: EnumObjCnstPrntEnumOutp
          typeKind: !_TypeKind Enum
        name: type
  !_Identifier RefObjGnrcEnumDual: !_TypeDual
    allFields:
      - !_ObjectFor(_DualField)
        name: field
        object: RefObjGnrcEnumDual
        type: !_DualBase
          typeParam: type
    fields:
      - !_DualField
        name: field
        type: !_DualBase
          typeParam: type
    name: RefObjGnrcEnumDual
    typeKind: !_TypeKind Dual
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: _Enum
          typeKind: !_TypeKind Internal
        name: type
  !_Identifier RefObjGnrcEnumInp: !_TypeInput
    allFields:
      - !_ObjectFor(_InputField)
        name: field
        object: RefObjGnrcEnumInp
        type: !_InputBase
          typeParam: type
    fields:
      - !_InputField
        name: field
        type: !_InputBase
          typeParam: type
    name: RefObjGnrcEnumInp
    typeKind: !_TypeKind Input
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: _Enum
          typeKind: !_TypeKind Internal
        name: type
  !_Identifier RefObjGnrcEnumOutp: !_TypeOutput
    allFields:
      - !_ObjectFor(_OutputField)
        name: field
        object: RefObjGnrcEnumOutp
        type: !_OutputBase
          typeParam: type
    fields:
      - !_OutputField
        name: field
        type: !_OutputBase
          typeParam: type
    name: RefObjGnrcEnumOutp
    typeKind: !_TypeKind Output
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: _Enum
          typeKind: !_TypeKind Internal
        name: type
  !_Identifier RefObjGnrcValueDual: !_TypeDual
    allFields:
      - !_ObjectFor(_DualField)
        name: field
        object: RefObjGnrcValueDual
        type: !_DualBase
          typeParam: type
    fields:
      - !_DualField
        name: field
        type: !_DualBase
          typeParam: type
    name: RefObjGnrcValueDual
    typeKind: !_TypeKind Dual
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: _Enum
          typeKind: !_TypeKind Internal
        name: type
  !_Identifier RefObjGnrcValueInp: !_TypeInput
    allFields:
      - !_ObjectFor(_InputField)
        name: field
        object: RefObjGnrcValueInp
        type: !_InputBase
          typeParam: type
    fields:
      - !_InputField
        name: field
        type: !_InputBase
          typeParam: type
    name: RefObjGnrcValueInp
    typeKind: !_TypeKind Input
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: _Enum
          typeKind: !_TypeKind Internal
        name: type
  !_Identifier RefObjGnrcValueOutp: !_TypeOutput
    allFields:
      - !_ObjectFor(_OutputField)
        name: field
        object: RefObjGnrcValueOutp
        type: !_OutputBase
          typeParam: type
    fields:
      - !_OutputField
        name: field
        type: !_OutputBase
          typeParam: type
    name: RefObjGnrcValueOutp
    typeKind: !_TypeKind Output
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: _Enum
          typeKind: !_TypeKind Internal
        name: type
  !_Identifier RefObjPrntDual: !_TypeDual
    name: RefObjPrntDual
    typeKind: !_TypeKind Dual
  !_Identifier RefObjPrntInp: !_TypeInput
    name: RefObjPrntInp
    typeKind: !_TypeKind Input
  !_Identifier RefObjPrntOutp: !_TypeOutput
    name: RefObjPrntOutp
    typeKind: !_TypeKind Output
  !_Identifier RefOutpPrntGnrc: !_TypeOutput
    allFields:
      - !_ObjectFor(_OutputField)
        name: field
        object: RefOutpPrntGnrc
        type: !_OutputBase
          typeParam: type
    fields:
      - !_OutputField
        name: field
        type: !_OutputBase
          typeParam: type
    name: RefOutpPrntGnrc
    typeKind: !_TypeKind Output
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: PrntOutpPrntGnrc
          typeKind: !_TypeKind Enum
        name: type
  !_Identifier RefPrntAltDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: RefPrntAltDual
        type: !_DualBase
          name: String
    allFields:
      - !_ObjectFor(_DualField)
        name: parent
        object: RefPrntAltDual
        type: !_DualBase
          name: Number
    alternates:
      - !_DualAlternate
        type: !_DualBase
          name: String
    fields:
      - !_DualField
        name: parent
        type: !_DualBase
          name: Number
    name: RefPrntAltDual
    typeKind: !_TypeKind Dual
  !_Identifier RefPrntAltInp: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        object: RefPrntAltInp
        type: !_InputBase
          name: String
    allFields:
      - !_ObjectFor(_InputField)
        name: parent
        object: RefPrntAltInp
        type: !_InputBase
          name: Number
    alternates:
      - !_InputAlternate
        type: !_InputBase
          name: String
    fields:
      - !_InputField
        name: parent
        type: !_InputBase
          name: Number
    name: RefPrntAltInp
    typeKind: !_TypeKind Input
  !_Identifier RefPrntAltOutp: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: RefPrntAltOutp
        type: !_OutputBase
          name: String
    allFields:
      - !_ObjectFor(_OutputField)
        name: parent
        object: RefPrntAltOutp
        type: !_OutputBase
          name: Number
    alternates:
      - !_OutputAlternate
        type: !_OutputBase
          name: String
    fields:
      - !_OutputField
        name: parent
        type: !_OutputBase
          name: Number
    name: RefPrntAltOutp
    typeKind: !_TypeKind Output
  !_Identifier RefPrntDescrDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: RefPrntDescrDual
        type: !_DualBase
          name: String
    allFields:
      - !_ObjectFor(_DualField)
        name: parent
        object: RefPrntDescrDual
        type: !_DualBase
          name: Number
    alternates:
      - !_DualAlternate
        type: !_DualBase
          name: String
    fields:
      - !_DualField
        name: parent
        type: !_DualBase
          name: Number
    name: RefPrntDescrDual
    typeKind: !_TypeKind Dual
  !_Identifier RefPrntDescrInp: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        object: RefPrntDescrInp
        type: !_InputBase
          name: String
    allFields:
      - !_ObjectFor(_InputField)
        name: parent
        object: RefPrntDescrInp
        type: !_InputBase
          name: Number
    alternates:
      - !_InputAlternate
        type: !_InputBase
          name: String
    fields:
      - !_InputField
        name: parent
        type: !_InputBase
          name: Number
    name: RefPrntDescrInp
    typeKind: !_TypeKind Input
  !_Identifier RefPrntDescrOutp: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: RefPrntDescrOutp
        type: !_OutputBase
          name: String
    allFields:
      - !_ObjectFor(_OutputField)
        name: parent
        object: RefPrntDescrOutp
        type: !_OutputBase
          name: Number
    alternates:
      - !_OutputAlternate
        type: !_OutputBase
          name: String
    fields:
      - !_OutputField
        name: parent
        type: !_OutputBase
          name: Number
    name: RefPrntDescrOutp
    typeKind: !_TypeKind Output
  !_Identifier RefPrntDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: RefPrntDual
        type: !_DualBase
          name: String
    allFields:
      - !_ObjectFor(_DualField)
        name: parent
        object: RefPrntDual
        type: !_DualBase
          name: Number
    alternates:
      - !_DualAlternate
        type: !_DualBase
          name: String
    fields:
      - !_DualField
        name: parent
        type: !_DualBase
          name: Number
    name: RefPrntDual
    typeKind: !_TypeKind Dual
  !_Identifier RefPrntDualDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: RefPrntDualDual
        type: !_DualBase
          name: String
    allFields:
      - !_ObjectFor(_DualField)
        name: parent
        object: RefPrntDualDual
        type: !_DualBase
          name: Number
    alternates:
      - !_DualAlternate
        type: !_DualBase
          name: String
    fields:
      - !_DualField
        name: parent
        type: !_DualBase
          name: Number
    name: RefPrntDualDual
    typeKind: !_TypeKind Dual
  !_Identifier RefPrntDualInp: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: RefPrntDualInp
        type: !_DualBase
          name: String
    allFields:
      - !_ObjectFor(_DualField)
        name: parent
        object: RefPrntDualInp
        type: !_DualBase
          name: Number
    alternates:
      - !_DualAlternate
        type: !_DualBase
          name: String
    fields:
      - !_DualField
        name: parent
        type: !_DualBase
          name: Number
    name: RefPrntDualInp
    typeKind: !_TypeKind Dual
  !_Identifier RefPrntDualOutp: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: RefPrntDualOutp
        type: !_DualBase
          name: String
    allFields:
      - !_ObjectFor(_DualField)
        name: parent
        object: RefPrntDualOutp
        type: !_DualBase
          name: Number
    alternates:
      - !_DualAlternate
        type: !_DualBase
          name: String
    fields:
      - !_DualField
        name: parent
        type: !_DualBase
          name: Number
    name: RefPrntDualOutp
    typeKind: !_TypeKind Dual
  !_Identifier RefPrntFieldDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: RefPrntFieldDual
        type: !_DualBase
          name: String
    allFields:
      - !_ObjectFor(_DualField)
        name: parent
        object: RefPrntFieldDual
        type: !_DualBase
          name: Number
    alternates:
      - !_DualAlternate
        type: !_DualBase
          name: String
    fields:
      - !_DualField
        name: parent
        type: !_DualBase
          name: Number
    name: RefPrntFieldDual
    typeKind: !_TypeKind Dual
  !_Identifier RefPrntFieldInp: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        object: RefPrntFieldInp
        type: !_InputBase
          name: String
    allFields:
      - !_ObjectFor(_InputField)
        name: parent
        object: RefPrntFieldInp
        type: !_InputBase
          name: Number
    alternates:
      - !_InputAlternate
        type: !_InputBase
          name: String
    fields:
      - !_InputField
        name: parent
        type: !_InputBase
          name: Number
    name: RefPrntFieldInp
    typeKind: !_TypeKind Input
  !_Identifier RefPrntFieldOutp: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: RefPrntFieldOutp
        type: !_OutputBase
          name: String
    allFields:
      - !_ObjectFor(_OutputField)
        name: parent
        object: RefPrntFieldOutp
        type: !_OutputBase
          name: Number
    alternates:
      - !_OutputAlternate
        type: !_OutputBase
          name: String
    fields:
      - !_OutputField
        name: parent
        type: !_OutputBase
          name: Number
    name: RefPrntFieldOutp
    typeKind: !_TypeKind Output
  !_Identifier RefPrntInp: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        object: RefPrntInp
        type: !_InputBase
          name: String
    allFields:
      - !_ObjectFor(_InputField)
        name: parent
        object: RefPrntInp
        type: !_InputBase
          name: Number
    alternates:
      - !_InputAlternate
        type: !_InputBase
          name: String
    fields:
      - !_InputField
        name: parent
        type: !_InputBase
          name: Number
    name: RefPrntInp
    typeKind: !_TypeKind Input
  !_Identifier RefPrntOutp: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: RefPrntOutp
        type: !_OutputBase
          name: String
    allFields:
      - !_ObjectFor(_OutputField)
        name: parent
        object: RefPrntOutp
        type: !_OutputBase
          name: Number
    alternates:
      - !_OutputAlternate
        type: !_OutputBase
          name: String
    fields:
      - !_OutputField
        name: parent
        type: !_OutputBase
          name: Number
    name: RefPrntOutp
    typeKind: !_TypeKind Output
  !_Identifier RefPrntParamDiffDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: RefPrntParamDiffDual
        type: !_DualBase
          typeParam: b
    alternates:
      - !_DualAlternate
        type: !_DualBase
          typeParam: b
    name: RefPrntParamDiffDual
    typeKind: !_TypeKind Dual
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: String
          typeKind: !_TypeKind Basic
        name: b
  !_Identifier RefPrntParamDiffInp: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        object: RefPrntParamDiffInp
        type: !_InputBase
          typeParam: b
    alternates:
      - !_InputAlternate
        type: !_InputBase
          typeParam: b
    name: RefPrntParamDiffInp
    typeKind: !_TypeKind Input
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: String
          typeKind: !_TypeKind Basic
        name: b
  !_Identifier RefPrntParamDiffOutp: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: RefPrntParamDiffOutp
        type: !_OutputBase
          typeParam: b
    alternates:
      - !_OutputAlternate
        type: !_OutputBase
          typeParam: b
    name: RefPrntParamDiffOutp
    typeKind: !_TypeKind Output
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: String
          typeKind: !_TypeKind Basic
        name: b
  !_Identifier RefPrntParamSameDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: RefPrntParamSameDual
        type: !_DualBase
          typeParam: a
    alternates:
      - !_DualAlternate
        type: !_DualBase
          typeParam: a
    name: RefPrntParamSameDual
    typeKind: !_TypeKind Dual
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: String
          typeKind: !_TypeKind Basic
        name: a
  !_Identifier RefPrntParamSameInp: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        object: RefPrntParamSameInp
        type: !_InputBase
          typeParam: a
    alternates:
      - !_InputAlternate
        type: !_InputBase
          typeParam: a
    name: RefPrntParamSameInp
    typeKind: !_TypeKind Input
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: String
          typeKind: !_TypeKind Basic
        name: a
  !_Identifier RefPrntParamSameOutp: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: RefPrntParamSameOutp
        type: !_OutputBase
          typeParam: a
    alternates:
      - !_OutputAlternate
        type: !_OutputBase
          typeParam: a
    name: RefPrntParamSameOutp
    typeKind: !_TypeKind Output
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          name: String
          typeKind: !_TypeKind Basic
        name: a
  !_Identifier UnionAlias: !_TypeUnion
    aliases: [UnA1,UnA2]
    allItems:
      - !_UnionMember
        name: Boolean
        union: UnionAlias
      - !_UnionMember
        name: Number
        union: UnionAlias
    items:
      - !_Aliased
        name: Boolean
      - !_Aliased
        name: Number
    name: UnionAlias
    typeKind: !_TypeKind Union
  !_Identifier UnionDescr: !_TypeUnion
    allItems:
      - !_UnionMember
        description: 'Union Descr'
        name: Number
        union: UnionDescr
    items:
      - !_Aliased
        description: 'Union Descr'
        name: Number
    name: UnionDescr
    typeKind: !_TypeKind Union
  !_Identifier UnionDiff: !_TypeUnion
    allItems:
      - !_UnionMember
        name: Boolean
        union: UnionDiff
      - !_UnionMember
        name: Number
        union: UnionDiff
    items:
      - !_Aliased
        name: Boolean
      - !_Aliased
        name: Number
    name: UnionDiff
    typeKind: !_TypeKind Union
  !_Identifier UnionPrnt: !_TypeUnion
    allItems:
      - !_UnionMember
        name: Number
        union: PrntUnionPrnt
      - !_UnionMember
        name: String
        union: UnionPrnt
    items:
      - !_Aliased
        name: String
    name: UnionPrnt
    parent: !_TypeRef(_SimpleKind)
      name: PrntUnionPrnt
      typeKind: !_SimpleKind Union
    typeKind: !_TypeKind Union
  !_Identifier UnionPrntDescr: !_TypeUnion
    allItems:
      - !_UnionMember
        name: Number
        union: PrntUnionPrntDescr
      - !_UnionMember
        name: Number
        union: UnionPrntDescr
    items:
      - !_Aliased
        name: Number
    name: UnionPrntDescr
    parent: !_TypeRef(_SimpleKind)
      description: 'Parent comment'
      name: PrntUnionPrntDescr
      typeKind: !_SimpleKind Union
    typeKind: !_TypeKind Union
  !_Identifier UnionPrntDup: !_TypeUnion
    allItems:
      - !_UnionMember
        name: Number
        union: PrntUnionPrntDup
      - !_UnionMember
        name: Number
        union: UnionPrntDup
    items:
      - !_Aliased
        name: Number
    name: UnionPrntDup
    parent: !_TypeRef(_SimpleKind)
      name: PrntUnionPrntDup
      typeKind: !_SimpleKind Union
    typeKind: !_TypeKind Union
  !_Identifier UnionSame: !_TypeUnion
    allItems:
      - !_UnionMember
        name: Boolean
        union: UnionSame
    items:
      - !_Aliased
        name: Boolean
    name: UnionSame
    typeKind: !_TypeKind Union
  !_Identifier UnionSamePrnt: !_TypeUnion
    allItems:
      - !_UnionMember
        name: String
        union: PrntUnionSamePrnt
      - !_UnionMember
        name: Boolean
        union: UnionSamePrnt
    items:
      - !_Aliased
        name: Boolean
    name: UnionSamePrnt
    parent: !_TypeRef(_SimpleKind)
      name: PrntUnionSamePrnt
      typeKind: !_SimpleKind Union
    typeKind: !_TypeKind Union