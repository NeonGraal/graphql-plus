!_Schema
types: !_Map_Type
  !_Identifier AltOutpGnrcPrntDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: AltOutpGnrcPrntDual
        type: !_DualBase
          dual: String
    allFields:
      - !_ObjectFor(_DualField)
        name: alt
        object: AltOutpGnrcPrntDual
        type: !_DualBase
          dual: Number
    alternates:
      - !_DualAlternate
        type: !_DualBase
          dual: String
    fields:
      - !_DualField
        name: alt
        type: !_DualBase
          dual: Number
    name: AltOutpGnrcPrntDual
    typeKind: !_TypeKind Dual
  !_Identifier OutpGnrcPrntDual: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: RefOutpGnrcPrntDual
        type: !_DualBase
          dual: AltOutpGnrcPrntDual
    name: OutpGnrcPrntDual
    parent: !_OutputBase
      output: RefOutpGnrcPrntDual
      typeArgs:
        - !_DualArg
          dual: AltOutpGnrcPrntDual
    typeKind: !_TypeKind Output
  !_Identifier RefOutpGnrcPrntDual: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: RefOutpGnrcPrntDual
        type: !_OutputBase
          typeParam: ref
    alternates:
      - !_OutputAlternate
        type: !_OutputBase
          typeParam: ref
    name: RefOutpGnrcPrntDual
    typeKind: !_TypeKind Output
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          typeKind: !_TypeKind Basic
          typeName: '*'
        name: ref