!_Schema
types: !_Map_Type
  !_Identifier DualCnstAltDual: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: DualCnstAltDual
      type: !_DualBase
        dual: DualCnstAltDualRef
        typeArgs:
        - !_DualArg
          dual: DualCnstAltDualAlt
    alternates:
    - !_DualAlternate
      type: !_DualBase
        dual: DualCnstAltDualRef
        typeArgs:
        - !_DualArg
          dual: DualCnstAltDualAlt
    name: DualCnstAltDual
    typeKind: !_TypeKind Dual
  !_Identifier DualCnstAltDualAlt: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: DualCnstAltDualParent
      type: !_DualBase
        dual: String
    allFields:
    - !_ObjectFor(_DualField)
      name: alt
      object: DualCnstAltDualAlt
      type: !_DualBase
        dual: Number
    fields:
    - !_DualField
      name: alt
      type: !_DualBase
        dual: Number
    name: DualCnstAltDualAlt
    parent: !_DualBase
      dual: DualCnstAltDualParent
    typeKind: !_TypeKind Dual
  !_Identifier DualCnstAltDualParent: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: DualCnstAltDualParent
      type: !_DualBase
        dual: String
    alternates:
    - !_DualAlternate
      type: !_DualBase
        dual: String
    name: DualCnstAltDualParent
    typeKind: !_TypeKind Dual
  !_Identifier DualCnstAltDualRef: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: DualCnstAltDualRef
      type: !_TypeParam ref
    alternates:
    - !_DualAlternate
      type: !_TypeParam ref
    name: DualCnstAltDualRef
    typeKind: !_TypeKind Dual
    typeParams:
    - !_Described
      name: ref