/* generic-parent-enum-dom+Dual
dual GnrcPrntEnumDomDual { :FieldGnrcPrntEnumDomDual<DomGnrcPrntEnumDomDual> }
dual FieldGnrcPrntEnumDomDual<$ref:EnumGnrcPrntEnumDomDual> { field: $ref }
enum EnumGnrcPrntEnumDomDual { gnrcPrntEnumDomDualLabel gnrcPrntEnumDomDualOther }
domain DomGnrcPrntEnumDomDual { enum gnrcPrntEnumDomDualLabel }
*/

// Generated from Sample generic-parent-enum-dom+Dual

/*
*/

namespace GqlPlus.Model_Sample_generic_parent_enum_dom_Dual;

public interface IGnrcPrntEnumDomDual
  : IFieldGnrcPrntEnumDomDual
{
}
public class DualGnrcPrntEnumDomDual
  : DualFieldGnrcPrntEnumDomDual
  , IGnrcPrntEnumDomDual
{
}

public interface IFieldGnrcPrntEnumDomDual<Tref>
{
  Tref field { get; }
}
public class DualFieldGnrcPrntEnumDomDual<Tref>
  : IFieldGnrcPrntEnumDomDual<Tref>
{
  public Tref field { get; set; }
}

public enum EnumGnrcPrntEnumDomDual
{
  gnrcPrntEnumDomDualLabel,
  gnrcPrntEnumDomDualOther,
}

public interface IDomGnrcPrntEnumDomDual
{
}
public class DomainDomGnrcPrntEnumDomDual
  : IDomGnrcPrntEnumDomDual
{
}