!G I@001/0001
Success
{
  !O I@008/0001
  _Schema
  :
  I@007/0002
  _Named
  {
    !OF I@009/0003
    categories
    (
      !P
      I@020/0003
      _CategoryFilter
      ?
    )
    :
    I@039/0003
    _Categories
    [String]
    !OF I@009/0004
    directives
    (
      !P
      I@020/0004
      _Filter
      ?
    )
    :
    I@031/0004
    _Directives
    [String]
    !OF I@009/0005
    types
    (
      !P
      I@015/0005
      _TypeFilter
      ?
    )
    :
    I@030/0005
    _Type
    [String]
    !OF I@009/0006
    settings
    (
      !P
      I@018/0006
      _Filter
      ?
    )
    :
    I@029/0006
    _Setting
    [String]
  }
}
{
  !I I@007/0009
  _Filter
  {
    !IF I@009/0010
    names
    :
    I@016/0010
    String
    []
    !IF I@009/0011
    includeReferencedTypes
    :
    I@033/0011
    Boolean
    =( !k I@043/0011 Boolean.false )
  }
  |
  !AI
  I@015/0012
  String
  []
}
{
  !I I@007/0015
  _CategoryFilter
  :
  I@007/0016
  _Filter
  {
    !IF I@009/0017
    resolutions
    :
    I@022/0017
    _Resolution
    []
  }
}
{
  !I I@007/0020
  _TypeFilter
  :
  I@007/0021
  _Filter
  {
    !IF I@009/0022
    kinds
    :
    I@016/0022
    _TypeKind
    []
  }
}
{
  !O I@008/0025
  _Aliased
  :
  I@007/0026
  _Described
  <
    I@018/0026
    _Named
  >
  {
    !OF I@009/0027
    aliases
    :
    I@018/0027
    String
    []
  }
}
{
  !O I@008/0030
  _Described
  <
    I@020/0030
    $base
  >
  :
  I@008/0031
  $base
  {
    !OF I@009/0032
    description
    :
    I@022/0032
    String
    ?
  }
}
{
  !O I@008/0035
  _Named
  {
    !OF I@009/0036
    name
    :
    I@015/0036
    String
  }
}
{
  !O I@008/0038
  _Categories
  |
  !AO
  I@007/0039
  _Category
  !AO
  I@007/0040
  _Type
}
{
  !O I@008/0043
  _Category
  :
  I@007/0044
  _Aliased
  {
    !OF I@009/0045
    resolution
    :
    I@021/0045
    _Resolution
    !OF I@009/0046
    output
    :
    I@017/0046
    _TypeRef
    <
      I@026/0046
      _TypeKind.Output
    >
    !OF I@009/0047
    modifiers
    :
    I@020/0047
    _Modifier
    []
  }
}
{
  !E I@006/0050
  _Resolution
  !EM I@020/0050
  Parallel
  !EM I@029/0050
  Sequential
  !EM I@040/0050
  Single
}
{
  !O I@008/0051
  _Directives
  |
  !AO
  I@007/0052
  _Directive
  !AO
  I@007/0053
  _Type
}
{
  !O I@008/0056
  _Directive
  :
  I@007/0057
  _Aliased
  {
    !OF I@009/0058
    parameters
    :
    I@021/0058
    _Parameter
    []
    !OF I@009/0059
    repeatable
    :
    I@021/0059
    Boolean
    !OF I@009/0060
    locations
    :
    I@020/0060
    _
    [_Location]
  }
}
{
  !E I@006/0063
  _Location
  !EM I@018/0063
  Operation
  !EM I@028/0063
  Variable
  !EM I@037/0063
  Field
  !EM I@043/0063
  Inline
  !EM I@050/0063
  Spread
  !EM I@057/0063
  Fragment
}
{
  !O I@008/0065
  _Setting
  :
  I@007/0066
  _Described
  <
    I@018/0066
    _Named
  >
  {
    !OF I@009/0067
    value
    :
    I@016/0067
    _Constant
  }
}
{
  !O I@008/0069
  _Type
  |
  !AO
  I@007/0070
  _BaseType
  <
    I@017/0070
    _TypeKind.Basic
  >
  !AO
  I@007/0071
  _BaseType
  <
    I@017/0071
    _TypeKind.Internal
  >
  !AO
  I@007/0072
  _TypeEnum
  !AO
  I@007/0073
  _TypeObject
  <
    I@019/0073
    _TypeKind.Input
    I@035/0073
    _InputBase
    I@046/0073
    _InputField
  >
  !AO
  I@007/0074
  _TypeObject
  <
    I@019/0074
    _TypeKind.Output
    I@036/0074
    _OutputBase
    I@048/0074
    _OutputField
  >
  !AO
  I@007/0075
  _TypeScalar
}
{
  !O I@008/0078
  _BaseType
  <
    I@019/0078
    $kind
  >
  :
  I@007/0079
  _Aliased
  {
    !OF I@009/0080
    kind
    :
    I@016/0080
    $kind
  }
}
{
  !O I@008/0083
  _ChildType
  <
    I@020/0083
    $kind
    I@026/0083
    $parent
  >
  :
  I@007/0084
  _BaseType
  <
    I@018/0084
    $kind
  >
  {
    !OF I@009/0085
    parent
    :
    I@018/0085
    $parent
  }
}
{
  !E I@006/0088
  _SimpleKind
  !EM I@020/0088
  Basic
  !EM I@026/0088
  Enum
  !EM I@031/0088
  Internal
  !EM I@040/0088
  Scalar
}
{
  !E I@006/0090
  _TypeKind
  :_SimpleKind
  !EM I@031/0090
  Input
  !EM I@037/0090
  Output
}
{
  !O I@008/0092
  _TypeRef
  <
    I@018/0092
    $kind
  >
  {
    !OF I@009/0093
    kind
    :
    I@016/0093
    $kind
    !OF I@009/0094
    name
    :
    I@015/0094
    String
  }
}
{
  !O I@008/0097
  _TypeSimple
  |
  !AO
  I@007/0098
  _TypeRef
  <
    I@016/0098
    _TypeKind.Basic
  >
  !AO
  I@007/0099
  _TypeRef
  <
    I@016/0099
    _TypeKind.Scalar
  >
  !AO
  I@007/0100
  _TypeRef
  <
    I@016/0100
    _TypeKind.Enum
  >
}
{
  !O I@008/0102
  _Constant
  |
  !AO
  I@007/0103
  _Simple
  !AO
  I@007/0104
  _ConstantList
  !AO
  I@007/0105
  _ConstantMap
}
{
  !O I@008/0108
  _Simple
  |
  !AO
  I@007/0109
  Boolean
  !AO
  I@007/0110
  _ScalarValue
  <
    I@020/0110
    _Scalar.Number
    I@035/0110
    Number
  >
  !AO
  I@007/0111
  _ScalarValue
  <
    I@020/0111
    _Scalar.String
    I@035/0111
    String
  >
  !AO
  I@007/0112
  _EnumValue
}
{
  !O I@008/0115
  _ConstantList
  |
  !AO
  I@007/0116
  _Constant
  []
}
{
  !O I@008/0119
  _ConstantMap
  |
  !AO
  I@007/0120
  _Constant
  [Simple]
}
{
  !O I@008/0123
  _Collection
  |
  !AO
  I@007/0124
  _BaseModifier
  <
    I@021/0124
    _ModifierKind.List
  >
  !AO
  I@007/0125
  _ModifierDictionary
}
{
  !O I@008/0128
  _Modifier
  |
  !AO
  I@007/0129
  _BaseModifier
  <
    I@021/0129
    _ModifierKind.Optional
  >
  !AO
  I@007/0130
  _Collection
}
{
  !E I@006/0133
  _ModifierKind
  !EM I@022/0133
  Optional
  !EM I@031/0133
  List
  !EM I@036/0133
  Dictionary
}
{
  !O I@008/0135
  _BaseModifier
  <
    I@023/0135
    $kind
  >
  {
    !OF I@009/0136
    kind
    :
    I@016/0136
    $kind
  }
}
{
  !O I@008/0139
  _ModifierDictionary
  :
  I@007/0140
  _BaseModifier
  <
    I@021/0140
    _ModifierKind.Dictionary
  >
  {
    !OF I@009/0141
    by
    :
    I@013/0141
    _TypeSimple
  }
}
{
  !O I@008/0143
  _TypeEnum
  :
  I@007/0144
  _ChildType
  <
    I@018/0144
    _TypeKind.Enum
    I@033/0144
    String
  >
  {
    !OF I@009/0145
    members
    :
    I@018/0145
    _Aliased
    []
    !OF I@009/0146
    allMembers
    :
    I@021/0146
    _EnumMember
    []
  }
}
{
  !O I@008/0149
  _EnumMember
  :
  I@007/0150
  _Aliased
  {
    !OF I@009/0151
    enum
    :
    I@015/0151
    String
  }
}
{
  !O I@008/0154
  _EnumValue
  :
  I@007/0155
  _TypeRef
  <
    I@016/0155
    _TypeKind.Enum
  >
  {
    !OF I@009/0156
    value
    :
    I@016/0156
    String
  }
}
{
  !E I@006/0158
  _Scalar
  !EM I@016/0158
  Boolean
  !EM I@024/0158
  Enum
  !EM I@029/0158
  Number
  !EM I@036/0158
  String
  !EM I@043/0158
  Union
}
{
  !O I@008/0160
  _TypeScalar
  |
  !AO
  I@007/0161
  _BaseScalar
  <
    I@019/0161
    _Scalar.Boolean
    I@035/0161
    _ScalarBoolean
  >
  !AO
  I@007/0162
  _BaseScalar
  <
    I@019/0162
    _Scalar.Enum
    I@032/0162
    _ScalarEnum
  >
  !AO
  I@007/0163
  _BaseScalar
  <
    I@019/0163
    _Scalar.Number
    I@034/0163
    _ScalarRange
  >
  !AO
  I@007/0164
  _BaseScalar
  <
    I@019/0164
    _Scalar.String
    I@034/0164
    _ScalarRegex
  >
  !AO
  I@007/0165
  _BaseScalar
  <
    I@019/0165
    _Scalar.Union
    I@033/0165
    _TypeSimple
  >
}
{
  !O I@008/0168
  _ScalarRef
  <
    I@020/0168
    $kind
  >
  :
  I@007/0169
  _TypeRef
  <
    I@016/0169
    _TypeKind.Scalar
  >
  {
    !OF I@009/0170
    scalar
    :
    I@018/0170
    $kind
  }
}
{
  !O I@008/0173
  _BaseScalar
  <
    I@021/0173
    $kind
    I@027/0173
    $item
  >
  :
  I@007/0174
  _ChildType
  <
    I@018/0174
    _TypeKind.Scalar
    I@035/0174
    String
  >
  {
    !OF I@009/0175
    scalar
    :
    I@018/0175
    $kind
    !OF I@009/0176
    items
    :
    I@017/0176
    $item
    []
    !OF I@009/0177
    allItems
    :
    I@019/0177
    _ScalarItem
    <
      I@032/0177
      $item
    >
    []
  }
}
{
  !O I@008/0180
  _BaseScalarItem
  {
    !OF I@009/0181
    exclude
    :
    I@018/0181
    Boolean
  }
}
{
  !O I@008/0184
  _ScalarBoolean
}
{
  !O I@008/0187
  _ScalarEnum
  :
  I@007/0188
  _BaseScalarItem
  {
    !OF I@009/0189
    member
    :
    I@017/0189
    _EnumValue
  }
}
{
  !O I@008/0192
  _ScalarRange
  :
  I@007/0193
  _BaseScalarItem
  {
    !OF I@009/0194
    from
    :
    I@015/0194
    Number
    ?
    !OF I@009/0195
    to
    :
    I@013/0195
    Number
    ?
  }
}
{
  !O I@008/0198
  _ScalarRegex
  :
  I@007/0199
  _BaseScalarItem
  {
    !OF I@009/0200
    regex
    :
    I@016/0200
    String
  }
}
{
  !O I@008/0203
  _ScalarItem
  <
    I@021/0203
    $item
  >
  :
  I@008/0204
  $item
  {
    !OF I@009/0205
    scalar
    :
    I@017/0205
    String
  }
}
{
  !O I@008/0208
  _ScalarValue
  <
    I@022/0208
    $kind
    I@028/0208
    $value
  >
  :
  I@007/0209
  _ScalarRef
  <
    I@019/0209
    $kind
  >
  {
    !OF I@009/0210
    value
    :
    I@017/0210
    $value
  }
}
{
  !O I@008/0212
  _TypeObject
  <
    I@021/0212
    $kind
    I@027/0212
    $base
    I@033/0212
    $field
  >
  :
  I@007/0213
  _ChildType
  <
    I@019/0213
    $kind
    I@024/0213
    _Described
    <
      I@036/0213
      $base
    >
  >
  {
    !OF I@009/0214
    typeParameters
    :
    I@025/0214
    _Described
    <
      I@036/0214
      _Named
    >
    []
    !OF I@009/0215
    fields
    :
    I@018/0215
    $field
    []
    !OF I@009/0216
    alternates
    :
    I@021/0216
    _Alternate
    <
      I@033/0216
      $base
    >
    []
    !OF I@009/0217
    allTypeParameters
    :
    I@028/0217
    _Object
    <
      I@036/0217
      _Described
      <
        I@047/0217
        _Named
      >
    >
    []
    !OF I@009/0218
    allFields
    :
    I@020/0218
    _Object
    <
      I@029/0218
      $field
    >
    []
    !OF I@009/0219
    allAlternates
    :
    I@024/0219
    _Object
    <
      I@032/0219
      _Alternate
      <
        I@044/0219
        $base
      >
    >
    []
  }
}
{
  !O I@008/0222
  _Ref
  <
    I@014/0222
    $base
  >
  |
  !AO
  I@007/0223
  _BaseType
  <
    I@017/0223
    _TypeKind.Internal
  >
  !AO
  I@007/0224
  _TypeSimple
  !AO
  I@008/0225
  $base
}
{
  !O I@008/0228
  _Alternate
  <
    I@020/0228
    $base
  >
  {
    !OF I@007/0229
    type
    :
    I@013/0229
    _Ref
    <
      I@019/0229
      $base
    >
    !OF I@007/0230
    collections
    :
    I@020/0230
    _Collection
    []
  }
}
{
  !O I@008/0233
  _Object
  <
    I@017/0233
    $for
  >
  :
  I@008/0234
  $for
  {
    !OF I@009/0235
    object
    :
    I@017/0235
    String
  }
}
{
  !O I@008/0238
  _Field
  <
    I@016/0238
    $base
  >
  :
  I@007/0239
  _Aliased
  {
    !OF I@007/0240
    type
    :
    I@013/0240
    _Ref
    <
      I@019/0240
      $base
    >
    !OF I@007/0241
    modifiers
    :
    I@018/0241
    _Modifier
    []
  }
}
{
  !O I@008/0244
  _Parameter
  :
  I@007/0245
  _Alternate
  <
    I@018/0245
    _InputBase
  >
  {
    !OF I@009/0246
    default
    :
    I@018/0246
    _Constant
    ?
  }
}
{
  !O I@008/0248
  _InputBase
  {
    !OF I@009/0249
    input
    :
    I@016/0249
    String
    !OF I@009/0250
    arguments
    :
    I@020/0250
    _Ref
    <
      I@025/0250
      _InputBase
    >
    []
  }
  |
  !AO
  I@023/0251
  String
}
{
  !O I@008/0254
  _InputField
  :
  I@007/0255
  _Field
  <
    I@014/0255
    _InputBase
  >
  {
    !OF I@009/0256
    default
    :
    I@018/0256
    _Constant
    ?
  }
}
{
  !O I@008/0258
  _OutputBase
  {
    !OF I@009/0259
    output
    :
    I@017/0259
    String
    !OF I@009/0260
    arguments
    :
    I@020/0260
    _OutputArgument
    []
  }
  |
  !AO
  I@023/0261
  String
}
{
  !O I@008/0264
  _OutputField
  :
  I@007/0265
  _Field
  <
    I@014/0265
    _OutputBase
  >
  {
    !OF I@009/0266
    parameter
    :
    I@020/0266
    _Parameter
    []
  }
  |
  !AO
  I@007/0267
  _OutputEnum
}
{
  !O I@008/0270
  _OutputArgument
  :
  I@007/0271
  _TypeRef
  <
    I@016/0271
    _TypeKind.Enum
  >
  {
    !OF I@009/0272
    value
    :
    I@016/0272
    String
  }
  |
  !AO
  I@007/0273
  _Ref
  <
    I@012/0273
    _OutputBase
  >
}
{
  !O I@008/0276
  _OutputEnum
  :
  I@007/0277
  _TypeRef
  <
    I@016/0277
    _TypeKind.Enum
  >
  {
    !OF I@009/0278
    field
    :
    I@016/0278
    String
    !OF I@009/0279
    value
    :
    I@016/0279
    String
  }
}