!Sc I@001/0001
Success
{
  !Ou I@008/0001
  _Schema
  :
  I@007/0002
  _Named
  {
    !OF I@009/0003
    categories
    (
      !Pa
      I@020/0003
      _CategoryFilter
      ?
    )
    :
    I@039/0003
    _Categories
    [_Identifier]
    !OF I@009/0004
    directives
    (
      !Pa
      I@020/0004
      _Filter
      ?
    )
    :
    I@031/0004
    _Directives
    [_Identifier]
    !OF I@009/0005
    types
    (
      !Pa
      I@015/0005
      _TypeFilter
      ?
    )
    :
    I@030/0005
    _Type
    [_Identifier]
    !OF I@009/0006
    settings
    (
      !Pa
      I@018/0006
      _Filter
      ?
    )
    :
    I@029/0006
    _Setting
    [_Identifier]
  }
}
{
  !Do I@008/0009
  _Identifier
  String
  !DX R@029/0009
  /[A-Za-z_]+/
}
{
  !In I@007/0011
  _Filter
  {
    !IF I@009/0012
    names
    :
    I@016/0012
    _NameFilter
    []
    !IF I@009/0013
    matchAliases
    :
    I@023/0013
    Boolean
    ?
    =( !k I@034/0013 Boolean.true )
    !IF I@009/0014
    aliases
    :
    I@018/0014
    _NameFilter
    []
    !IF I@009/0015
    returnByAlias
    :
    I@024/0015
    Boolean
    ?
    =( !k I@035/0015 Boolean.false )
    !IF I@009/0016
    returnReferencedTypes
    :
    I@032/0016
    Boolean
    ?
    =( !k I@043/0016 Boolean.false )
  }
  |
  !AI
  I@007/0017
  _NameFilter
  []
}
{
  "_NameFilter is a simple match expression against _Identifier  where '.' matches any single character and '*' matches zero or more of any character."
  !Do I@008/0021
  _NameFilter
  String
  !DX R@029/0021
  /[A-Za-z_.*]+/
}
{
  !In I@007/0023
  _CategoryFilter
  :
  I@007/0024
  _Filter
  {
    !IF I@009/0025
    resolutions
    :
    I@022/0025
    _Resolution
    []
  }
}
{
  !In I@007/0028
  _TypeFilter
  :
  I@007/0029
  _Filter
  {
    !IF I@009/0030
    kinds
    :
    I@016/0030
    _TypeKind
    []
  }
}
{
  !Du I@006/0032
  _Aliased
  :
  I@007/0033
  _Described
  {
    !DF I@009/0034
    aliases
    :
    I@018/0034
    _Identifier
    []
  }
}
{
  !Du I@006/0037
  _Described
  :
  I@007/0038
  _Named
  {
    !DF I@009/0039
    description
    :
    I@022/0039
    String
  }
}
{
  !Du I@006/0042
  _Named
  {
    !DF I@009/0043
    name
    :
    I@015/0043
    _Identifier
  }
}
{
  !Ou I@008/0045
  _Categories
  {
    !OF I@009/0046
    category
    :
    I@019/0046
    _Category
    !OF I@009/0047
    type
    :
    I@015/0047
    _Type
  }
  |
  !AO
  I@007/0048
  _Category
  !AO
  I@007/0049
  _Type
}
{
  !Ou I@008/0052
  _Category
  :
  I@007/0053
  _Aliased
  {
    !OF I@009/0054
    resolution
    :
    I@021/0054
    _Resolution
    !OF I@009/0055
    output
    :
    I@017/0055
    _TypeRef
    <
      I@026/0055
      _TypeKind.Output
    >
    !OF I@009/0056
    modifiers
    :
    I@020/0056
    _Modifiers
    []
  }
}
{
  !En I@006/0059
  _Resolution
  !EM I@020/0059
  Parallel
  !EM I@029/0059
  Sequential
  !EM I@040/0059
  Single
}
{
  !Ou I@008/0060
  _Directives
  {
    !OF I@009/0061
    directive
    :
    I@020/0061
    _Directive
    !OF I@009/0062
    type
    :
    I@015/0062
    _Type
  }
  |
  !AO
  I@007/0063
  _Directive
  !AO
  I@007/0064
  _Type
}
{
  !Ou I@008/0067
  _Directive
  :
  I@007/0068
  _Aliased
  {
    !OF I@009/0069
    parameters
    :
    I@021/0069
    _InputParameter
    []
    !OF I@009/0070
    repeatable
    :
    I@021/0070
    Boolean
    !OF I@009/0071
    locations
    :
    I@020/0071
    _
    [_Location]
  }
}
{
  !En I@006/0074
  _Location
  !EM I@018/0074
  Operation
  !EM I@028/0074
  Variable
  !EM I@037/0074
  Field
  !EM I@043/0074
  Inline
  !EM I@050/0074
  Spread
  !EM I@057/0074
  Fragment
}
{
  !Ou I@008/0076
  _Setting
  :
  I@007/0077
  _Described
  {
    !OF I@009/0078
    value
    :
    I@016/0078
    _Constant
  }
}
{
  !Ou I@008/0080
  _Type
  |
  !AO
  I@007/0081
  _BaseType
  <
    I@017/0081
    _TypeKind.Basic
  >
  !AO
  I@007/0082
  _BaseType
  <
    I@017/0082
    _TypeKind.Internal
  >
  !AO
  I@007/0083
  _TypeDual
  !AO
  I@007/0084
  _TypeEnum
  !AO
  I@007/0085
  _TypeInput
  !AO
  I@007/0086
  _TypeOutput
  !AO
  I@007/0087
  _TypeDomain
  !AO
  I@007/0088
  _TypeUnion
}
{
  !Ou I@008/0091
  _BaseType
  <
    I@019/0091
    $kind
  >
  :
  I@007/0092
  _Aliased
  {
    !OF I@009/0093
    typeKind
    :
    I@020/0093
    $kind
  }
}
{
  !Ou I@008/0096
  _ChildType
  <
    I@020/0096
    $kind
    I@026/0096
    $parent
  >
  :
  I@007/0097
  _BaseType
  <
    I@018/0097
    $kind
  >
  {
    !OF I@009/0098
    parent
    :
    I@018/0098
    $parent
  }
}
{
  !Ou I@008/0101
  _ParentType
  <
    I@021/0101
    $kind
    I@027/0101
    $item
    I@033/0101
    $allItem
  >
  :
  I@007/0102
  _ChildType
  <
    I@019/0102
    $kind
    I@024/0102
    _Identifier
  >
  {
    !OF I@009/0103
    items
    :
    I@017/0103
    $item
    []
    !OF I@009/0104
    allItems
    :
    I@020/0104
    $allItem
    []
  }
}
{
  !En I@006/0107
  _SimpleKind
  !EM I@020/0107
  Basic
  !EM I@026/0107
  Enum
  !EM I@031/0107
  Internal
  !EM I@040/0107
  Domain
  !EM I@047/0107
  Union
}
{
  !En I@006/0109
  _TypeKind
  :_SimpleKind
  !EM I@031/0109
  Dual
  !EM I@036/0109
  Input
  !EM I@042/0109
  Output
}
{
  !Ou I@008/0111
  _TypeRef
  <
    I@018/0111
    $kind
  >
  {
    !OF I@009/0112
    typeKind
    :
    I@020/0112
    $kind
    !OF I@009/0113
    name
    :
    I@015/0113
    _Identifier
  }
}
{
  !Ou I@008/0116
  _TypeSimple
  |
  !AO
  I@007/0117
  _TypeRef
  <
    I@016/0117
    _TypeKind.Basic
  >
  !AO
  I@007/0118
  _TypeRef
  <
    I@016/0118
    _TypeKind.Enum
  >
  !AO
  I@007/0119
  _TypeRef
  <
    I@016/0119
    _TypeKind.Domain
  >
  !AO
  I@007/0120
  _TypeRef
  <
    I@016/0120
    _TypeKind.Union
  >
}
{
  !Ou I@008/0122
  _Constant
  |
  !AO
  I@007/0123
  _Simple
  !AO
  I@007/0124
  _ConstantList
  !AO
  I@007/0125
  _ConstantMap
}
{
  !Ou I@008/0128
  _Simple
  |
  !AO
  I@007/0129
  Boolean
  !AO
  I@007/0130
  _DomainValue
  <
    I@020/0130
    _DomainKind.Number
    I@039/0130
    Number
  >
  !AO
  I@007/0131
  _DomainValue
  <
    I@020/0131
    _DomainKind.String
    I@039/0131
    String
  >
  !AO
  I@007/0132
  _EnumValue
}
{
  !Ou I@008/0135
  _ConstantList
  |
  !AO
  I@007/0136
  _Constant
  []
}
{
  !Ou I@008/0139
  _ConstantMap
  |
  !AO
  I@007/0140
  _Constant
  [Simple]
}
{
  !Ou I@008/0143
  _Collections
  |
  !AO
  I@007/0144
  _Modifier
  <
    I@017/0144
    _ModifierKind.List
  >
  !AO
  I@007/0145
  _ModifierKeyed
  <
    I@022/0145
    _ModifierKind.Dictionary
  >
  !AO
  I@007/0146
  _ModifierKeyed
  <
    I@022/0146
    _ModifierKind.TypeParameter
  >
}
{
  !Ou I@008/0149
  _ModifierKeyed
  <
    I@024/0149
    $kind
  >
  :
  I@007/0150
  _Modifier
  <
    I@018/0150
    $kind
  >
  {
    !OF I@009/0151
    by
    :
    I@013/0151
    _TypeSimple
    !OF I@009/0152
    optional
    :
    I@019/0152
    Boolean
  }
}
{
  !Ou I@008/0155
  _Modifiers
  |
  !AO
  I@007/0156
  _Modifier
  <
    I@017/0156
    _ModifierKind.Optional
  >
  !AO
  I@007/0157
  _Collections
}
{
  !En I@006/0160
  _ModifierKind
  !EM I@022/0160
  Opt
  [
    Optional
  ]
  !EM I@036/0160
  List
  !EM I@041/0160
  Dict
  [
    Dictionary
  ]
  !EM I@058/0160
  Param
  [
    TypeParameter
  ]
}
{
  !Ou I@008/0162
  _Modifier
  <
    I@019/0162
    $kind
  >
  {
    !OF I@009/0163
    modifierKind
    :
    I@024/0163
    $kind
  }
}
{
  !En I@006/0165
  _DomainKind
  !EM I@020/0165
  Boolean
  !EM I@028/0165
  Enum
  !EM I@033/0165
  Number
  !EM I@040/0165
  String
}
{
  !Ou I@008/0167
  _TypeDomain
  |
  !AO
  I@007/0168
  _BaseDomain
  <
    I@019/0168
    _DomainKind.Boolean
    I@039/0168
    _DomainTrueFalse
  >
  !AO
  I@007/0169
  _BaseDomain
  <
    I@019/0169
    _DomainKind.Enum
    I@036/0169
    _DomainMember
  >
  !AO
  I@007/0170
  _BaseDomain
  <
    I@019/0170
    _DomainKind.Number
    I@038/0170
    _DomainRange
  >
  !AO
  I@007/0171
  _BaseDomain
  <
    I@019/0171
    _DomainKind.String
    I@038/0171
    _DomainRegex
  >
}
{
  !Ou I@008/0174
  _DomainRef
  <
    I@020/0174
    $kind
  >
  :
  I@007/0175
  _TypeRef
  <
    I@016/0175
    _TypeKind.Domain
  >
  {
    !OF I@009/0176
    domainKind
    :
    I@022/0176
    $kind
  }
}
{
  !Ou I@008/0179
  _BaseDomain
  <
    I@021/0179
    $domain
    I@029/0179
    $item
  >
  :
  I@007/0180
  _ParentType
  <
    I@019/0180
    _TypeKind.Domain
    I@037/0180
    $item
    I@042/0180
    _DomainItem
    <
      I@055/0180
      $item
    >
  >
  {
    !OF I@009/0181
    domain
    :
    I@018/0181
    $domain
  }
}
{
  !Du I@006/0184
  _BaseDomainItem
  {
    !DF I@009/0185
    exclude
    :
    I@018/0185
    Boolean
  }
}
{
  !Du I@006/0188
  _DomainItem
  <
    I@019/0188
    $item
  >
  :
  I@008/0189
  $item
  {
    !DF I@009/0190
    domain
    :
    I@017/0190
    _Identifier
  }
}
{
  !Ou I@008/0193
  _DomainValue
  <
    I@022/0193
    $kind
    I@028/0193
    $value
  >
  :
  I@007/0194
  _DomainRef
  <
    I@019/0194
    $kind
  >
  {
    !OF I@009/0195
    value
    :
    I@017/0195
    $value
  }
}
{
  !Du I@006/0197
  _DomainTrueFalse
  :
  I@007/0198
  _BaseDomainItem
  {
    !DF I@009/0199
    value
    :
    I@016/0199
    Boolean
  }
}
{
  !Ou I@008/0201
  _DomainMember
  :
  I@007/0202
  _BaseDomainItem
  {
    !OF I@009/0203
    member
    :
    I@017/0203
    _EnumValue
  }
}
{
  !Du I@006/0205
  _DomainRange
  :
  I@007/0206
  _BaseDomainItem
  {
    !DF I@009/0207
    lower
    :
    I@016/0207
    Number
    ?
    !DF I@009/0208
    upper
    :
    I@016/0208
    Number
    ?
  }
}
{
  !Du I@006/0210
  _DomainRegex
  :
  I@007/0211
  _BaseDomainItem
  {
    !DF I@009/0212
    pattern
    :
    I@018/0212
    String
  }
}
{
  !Ou I@008/0214
  _TypeEnum
  :
  I@007/0215
  _ParentType
  <
    I@019/0215
    _TypeKind.Enum
    I@034/0215
    _Aliased
    I@043/0215
    _EnumMember
  >
}
{
  !Du I@006/0218
  _EnumMember
  :
  I@007/0219
  _Aliased
  {
    !DF I@009/0220
    enum
    :
    I@015/0220
    _Identifier
  }
}
{
  !Ou I@008/0223
  _EnumValue
  :
  I@007/0224
  _TypeRef
  <
    I@016/0224
    _TypeKind.Enum
  >
  {
    !OF I@009/0225
    value
    :
    I@016/0225
    _Identifier
  }
}
{
  !Ou I@008/0227
  _TypeUnion
  :
  I@007/0228
  _ParentType
  <
    I@019/0228
    _TypeKind.Union
    I@035/0228
    _Named
    I@042/0228
    _UnionMember
  >
}
{
  !Du I@006/0231
  _UnionMember
  :
  I@007/0232
  _Named
  {
    !DF I@009/0233
    union
    :
    I@016/0233
    _Identifier
  }
}
{
  !Ou I@008/0235
  _TypeObject
  <
    I@021/0235
    $kind
    I@027/0235
    $base
    I@033/0235
    $field
  >
  :
  I@007/0236
  _ChildType
  <
    I@019/0236
    $kind
    I@024/0236
    _ObjDescribed
    <
      I@039/0236
      $base
    >
  >
  {
    !OF I@009/0237
    typeParameters
    :
    I@025/0237
    _Described
    []
    !OF I@009/0238
    fields
    :
    I@018/0238
    $field
    []
    !OF I@009/0239
    alternates
    :
    I@021/0239
    _Alternate
    <
      I@033/0239
      $base
    >
    []
    !OF I@009/0240
    allFields
    :
    I@020/0240
    _ObjectFor
    <
      I@032/0240
      $field
    >
    []
    !OF I@009/0241
    allAlternates
    :
    I@024/0241
    _ObjectFor
    <
      I@035/0241
      _Alternate
      <
        I@047/0241
        $base
      >
    >
    []
  }
}
{
  !Du I@006/0244
  _ObjDescribed
  <
    I@021/0244
    $base
  >
  {
    !DF I@009/0245
    base
    :
    I@016/0245
    $base
    !DF I@009/0246
    description
    :
    I@022/0246
    String
  }
  |
  !AD
  I@008/0247
  $base
}
{
  !Ou I@008/0250
  _ObjType
  <
    I@018/0250
    $base
  >
  |
  !AO
  I@007/0251
  _BaseType
  <
    I@017/0251
    _TypeKind.Internal
  >
  !AO
  I@007/0252
  _TypeSimple
  !AO
  I@008/0253
  $base
}
{
  !Du I@006/0256
  _ObjBase
  <
    I@016/0256
    $base
  >
  {
    !DF I@009/0257
    typeArguments
    :
    I@025/0257
    $base
    []
  }
  |
  !AD
  I@007/0258
  _TypeParameter
}
{
  !Do I@008/0261
  _TypeParameter
  String
  :_Identifier
}
{
  !Ou I@008/0263
  _Alternate
  <
    I@020/0263
    $base
  >
  {
    !OF I@007/0264
    type
    :
    I@013/0264
    _ObjDescribed
    <
      I@028/0264
      $base
    >
    !OF I@007/0265
    collections
    :
    I@020/0265
    _Collections
    []
  }
}
{
  !Ou I@008/0268
  _ObjectFor
  <
    I@020/0268
    $for
  >
  :
  I@008/0269
  $for
  {
    !OF I@009/0270
    object
    :
    I@017/0270
    _Identifier
  }
}
{
  !Ou I@008/0273
  _Field
  <
    I@016/0273
    $base
  >
  :
  I@007/0274
  _Aliased
  {
    !OF I@007/0275
    type
    :
    I@013/0275
    _ObjDescribed
    <
      I@028/0275
      $base
    >
    !OF I@007/0276
    modifiers
    :
    I@018/0276
    _Modifiers
    []
  }
}
{
  !Ou I@008/0278
  _TypeDual
  :
  I@007/0279
  _TypeObject
  <
    I@019/0279
    _TypeKind.Dual
    I@034/0279
    _DualBase
    I@044/0279
    _Field
    <
      I@051/0279
      _DualBase
    >
  >
}
{
  !Ou I@008/0282
  _DualBase
  :
  I@007/0283
  _ObjBase
  <
    I@016/0283
    _DualBase
  >
  {
    !OF I@009/0284
    dual
    :
    I@015/0284
    _Identifier
  }
}
{
  !Ou I@008/0286
  _TypeInput
  :
  I@007/0287
  _TypeObject
  <
    I@019/0287
    _TypeKind.Input
    I@035/0287
    _InputBase
    I@046/0287
    _InputField
  >
}
{
  !Ou I@008/0290
  _InputBase
  :
  I@007/0291
  _ObjBase
  <
    I@016/0291
    _InputBase
  >
  {
    !OF I@009/0292
    input
    :
    I@016/0292
    _Identifier
  }
  |
  !AO
  I@007/0293
  _DualBase
}
{
  !Ou I@008/0296
  _InputField
  :
  I@007/0297
  _Field
  <
    I@014/0297
    _InputBase
  >
  {
    !OF I@009/0298
    default
    :
    I@018/0298
    _Constant
    ?
  }
}
{
  !Ou I@008/0301
  _InputParameter
  :
  I@007/0302
  _ObjDescribed
  <
    I@021/0302
    _InputBase
  >
  {
    !OF I@009/0303
    modifiers
    :
    I@020/0303
    _Modifiers
    []
    !OF I@009/0304
    default
    :
    I@018/0304
    _Constant
    ?
  }
}
{
  !Ou I@008/0306
  _TypeOutput
  :
  I@007/0307
  _TypeObject
  <
    I@019/0307
    _TypeKind.Output
    I@036/0307
    _OutputBase
    I@048/0307
    _OutputField
  >
}
{
  !Ou I@008/0310
  _OutputBase
  :
  I@007/0311
  _ObjBase
  <
    I@016/0311
    _OutputArgument
  >
  {
    !OF I@009/0312
    output
    :
    I@017/0312
    _Identifier
  }
  |
  !AO
  I@007/0313
  _DualBase
}
{
  !Ou I@008/0316
  _OutputField
  :
  I@007/0317
  _Field
  <
    I@014/0317
    _OutputBase
  >
  {
    !OF I@009/0318
    parameter
    :
    I@020/0318
    _InputParameter
    []
  }
  |
  !AO
  I@007/0319
  _OutputEnum
}
{
  !Ou I@008/0322
  _OutputArgument
  :
  I@007/0323
  _TypeRef
  <
    I@016/0323
    _TypeKind.Enum
  >
  {
    !OF I@009/0324
    value
    :
    I@016/0324
    _Identifier
  }
  |
  !AO
  I@007/0325
  _OutputBase
}
{
  !Ou I@008/0328
  _OutputEnum
  :
  I@007/0329
  _TypeRef
  <
    I@016/0329
    _TypeKind.Enum
  >
  {
    !OF I@009/0330
    field
    :
    I@016/0330
    _Identifier
    !OF I@009/0331
    value
    :
    I@016/0331
    _Identifier
  }
}