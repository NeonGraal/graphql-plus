!Sc I@001/0001
Success
{
  !Ou I@008/0001
  _Schema
  :
  I@007/0002
  _Named
  {
    !OF I@009/0003
    categories
    (
      !Pa
      I@020/0003
      _CategoryFilter
      ?
    )
    :
    I@039/0003
    _Categories
    [_Identifier]
    !OF I@009/0004
    directives
    (
      !Pa
      I@020/0004
      _Filter
      ?
    )
    :
    I@031/0004
    _Directives
    [_Identifier]
    !OF I@009/0005
    operations
    (
      !Pa
      I@020/0005
      _Filter
      ?
    )
    :
    I@031/0005
    _Operations
    [_Identifier]
    !OF I@009/0006
    types
    (
      !Pa
      I@015/0006
      _TypeFilter
      ?
    )
    :
    I@030/0006
    _Type
    [_Identifier]
    !OF I@009/0007
    settings
    (
      !Pa
      I@018/0007
      _Filter
      ?
    )
    :
    I@029/0007
    _Setting
    [_Identifier]
  }
}
{
  !Do I@008/0010
  _Identifier
  String
  !DX R@029/0010
  /\\w[\\w\\d]*/
}
{
  !In I@007/0012
  _Filter
  {
    !IF I@009/0013
    names
    :
    I@016/0013
    _NameFilter
    []
    !IF I@009/0014
    matchAliases
    :
    I@023/0014
    Boolean
    ?
    =( !k I@034/0014 Boolean.true )
    !IF I@009/0015
    aliases
    :
    I@018/0015
    _NameFilter
    []
    !IF I@009/0016
    returnByAlias
    :
    I@024/0016
    Boolean
    ?
    =( !k I@035/0016 Boolean.false )
    !IF I@009/0017
    returnReferencedTypes
    :
    I@032/0017
    Boolean
    ?
    =( !k I@043/0017 Boolean.false )
  }
  |
  I@007/0018
  _NameFilter
  []
}
{
  '_NameFilter is a simple match expression against _Identifier where \'.\' matches any single character and \'*\' matches zero or more of any character.'
  !Do I@008/0023
  _NameFilter
  String
  !DX R@029/0023
  /[\\w\\d.*]+/
}
{
  !In I@007/0025
  _CategoryFilter
  :
  I@007/0026
  _Filter
  {
    !IF I@009/0027
    resolutions
    :
    I@022/0027
    _Resolution
    []
  }
}
{
  !In I@007/0030
  _TypeFilter
  :
  I@007/0031
  _Filter
  {
    !IF I@009/0032
    kinds
    :
    I@016/0032
    _TypeKind
    []
  }
}
{
  !Du I@006/0035
  _Aliased
  :
  I@007/0036
  _Named
  {
    !DF I@009/0037
    aliases
    :
    I@018/0037
    _Identifier
    []
  }
}
{
  !Du I@006/0040
  _Named
  :
  I@007/0041
  _Described
  {
    !DF I@009/0042
    name
    :
    I@015/0042
    _Identifier
  }
}
{
  !Du I@006/0045
  _Described
  {
    !DF I@009/0046
    description
    :
    I@022/0046
    String
    []
  }
}
{
  !Ou I@008/0049
  _AndType
  :
  I@007/0050
  _Named
  {
    !OF I@009/0051
    type
    :
    I@015/0051
    _Type
  }
  |
  I@007/0052
  _Type
}
{
  !Ou I@008/0055
  _Categories
  :
  I@007/0056
  _AndType
  {
    !OF I@009/0057
    category
    :
    I@019/0057
    _Category
  }
  |
  I@007/0058
  _Category
}
{
  !Ou I@008/0061
  _Category
  :
  I@007/0062
  _Aliased
  {
    !OF I@009/0063
    resolution
    :
    I@021/0063
    _Resolution
    !OF I@009/0064
    output
    :
    I@017/0064
    _TypeRef
    <
      I@026/0064
      _TypeKind.Output
    >
    !OF I@009/0065
    modifiers
    :
    I@020/0065
    _Modifiers
    []
  }
}
{
  !En I@006/0068
  _Resolution
  !EL I@020/0068
  Parallel
  !EL I@029/0068
  Sequential
  !EL I@040/0068
  Single
}
{
  !Ou I@008/0070
  _Directives
  :
  I@007/0071
  _AndType
  {
    !OF I@009/0072
    directive
    :
    I@020/0072
    _Directive
  }
  |
  I@007/0073
  _Directive
}
{
  !Ou I@008/0076
  _Directive
  :
  I@007/0077
  _Aliased
  {
    !OF I@009/0078
    parameters
    :
    I@021/0078
    _InputParam
    []
    !OF I@009/0079
    repeatable
    :
    I@021/0079
    Boolean
    !OF I@009/0080
    locations
    :
    I@020/0080
    _
    [_Location]
  }
}
{
  !En I@006/0083
  _Location
  !EL I@018/0083
  Operation
  !EL I@028/0083
  Variable
  !EL I@037/0083
  Field
  !EL I@043/0083
  Inline
  !EL I@050/0083
  Spread
  !EL I@057/0083
  Fragment
}
{
  !Ou I@008/0086
  _Operations
  {
    !OF I@009/0087
    operation
    :
    I@020/0087
    _Operation
    !OF I@009/0088
    type
    :
    I@015/0088
    _Type
  }
  |
  I@007/0089
  _Operation
  I@007/0090
  _Type
}
{
  !Ou I@008/0093
  _Operation
  :
  I@007/0094
  _Aliased
  {
    !OF I@009/0095
    category
    :
    I@019/0095
    _Identifier
    !OF I@009/0096
    variables
    :
    I@020/0096
    _OpVariable
    []
    !OF I@009/0097
    directives
    :
    I@021/0097
    _OpDirective
    []
    !OF I@009/0098
    fragments
    :
    I@020/0098
    _OpFragment
    []
    !OF I@009/0099
    result
    :
    I@017/0099
    _OpResult
  }
}
{
  !Ou I@008/0102
  _OpVariable
  :
  I@007/0103
  _Named
  {
    !OF I@009/0104
    type
    :
    I@015/0104
    _ObjBase
    !OF I@009/0105
    modifiers
    :
    I@020/0105
    _Modifiers
    []
    !OF I@009/0106
    default
    :
    I@018/0106
    Value
    ?
    !OF I@009/0107
    directives
    :
    I@021/0107
    _OpDirective
    []
  }
}
{
  !Du I@006/0110
  _OpDirective
  :
  I@007/0111
  _Named
  {
    !DF I@009/0112
    argument
    :
    I@019/0112
    _OpArgument
    ?
  }
}
{
  !Ou I@008/0115
  _OpFragment
  :
  I@007/0116
  _Named
  {
    !OF I@009/0117
    type
    :
    I@015/0117
    _ObjBase
    !OF I@009/0118
    directives
    :
    I@021/0118
    _OpDirective
    []
  }
}
{
  !Du I@006/0121
  _OpArgument
  |
  I@009/0122
  _OpArgValue
  I@009/0123
  _OpArgList
  I@009/0124
  _OpArgMap
}
{
  !Du I@006/0127
  _OpArgValue
  {
    !DF I@009/0128
    variable
    :
    I@019/0128
    _Identifier
  }
  |
  I@009/0129
  Value
}
{
  !Du I@006/0132
  _OpArgList
  |
  I@007/0133
  _OpArgValue
  []
}
{
  !Du I@006/0136
  _OpArgMap
  {
    !DF I@009/0137
    value
    :
    I@016/0137
    _OpArgValue
    !DF I@009/0138
    byVariable
    :
    I@021/0138
    _Identifier
  }
  |
  I@007/0139
  _OpArgValue
  [Scalar]
}
{
  !Do I@008/0142
  _Path
  String
  !DX R@023/0142
  /\\$?\\.*\\w[\\w\\d]*(\\.\\w[\\w\\d]*)*/
}
{
  !Ou I@008/0144
  _OpResult
  {
    !OF I@009/0145
    selections
    :
    I@021/0145
    _OpObject
    [_Path]
    !OF I@009/0146
    argument
    :
    I@019/0146
    _OpArgument
    ?
  }
  |
  I@007/0147
  _TypeRef
  <
    I@016/0147
    _SimpleKind
  >
}
{
  !Ou I@008/0150
  _OpObject
  |
  I@009/0151
  _OpField
  I@009/0152
  _OpSpread
  I@009/0153
  _OpInline
}
{
  !Ou I@008/0156
  _OpField
  {
    !OF I@009/0157
    alias
    :
    I@016/0157
    String
    ?
    !OF I@009/0158
    field
    :
    I@016/0158
    String
    !OF I@009/0159
    argument
    :
    I@019/0159
    _OpArgument
    ?
    !OF I@009/0160
    modifiers
    :
    I@020/0160
    _Modifiers
    []
    !OF I@009/0161
    directives
    :
    I@021/0161
    _OpDirective
    []
  }
}
{
  !Ou I@008/0164
  _OpInline
  {
    !OF I@009/0165
    type
    :
    I@015/0165
    _ObjBase
    ?
    !OF I@009/0166
    directives
    :
    I@021/0166
    _OpDirective
    []
  }
}
{
  !Ou I@008/0169
  _OpSpread
  {
    !OF I@009/0170
    fragment
    :
    I@019/0170
    String
    !OF I@009/0171
    directives
    :
    I@021/0171
    _OpDirective
    []
  }
}
{
  !Ou I@008/0174
  _Setting
  :
  I@007/0175
  _Named
  {
    !OF I@009/0176
    value
    :
    I@016/0176
    Value
  }
}
{
  !Ou I@008/0179
  _Type
  |
  I@007/0180
  _BaseType
  <
    I@017/0180
    _TypeKind.Basic
  >
  I@007/0181
  _BaseType
  <
    I@017/0181
    _TypeKind.Internal
  >
  I@007/0182
  _BaseDomain
  <
    I@019/0182
    _DomainKind.Boolean
    I@039/0182
    _DomainTrueFalse
    I@056/0182
    _DomainItemTrueFalse
  >
  I@007/0183
  _BaseDomain
  <
    I@019/0183
    _DomainKind.Enum
    I@036/0183
    _DomainLabel
    I@049/0183
    _DomainItemLabel
  >
  I@007/0184
  _BaseDomain
  <
    I@019/0184
    _DomainKind.Number
    I@038/0184
    _DomainRange
    I@051/0184
    _DomainItemRange
  >
  I@007/0185
  _BaseDomain
  <
    I@019/0185
    _DomainKind.String
    I@038/0185
    _DomainRegex
    I@051/0185
    _DomainItemRegex
  >
  I@007/0186
  _ParentType
  <
    I@019/0186
    _TypeKind.Enum
    I@034/0186
    _Aliased
    I@043/0186
    _EnumLabel
  >
  I@007/0187
  _ParentType
  <
    I@019/0187
    _TypeKind.Union
    I@035/0187
    _UnionRef
    I@045/0187
    _UnionMember
  >
  I@007/0188
  _TypeObject
  <
    I@019/0188
    _TypeKind.Dual
    I@034/0188
    _DualField
  >
  I@007/0189
  _TypeObject
  <
    I@019/0189
    _TypeKind.Input
    I@035/0189
    _InputField
  >
  I@007/0190
  _TypeObject
  <
    I@019/0190
    _TypeKind.Output
    I@036/0190
    _OutputField
  >
}
{
  !Ou I@008/0193
  _BaseType
  <
    I@019/0193
    $kind
    :_TypeKind
  >
  :
  I@007/0194
  _Aliased
  {
    !OF I@009/0195
    typeKind
    :
    I@020/0195
    $kind
  }
}
{
  !Ou I@008/0198
  _ChildType
  <
    I@020/0198
    $kind
    :_TypeKind
    I@036/0198
    $parent
    :_Described
  >
  :
  I@007/0199
  _BaseType
  <
    I@018/0199
    $kind
  >
  {
    !OF I@009/0200
    parent
    :
    I@018/0200
    $parent
  }
}
{
  !Ou I@008/0203
  _ParentType
  <
    I@021/0203
    $kind
    :_TypeKind
    I@037/0203
    $item
    :_Described
    I@054/0203
    $allItem
    :_Described
  >
  :
  I@007/0204
  _ChildType
  <
    I@019/0204
    $kind
    I@024/0204
    _Named
  >
  {
    !OF I@009/0205
    items
    :
    I@017/0205
    $item
    []
    !OF I@009/0206
    allItems
    :
    I@020/0206
    $allItem
    []
  }
}
{
  !En I@006/0209
  _SimpleKind
  !EL I@020/0209
  Basic
  !EL I@026/0209
  Enum
  !EL I@031/0209
  Internal
  !EL I@040/0209
  Domain
  !EL I@047/0209
  Union
}
{
  !En I@006/0211
  _TypeKind
  :( !Tr I@019/0211 _SimpleKind )
  !EL I@031/0211
  Dual
  !EL I@036/0211
  Input
  !EL I@042/0211
  Output
}
{
  !Du I@006/0213
  _TypeRef
  <
    I@016/0213
    $kind
    :_TypeKind
  >
  :
  I@007/0214
  _Named
  {
    !DF I@009/0215
    typeKind
    :
    I@020/0215
    $kind
  }
}
{
  !Du I@006/0218
  _TypeSimple
  |
  I@007/0219
  _TypeRef
  <
    I@016/0219
    _TypeKind.Basic
  >
  I@007/0220
  _TypeRef
  <
    I@016/0220
    _TypeKind.Enum
  >
  I@007/0221
  _TypeRef
  <
    I@016/0221
    _TypeKind.Domain
  >
  I@007/0222
  _TypeRef
  <
    I@016/0222
    _TypeKind.Union
  >
}
{
  !Du I@006/0225
  _Collections
  |
  I@007/0226
  _Modifier
  <
    I@017/0226
    _ModifierKind.List
  >
  I@007/0227
  _ModifierKeyed
  <
    I@022/0227
    _ModifierKind.Dictionary
  >
  I@007/0228
  _ModifierKeyed
  <
    I@022/0228
    _ModifierKind.TypeParam
  >
}
{
  !Du I@006/0231
  _ModifierKeyed
  <
    I@022/0231
    $kind
    :_ModifierKind
  >
  :
  I@007/0232
  _Modifier
  <
    I@018/0232
    $kind
  >
  {
    !DF I@009/0233
    by
    :
    I@013/0233
    _TypeSimple
    !DF I@009/0234
    optional
    :
    I@019/0234
    Boolean
  }
}
{
  !Du I@006/0237
  _Modifiers
  |
  I@007/0238
  _Modifier
  <
    I@017/0238
    _ModifierKind.Optional
  >
  I@007/0239
  _Collections
}
{
  !En I@006/0242
  _ModifierKind
  !EL I@022/0242
  Opt
  [
    Optional
  ]
  !EL I@036/0242
  List
  !EL I@041/0242
  Dict
  [
    Dictionary
  ]
  !EL I@058/0242
  Param
  [
    TypeParam
  ]
}
{
  !Du I@006/0244
  _Modifier
  <
    I@017/0244
    $kind
    :_ModifierKind
  >
  {
    !DF I@009/0245
    modifierKind
    :
    I@024/0245
    $kind
  }
}
{
  !En I@006/0248
  _DomainKind
  !EL I@020/0248
  Boolean
  !EL I@028/0248
  Enum
  !EL I@033/0248
  Number
  !EL I@040/0248
  String
}
{
  !Ou I@008/0250
  _DomainRef
  <
    I@020/0250
    $kind
    :_DomainKind
  >
  :
  I@007/0251
  _TypeRef
  <
    I@016/0251
    _TypeKind.Domain
  >
  {
    !OF I@009/0252
    domainKind
    :
    I@022/0252
    $kind
  }
}
{
  !Ou I@008/0255
  _BaseDomain
  <
    I@021/0255
    $domain
    :_DomainKind
    I@041/0255
    $item
    :_BaseDomainItem
    I@063/0255
    $domainItem
    :_DomainItem
  >
  :
  I@007/0256
  _ParentType
  <
    I@019/0256
    _TypeKind.Domain
    I@037/0256
    $item
    I@043/0256
    $domainItem
  >
  {
    !OF I@009/0257
    domainKind
    :
    I@022/0257
    $domain
  }
}
{
  !Du I@006/0260
  _BaseDomainItem
  :
  I@007/0261
  _Described
  {
    !DF I@009/0262
    exclude
    :
    I@018/0262
    Boolean
  }
}
{
  !Ou I@008/0265
  _DomainItem
  <
    I@021/0265
    $item
    :_BaseDomainItem
  >
  :
  I@008/0266
  $item
  {
    !OF I@009/0267
    domain
    :
    I@017/0267
    _Identifier
  }
}
{
  !Ou I@008/0270
  _DomainValue
  <
    I@022/0270
    $kind
    :_DomainKind
    I@040/0270
    $value
    :_BasicValue
  >
  :
  I@007/0271
  _DomainRef
  <
    I@019/0271
    $kind
  >
  {
    !OF I@009/0272
    value
    :
    I@017/0272
    $value
  }
  |
  P@007/0273
  $value
}
{
  !Ou I@008/0276
  _BasicValue
  |
  I@007/0277
  Boolean
  I@007/0278
  _EnumValue
  I@007/0279
  Number
  I@007/0280
  String
}
{
  !Du I@006/0283
  _DomainTrueFalse
  :
  I@007/0284
  _BaseDomainItem
  {
    !DF I@009/0285
    value
    :
    I@016/0285
    Boolean
  }
}
{
  !Ou I@008/0288
  _DomainItemTrueFalse
  :
  I@007/0289
  _DomainItem
  <
    I@019/0289
    _DomainTrueFalse
  >
}
{
  !Ou I@008/0292
  _DomainLabel
  :
  I@007/0293
  _BaseDomainItem
  {
    !OF I@009/0294
    label
    :
    I@016/0294
    _EnumValue
  }
}
{
  !Ou I@008/0297
  _DomainItemLabel
  :
  I@007/0298
  _DomainItem
  <
    I@019/0298
    _DomainLabel
  >
}
{
  !Du I@006/0301
  _DomainRange
  :
  I@007/0302
  _BaseDomainItem
  {
    !DF I@009/0303
    lower
    :
    I@016/0303
    Number
    ?
    !DF I@009/0304
    upper
    :
    I@016/0304
    Number
    ?
  }
}
{
  !Ou I@008/0307
  _DomainItemRange
  :
  I@007/0308
  _DomainItem
  <
    I@019/0308
    _DomainRange
  >
}
{
  !Du I@006/0311
  _DomainRegex
  :
  I@007/0312
  _BaseDomainItem
  {
    !DF I@009/0313
    pattern
    :
    I@018/0313
    String
  }
}
{
  !Ou I@008/0316
  _DomainItemRegex
  :
  I@007/0317
  _DomainItem
  <
    I@019/0317
    _DomainRegex
  >
}
{
  !Du I@006/0320
  _EnumLabel
  :
  I@007/0321
  _Aliased
  {
    !DF I@009/0322
    enum
    :
    I@015/0322
    _Identifier
  }
}
{
  !Ou I@008/0325
  _EnumValue
  :
  I@007/0326
  _TypeRef
  <
    I@016/0326
    _TypeKind.Enum
  >
  {
    !OF I@009/0327
    label
    :
    I@016/0327
    _Identifier
  }
}
{
  !Ou I@008/0330
  _UnionRef
  :
  I@007/0331
  _TypeRef
  <
    I@016/0331
    _SimpleKind
  >
}
{
  !Ou I@008/0334
  _UnionMember
  :
  I@007/0335
  _UnionRef
  {
    !OF I@009/0336
    union
    :
    I@016/0336
    _Identifier
  }
}
{
  !Do I@008/0339
  _ObjectKind
  Enum
  !DE I@027/0339
  _TypeKind
  Dual
  !DE I@042/0339
  _TypeKind
  Input
  !DE I@058/0339
  _TypeKind
  Output
}
{
  !Ou I@008/0341
  _TypeObject
  <
    I@021/0341
    $kind
    :_ObjectKind
    I@039/0341
    $field
    :_ObjField
  >
  :
  I@007/0342
  _ChildType
  <
    I@019/0342
    $kind
    I@024/0342
    _ObjBase
  >
  {
    !OF I@009/0343
    typeParams
    :
    I@021/0343
    _ObjTypeParam
    []
    !OF I@009/0344
    fields
    :
    I@018/0344
    $field
    []
    !OF I@009/0345
    alternates
    :
    I@021/0345
    _ObjAlternate
    []
    !OF I@009/0346
    allFields
    :
    I@020/0346
    _ObjectFor
    <
      I@032/0346
      $field
    >
    []
    !OF I@009/0347
    allAlternates
    :
    I@024/0347
    _ObjectFor
    <
      I@035/0347
      _ObjAlternate
    >
    []
  }
}
{
  !Ou I@008/0350
  _ObjTypeParam
  :
  I@007/0351
  _Named
  {
    !OF I@009/0352
    constraint
    :
    I@021/0352
    _TypeRef
    <
      I@030/0352
      _TypeKind
    >
  }
}
{
  !Ou I@008/0355
  _ObjBase
  :
  I@007/0356
  _Named
  {
    !OF I@009/0357
    typeArgs
    :
    I@019/0357
    _ObjTypeArg
    []
  }
  |
  I@007/0358
  _TypeParam
}
{
  !Ou I@008/0361
  _ObjTypeArg
  :
  I@007/0362
  _TypeRef
  <
    I@016/0362
    _TypeKind
  >
  {
    !OF I@009/0363
    label
    :
    I@016/0363
    _Identifier
    ?
  }
  |
  I@007/0364
  _TypeParam
}
{
  !Ou I@008/0367
  _TypeParam
  :
  I@007/0368
  _Described
  {
    !OF I@009/0369
    typeParam
    :
    I@020/0369
    _Identifier
  }
}
{
  !Ou I@008/0372
  _ObjAlternate
  {
    !OF I@007/0373
    type
    :
    I@013/0373
    _ObjBase
    !OF I@007/0374
    collections
    :
    I@020/0374
    _Collections
    []
  }
  |
  I@007/0375
  _ObjAlternateEnum
}
{
  !Ou I@008/0378
  _ObjAlternateEnum
  :
  I@007/0379
  _TypeRef
  <
    I@016/0379
    _TypeKind.Enum
  >
  {
    !OF I@009/0380
    label
    :
    I@016/0380
    _Identifier
  }
}
{
  !Ou I@008/0382
  _ObjectFor
  <
    I@020/0382
    $for
    :_ForParam
  >
  :
  I@008/0383
  $for
  {
    !OF I@009/0384
    object
    :
    I@017/0384
    _Identifier
  }
}
{
  !Ou I@008/0387
  _ObjField
  <
    I@019/0387
    $type
    :_ObjFieldType
  >
  :
  I@007/0388
  _Aliased
  {
    !OF I@007/0389
    type
    :
    I@014/0389
    $type
  }
}
{
  !Ou I@008/0392
  _ObjFieldType
  :
  I@007/0393
  _ObjBase
  {
    !OF I@009/0394
    modifiers
    :
    I@020/0394
    _Modifiers
    []
  }
  |
  I@007/0395
  _ObjFieldEnum
}
{
  !Ou I@008/0398
  _ObjFieldEnum
  :
  I@007/0399
  _TypeRef
  <
    I@016/0399
    _TypeKind.Enum
  >
  {
    !OF I@009/0400
    label
    :
    I@016/0400
    _Identifier
  }
}
{
  !Ou I@008/0403
  _ForParam
  <
    I@019/0403
    $type
    :_ObjFieldType
  >
  |
  I@007/0404
  _ObjAlternate
  I@007/0405
  _ObjField
  <
    I@018/0405
    $type
  >
}
{
  !Ou I@008/0408
  _DualField
  :
  I@007/0409
  _ObjField
  <
    I@017/0409
    _ObjFieldType
  >
}
{
  !Ou I@008/0412
  _InputField
  :
  I@007/0413
  _ObjField
  <
    I@017/0413
    _InputFieldType
  >
}
{
  !Ou I@008/0416
  _InputFieldType
  :
  I@007/0417
  _ObjFieldType
  {
    !OF I@009/0418
    default
    :
    I@018/0418
    Value
    ?
  }
}
{
  !Ou I@008/0421
  _InputParam
  :
  I@007/0422
  _InputFieldType
}
{
  !Ou I@008/0425
  _OutputField
  :
  I@007/0426
  _ObjField
  <
    I@017/0426
    _ObjFieldType
  >
}
{
  !Ou I@008/0429
  _OutputFieldType
  :
  I@007/0430
  _ObjFieldType
  {
    !OF I@009/0431
    parameters
    :
    I@021/0431
    _InputParam
    []
  }
}