// bad-parse

// unique-types
enum Test { Value }
output Test { }

// unique-type-alias
enum Test [a] { Value }
output Dup [a] { }

// category-no-output
category { Test }

// category-duplicate
category { Test }
category test { Output }
output Test { }
output Output { }

// category-dup-alias
category [a] { Test }
category [a] { Output }
output Test { }
output Output { }

// category-diff-mods
category { Test }
category { Test? }
output Test { }

// directive-diff-option
directive @Test { all }
directive @Test { ( repeatable ) all }

// directive-no-param
directive @Test(Test) { all }

// directive-diff-parameter
directive @Test(Test) { all }
directive @Test(Test?) { all }
input Test { }

// enum-dup-alias
enum Test [a] { test }
enum Dup [a] { dup }

// enum-extends-diff
enum Test { : Extends test }
enum Test { test }
enum Extends { extends }

// enum-extends-undef
enum Test { : Extends test }

// enum-extends-wrong
enum Test { : Extends test }
output Extends { }

// scalar-dup-alias
scalar Test [a] { Boolean }
scalar Dup [a] { Boolean }

// scalar-extends-undef
scalar Test { Boolean : Extends }

// scalar-extends-wrong-type
scalar Test { Boolean : Extends }
output Extends { }

// scalar-extends-wrong-kind
scalar Test { Boolean : Extends }
scalar Extends { String }

// scalar-extends-self
scalar Test { Boolean : Test }

// scalar-extends-self-parent
scalar Test { Boolean : Extends }
scalar Extends { Boolean : Test }

// scalar-extends-self-recurse
scalar Test { Boolean : Extends }
scalar Extends { Boolean : Recurse }
scalar Recurse { Boolean : Test}

// scalar-extends-wrong-kind
scalar Test { Boolean : Extends }
scalar Extends { String }

// scalar-diff-kind
scalar Test { string }
scalar Test { number }

// scalar-string-diff
scalar Test { string /a+/}
scalar Test { string !/a+/ }

// scalar-union-recurse
scalar Test { union | Bad }
scalar Bad { union | Test }

// scalar-union-more
scalar Test { union | Recurse }
scalar Recurse { union | Bad }
scalar Bad { union | Test }

// scalar-union-self
scalar Test { union | Test }

// scalar-union-undef
scalar Test { union | Bad }

// scalar-union-wrong
scalar Test { union | Bad }
input Bad { }
