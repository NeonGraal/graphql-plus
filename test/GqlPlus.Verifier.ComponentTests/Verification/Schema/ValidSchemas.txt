// category-output
category { Cat } output Cat { }

// directive-param
directive @DirParam(DirParamIn) { all }
input DirParamIn { }

// enum-parent
enum EnExt { :EnExtBase valExt }
enum EnExtBase { valBase }

// enum-parent-alias
enum EnExtAlias { :EnExtAliasBase valExt valBase[base] }
enum EnExtAliasBase { valBase }

// enum-parent-dup
enum EnExtDup { :EnExtDupBase valExt  }
enum EnExtDupBase { valBase[valExt] }

// scalar-parent
scalar ScalExt { :ScalExtBase Boolean }
scalar ScalExtBase { Boolean }

// scalar-enum-value
scalar ScalEnum { Enum EnumScal.scal_enum }
enum EnumScal { scal_enum }

// scalar-enum-value-parent
scalar ScalEnumParent { Enum EnumScalParent.scal_enum }
enum EnumScalParent { :EnumParentScal scal_parent } 
enum EnumParentScal { scal_enum }

// scalar-enum-member
scalar ScalMember { enum scal_member }
enum MemberScal { scal_member }

// scalar-enum-all
scalar ScalEnumAll { enum EnumScalAll.* }
enum EnumScalAll { scal_all scal_enum_all }

// scalar-enum-all-parent
scalar ScalEnumAllParent { enum EnumScalAllParent.* }
enum EnumScalAllParent { :EnumScalParentAll scal_all }
enum EnumScalParentAll { scal_enum_all }

// scalar-enum-unique
scalar ScalEnumUnique { enum EnumScalUnique.* !EnumScalUnique.dup EnumScalDup.dup }
enum EnumScalUnique { value dup }
enum EnumScalDup { dup }

// scalar-enum-unique-parent
scalar ScalEnumUniqueParent { enum EnumScalUniqueParent.* !EnumScalUniqueParent.dup EnumScalDupParent.dup }
enum EnumScalUniqueParent { :EnumScalParentUnique value }
enum EnumScalParentUnique { dup }
enum EnumScalDupParent { dup }
