!_Schema
types: !_Map_Type
  !_Identifier AltDualCnstFieldDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        dual: String
        object: PrntDualCnstFieldDual
    allFields:
      - !_ObjectFor(_DualField)
        name: alt
        object: AltDualCnstFieldDual
        type: !_DualBase
          dual: Number
    fields:
      - !_DualField
        name: alt
        type: !_DualBase
          dual: Number
    name: AltDualCnstFieldDual
    parent: !_DualBase
      dual: PrntDualCnstFieldDual
    typeKind: !_TypeKind Dual
  !_Identifier DualCnstFieldDual: !_TypeDual
    allFields:
      - !_ObjectFor(_DualField)
        name: field
        object: RefDualCnstFieldDual
        type: !_DualBase
          dual: AltDualCnstFieldDual
    name: DualCnstFieldDual
    parent: !_DualBase
      dual: RefDualCnstFieldDual
      typeArgs:
        - !_DualArg
          dual: AltDualCnstFieldDual
    typeKind: !_TypeKind Dual
  !_Identifier PrntDualCnstFieldDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        dual: String
        object: PrntDualCnstFieldDual
    alternates:
      - !_DualAlternate
        dual: String
    name: PrntDualCnstFieldDual
    typeKind: !_TypeKind Dual
  !_Identifier RefDualCnstFieldDual: !_TypeDual
    allFields:
      - !_ObjectFor(_DualField)
        name: field
        object: RefDualCnstFieldDual
        type: !_DualBase
          typeParam: ref
    fields:
      - !_DualField
        name: field
        type: !_DualBase
          typeParam: ref
    name: RefDualCnstFieldDual
    typeKind: !_TypeKind Dual
    typeParams:
      - !_Named
        name: ref