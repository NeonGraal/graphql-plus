!_Schema
aliases: [Opt1, Opt2]
categories: !_Map_Categories
  !_Identifier catAlias: !_Category
    aliases: [CatA1, CatA2]
    name: catAlias
    output: !_TypeRef(_TypeKind)
      kind: !_TypeKind Output
      name: CatAlias
    resolution: !_Resolution Parallel
  !_Identifier catMods: !_Category
    aliases: [CatM1, CatM2]
    modifiers: [!_Modifier Optional]
    name: catMods
    output: !_TypeRef(_TypeKind)
      kind: !_TypeKind Output
      name: CatMods
    resolution: !_Resolution Parallel
  !_Identifier category: !_Category
    name: category
    output: !_TypeRef(_TypeKind)
      kind: !_TypeKind Output
      name: Category
    resolution: !_Resolution Parallel
directives: !_Map_Directives
  !_Identifier Dir: !_Directive
    locations: !_Set(_Location) {Inline: _, Spread: _}
    name: Dir
    repeatable: false
  !_Identifier DirAlias: !_Directive
    aliases: [DirA1, DirA2]
    locations: !_Set(_Location) {Field: _, Variable: _}
    name: DirAlias
    repeatable: false
  !_Identifier DirParams: !_Directive
    locations: !_Set(_Location) {Fragment: _, Operation: _}
    name: DirParams
    parameters:
    - !_Parameter
      type: !_InputBase DirParamsIn
    repeatable: false
name: Schema
settings: !_Map_Setting
  !_Identifier setting: !_Setting
    name: setting
    value:
    - true
    - 0
types: !_Map_Type
  !_Identifier CatAlias: !_TypeOutput
    kind: !_TypeKind Output
    name: CatAlias
  !_Identifier CatMods: !_TypeOutput
    kind: !_TypeKind Output
    name: CatMods
  !_Identifier Category: !_TypeOutput
    kind: !_TypeKind Output
    name: Category
  !_Identifier DirParamsIn: !_TypeInput
    kind: !_TypeKind Input
    name: DirParamsIn
  !_Identifier Dual: !_TypeDual
    kind: !_TypeKind Dual
    name: Dual
  !_Identifier DualAlias: !_TypeDual
    aliases: [Dual1, Dual2]
    kind: !_TypeKind Dual
    name: DualAlias
  !_Identifier DualAlts: !_TypeDual
    allAlternates:
    - !_ObjectFor(_Alternate(_DualBase))
      object: DualAlts
      type: !_DualBase DualAltsType
    alternates:
    - !_Alternate(_DualBase)
      type: !_DualBase DualAltsType
    kind: !_TypeKind Dual
    name: DualAlts
  !_Identifier DualAltsType: !_TypeDual
    kind: !_TypeKind Dual
    name: DualAltsType
  !_Identifier DualFieldAlias: !_TypeDual
    allFields:
    - !_ObjectFor(_DualField)
      name: field
      object: DualFieldAlias
      type: !_DualBase DualFieldAlias
    fields:
    - !_DualField
      name: field
      type: !_DualBase DualFieldAlias
    kind: !_TypeKind Dual
    name: DualFieldAlias
  !_Identifier DualFields: !_TypeDual
    allFields:
    - !_ObjectFor(_DualField)
      name: field
      object: DualFields
      type: !_DualBase DualFields
    fields:
    - !_DualField
      name: field
      type: !_DualBase DualFields
    kind: !_TypeKind Dual
    name: DualFields
  !_Identifier DualParams: !_TypeDual
    allFields:
    - !_ObjectFor(_DualField)
      name: test
      object: DualParams
      type: test
    - !_ObjectFor(_DualField)
      name: type
      object: DualParams
      type: type
    fields:
    - !_DualField
      name: test
      type: test
    - !_DualField
      name: type
      type: type
    kind: !_TypeKind Dual
    name: DualParams
  !_Identifier DualPrnt: !_TypeDual
    kind: !_TypeKind Dual
    name: DualPrnt
    parent: !_DualBase PrntDual
  !_Identifier EnAlias: !_TypeEnum
    aliases: [En1, En2]
    allItems:
    - !_EnumMember
      enum: EnAlias
      name: alias
    items:
    - !_Aliased alias
    kind: !_TypeKind Enum
    name: EnAlias
  !_Identifier EnDiff: !_TypeEnum
    allItems:
    - !_EnumMember
      enum: EnDiff
      name: one
    - !_EnumMember
      enum: EnDiff
      name: two
    items:
    - !_Aliased one
    - !_Aliased two
    kind: !_TypeKind Enum
    name: EnDiff
  !_Identifier EnParent: !_TypeEnum
    allItems:
    - !_EnumMember
      enum: EnParent
      name: parent
    items:
    - !_Aliased parent
    kind: !_TypeKind Enum
    name: EnParent
  !_Identifier EnSame: !_TypeEnum
    allItems:
    - !_EnumMember
      enum: EnSame
      name: same
    items:
    - !_Aliased same
    kind: !_TypeKind Enum
    name: EnSame
  !_Identifier EnSameParent: !_TypeEnum
    allItems:
    - !_EnumMember
      enum: EnSameParent
      name: sameP
    items:
    - !_Aliased sameP
    kind: !_TypeKind Enum
    name: EnSameParent
    parent: !_TypeRef(_SimpleKind)
      kind: !_SimpleKind Enum
      name: EnParent
  !_Identifier EnValAlias: !_TypeEnum
    allItems:
    - !_EnumMember
      aliases: [val1, val2]
      enum: EnValAlias
      name: value
    items:
    - !_Aliased
      aliases: [val1, val2]
      name: value
    kind: !_TypeKind Enum
    name: EnValAlias
  !_Identifier FieldEnumAlias: !_TypeOutput
    allFields:
    - !_ObjectFor(_OutputField)
      field: field
      kind: !_SimpleKind Enum
      name: Boolean
      object: FieldEnumAlias
      value: true
    fields:
    - !_OutputEnum
      field: field
      kind: !_SimpleKind Enum
      name: Boolean
      value: true
    kind: !_TypeKind Output
    name: FieldEnumAlias
  !_Identifier FieldEnums: !_TypeOutput
    allFields:
    - !_ObjectFor(_OutputField)
      field: field
      kind: !_SimpleKind Enum
      name: Boolean
      object: FieldEnums
      value: true
    fields:
    - !_OutputEnum
      field: field
      kind: !_SimpleKind Enum
      name: Boolean
      value: true
    kind: !_TypeKind Output
    name: FieldEnums
  !_Identifier FieldParam1: !_TypeInput
    kind: !_TypeKind Input
    name: FieldParam1
  !_Identifier FieldParam2: !_TypeInput
    kind: !_TypeKind Input
    name: FieldParam2
  !_Identifier FieldParams: !_TypeOutput
    allFields:
    - !_ObjectFor(_OutputField)
      name: field
      object: FieldParams
      parameters:
      - !_Parameter
        type: !_InputBase FieldParam1
      - !_Parameter
        type: !_InputBase FieldParam2
      type: !_OutputBase FieldParams
    fields:
    - !_OutputField
      name: field
      parameters:
      - !_Parameter
        type: !_InputBase FieldParam1
      - !_Parameter
        type: !_InputBase FieldParam2
      type: !_OutputBase FieldParams
    kind: !_TypeKind Output
    name: FieldParams
  !_Identifier InP: !_TypeInput
    kind: !_TypeKind Input
    name: InP
  !_Identifier InPAlias: !_TypeInput
    aliases: [InP1, InP2]
    kind: !_TypeKind Input
    name: InPAlias
  !_Identifier InPAlts: !_TypeInput
    allAlternates:
    - !_ObjectFor(_Alternate(_InputBase))
      object: InPAlts
      type: !_InputBase InPAltsType
    alternates:
    - !_Alternate(_InputBase)
      type: !_InputBase InPAltsType
    kind: !_TypeKind Input
    name: InPAlts
  !_Identifier InPAltsType: !_TypeInput
    kind: !_TypeKind Input
    name: InPAltsType
  !_Identifier InPFieldAlias: !_TypeInput
    allFields:
    - !_ObjectFor(_InputField)
      name: field
      object: InPFieldAlias
      type: !_InputBase InPFieldAlias
    fields:
    - !_InputField
      name: field
      type: !_InputBase InPFieldAlias
    kind: !_TypeKind Input
    name: InPFieldAlias
  !_Identifier InPFields: !_TypeInput
    allFields:
    - !_ObjectFor(_InputField)
      name: field
      object: InPFields
      type: !_InputBase InPFields
    fields:
    - !_InputField
      name: field
      type: !_InputBase InPFields
    kind: !_TypeKind Input
    name: InPFields
  !_Identifier InPParams: !_TypeInput
    allFields:
    - !_ObjectFor(_InputField)
      name: test
      object: InPParams
      type: test
    - !_ObjectFor(_InputField)
      name: type
      object: InPParams
      type: type
    fields:
    - !_InputField
      name: test
      type: test
    - !_InputField
      name: type
      type: type
    kind: !_TypeKind Input
    name: InPParams
  !_Identifier InPPrnt: !_TypeInput
    kind: !_TypeKind Input
    name: InPPrnt
    parent: !_InputBase PrntInP
  !_Identifier Num: !_ScalarNumber
    kind: !_TypeKind Scalar
    name: Num
    scalar: !_ScalarKind Number
  !_Identifier NumAlias: !_ScalarNumber
    aliases: [Num1, Num2]
    kind: !_TypeKind Scalar
    name: NumAlias
    scalar: !_ScalarKind Number
  !_Identifier NumDiff: !_ScalarNumber
    allItems:
    - !_ScalarItem(_ScalarRange)
      exclude: false
      from: 1
      scalar: NumDiff
      to: 9
    items:
    - !_ScalarRange
      exclude: false
      from: 1
      to: 9
    kind: !_TypeKind Scalar
    name: NumDiff
    scalar: !_ScalarKind Number
  !_Identifier NumSame: !_ScalarNumber
    allItems:
    - !_ScalarItem(_ScalarRange)
      exclude: false
      from: 1
      scalar: NumSame
      to: 9
    items:
    - !_ScalarRange
      exclude: false
      from: 1
      to: 9
    kind: !_TypeKind Scalar
    name: NumSame
    scalar: !_ScalarKind Number
  !_Identifier OutP: !_TypeOutput
    kind: !_TypeKind Output
    name: OutP
  !_Identifier OutPAlias: !_TypeOutput
    aliases: [OutP1, OutP2]
    kind: !_TypeKind Output
    name: OutPAlias
  !_Identifier OutPAlts: !_TypeOutput
    allAlternates:
    - !_ObjectFor(_Alternate(_OutputBase))
      object: OutPAlts
      type: !_OutputBase OutPAltsType
    alternates:
    - !_Alternate(_OutputBase)
      type: !_OutputBase OutPAltsType
    kind: !_TypeKind Output
    name: OutPAlts
  !_Identifier OutPAltsType: !_TypeOutput
    kind: !_TypeKind Output
    name: OutPAltsType
  !_Identifier OutPFieldAlias: !_TypeOutput
    allFields:
    - !_ObjectFor(_OutputField)
      name: field
      object: OutPFieldAlias
      type: !_OutputBase OutPFieldAlias
    fields:
    - !_OutputField
      name: field
      type: !_OutputBase OutPFieldAlias
    kind: !_TypeKind Output
    name: OutPFieldAlias
  !_Identifier OutPFields: !_TypeOutput
    allFields:
    - !_ObjectFor(_OutputField)
      name: field
      object: OutPFields
      type: !_OutputBase OutPFields
    fields:
    - !_OutputField
      name: field
      type: !_OutputBase OutPFields
    kind: !_TypeKind Output
    name: OutPFields
  !_Identifier OutPParams: !_TypeOutput
    allFields:
    - !_ObjectFor(_OutputField)
      name: test
      object: OutPParams
      type: test
    - !_ObjectFor(_OutputField)
      name: type
      object: OutPParams
      type: type
    fields:
    - !_OutputField
      name: test
      type: test
    - !_OutputField
      name: type
      type: type
    kind: !_TypeKind Output
    name: OutPParams
  !_Identifier OutPPrnt: !_TypeOutput
    kind: !_TypeKind Output
    name: OutPPrnt
    parent: !_OutputBase PrntOutP
  !_Identifier PrntDual: !_TypeDual
    kind: !_TypeKind Dual
    name: PrntDual
  !_Identifier PrntInP: !_TypeInput
    kind: !_TypeKind Input
    name: PrntInP
  !_Identifier PrntOutP: !_TypeOutput
    kind: !_TypeKind Output
    name: PrntOutP
  !_Identifier Str: !_ScalarString
    kind: !_TypeKind Scalar
    name: Str
    scalar: !_ScalarKind String
  !_Identifier StrDiff: !_ScalarString
    allItems:
    - !_ScalarItem(_ScalarRegex)
      exclude: false
      regex: a+
      scalar: StrDiff
    items:
    - !_ScalarRegex
      exclude: false
      regex: a+
    kind: !_TypeKind Scalar
    name: StrDiff
    scalar: !_ScalarKind String
  !_Identifier StrSame: !_ScalarString
    allItems:
    - !_ScalarItem(_ScalarRegex)
      exclude: false
      regex: a+
      scalar: StrSame
    items:
    - !_ScalarRegex
      exclude: false
      regex: a+
    kind: !_TypeKind Scalar
    name: StrSame
    scalar: !_ScalarKind String
  !_Identifier UnDiff: !_TypeUnion
    allItems:
    - !_UnionMember
      name: Boolean
      union: UnDiff
    - !_UnionMember
      name: Number
      union: UnDiff
    items:
    - !_Aliased Boolean
    - !_Aliased Number
    kind: !_TypeKind Union
    name: UnDiff
  !_Identifier UnSame: !_TypeUnion
    allItems:
    - !_UnionMember
      name: Boolean
      union: UnSame
    items:
    - !_Aliased Boolean
    kind: !_TypeKind Union
    name: UnSame
