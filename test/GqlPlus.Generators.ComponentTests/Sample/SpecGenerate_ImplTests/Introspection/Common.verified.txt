/* Common
output _Type {
    | _BaseType<_TypeKind.Basic>
    | _BaseType<_TypeKind.Internal>
    | _BaseDomain<_DomainKind.Boolean _DomainTrueFalse _DomainItemTrueFalse>
    | _BaseDomain<_DomainKind.Enum _DomainLabel _DomainItemLabel>
    | _BaseDomain<_DomainKind.Number _DomainRange _DomainItemRange>
    | _BaseDomain<_DomainKind.String _DomainRegex _DomainItemRegex>
    | _ParentType<_TypeKind.Enum _Aliased _EnumLabel>
    | _ParentType<_TypeKind.Union _UnionRef _UnionMember>
    | _TypeObject<_TypeKind.Dual _DualField>
    | _TypeObject<_TypeKind.Input _InputField>
    | _TypeObject<_TypeKind.Output _OutputField>
    }

output _BaseType<$kind:_TypeKind> {
    : _Aliased
        typeKind: $kind
    }

output _ChildType<$kind:_TypeKind $parent:_Described> {
    : _BaseType<$kind>
        parent: $parent
    }

output _ParentType<$kind:_TypeKind $item:_Described $allItem:_Described> {
    : _ChildType<$kind _Named>
        items: $item[]
        allItems: $allItem[]
    }

enum _SimpleKind { Basic Enum Internal Domain Union }

enum _TypeKind { :_SimpleKind Dual Input Output }

dual _TypeRef<$kind:_TypeKind> {
    : _Named
        typeKind: $kind
}

dual _TypeSimple {
    | _TypeRef<_TypeKind.Basic>
    | _TypeRef<_TypeKind.Enum>
    | _TypeRef<_TypeKind.Domain>
    | _TypeRef<_TypeKind.Union>
    }
*/

// Generated from Spec Common for Impl

/*
*/
namespace Components.Gqlp_Spec_Common;

public class Cmpt_Type
  : ICmpt_Type
{
  public _BaseType<_TypeKind> As_BaseType { get; set; }
  public _BaseType<_TypeKind> As_BaseType { get; set; }
  public _BaseDomain<_DomainKind, _DomainTrueFalse, _DomainItemTrueFalse> As_BaseDomain { get; set; }
  public _BaseDomain<_DomainKind, _DomainLabel, _DomainItemLabel> As_BaseDomain { get; set; }
  public _BaseDomain<_DomainKind, _DomainRange, _DomainItemRange> As_BaseDomain { get; set; }
  public _BaseDomain<_DomainKind, _DomainRegex, _DomainItemRegex> As_BaseDomain { get; set; }
  public _ParentType<_TypeKind, _Aliased, _EnumLabel> As_ParentType { get; set; }
  public _ParentType<_TypeKind, _UnionRef, _UnionMember> As_ParentType { get; set; }
  public _TypeObject<_TypeKind, _DualField> As_TypeObject { get; set; }
  public _TypeObject<_TypeKind, _InputField> As_TypeObject { get; set; }
  public _TypeObject<_TypeKind, _OutputField> As_TypeObject { get; set; }
}

public class Cmpt_BaseType<Tkind>
  : Cmpt_Aliased
  , ICmpt_BaseType<Tkind>
{
  public Tkind typeKind { get; set; }
}

public class Cmpt_ChildType<Tkind,Tparent>
  : Cmpt_BaseType
  , ICmpt_ChildType<Tkind,Tparent>
{
  public Tparent parent { get; set; }
}

public class Cmpt_ParentType<Tkind,Titem,TallItem>
  : Cmpt_ChildType
  , ICmpt_ParentType<Tkind,Titem,TallItem>
{
  public Titem items { get; set; }
  public TallItem allItems { get; set; }
}

public class Cmpt_TypeRef<Tkind>
  : Cmpt_Named
  , ICmpt_TypeRef<Tkind>
{
  public Tkind typeKind { get; set; }
}

public class Cmpt_TypeSimple
  : ICmpt_TypeSimple
{
  public _TypeRef<_TypeKind> As_TypeRef { get; set; }
  public _TypeRef<_TypeKind> As_TypeRef { get; set; }
  public _TypeRef<_TypeKind> As_TypeRef { get; set; }
  public _TypeRef<_TypeKind> As_TypeRef { get; set; }
}