enum _DomainKind { Boolean Enum Number String }

output _TypeDomain {
    | _BaseDomain<_DomainKind.Boolean _DomainTrueFalse>
    | _BaseDomain<_DomainKind.Enum _DomainMember>
    | _BaseDomain<_DomainKind.Number _DomainRange>
    | _BaseDomain<_DomainKind.String _DomainRegex>
    }

output _DomainRef<$kind> {
    : _TypeRef<_TypeKind.Domain>
        domainKind: $kind
    }

output _BaseDomain<$domain $item> {
    : _ParentType<_TypeKind.Domain $item _DomainItem<$item>>
        domain: $domain
    }

dual _BaseDomainItem {
        exclude: Boolean
    }

dual _DomainTrueFalse {
    : _BaseDomainItem
        value: Boolean
    }

output _DomainMember {
    : _BaseDomainItem
        member: _EnumValue
    }

dual _DomainRange {
    : _BaseDomainItem
        lower: Number?
        upper: Number?
    }

dual _DomainRegex {
    : _BaseDomainItem
        pattern: String
    }

dual _DomainItem<$item> {
    : $item
        domain: _Identifier
    }

output _DomainValue<$kind $value> {
    : _DomainRef<$kind>
        value: $value
    }
