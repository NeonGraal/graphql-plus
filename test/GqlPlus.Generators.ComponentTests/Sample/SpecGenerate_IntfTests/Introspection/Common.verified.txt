/* Common
output _Type {
    | _BaseType<_TypeKind.Basic>
    | _BaseType<_TypeKind.Internal>
    | _BaseDomain<_DomainKind.Boolean _DomainTrueFalse _DomainItemTrueFalse>
    | _BaseDomain<_DomainKind.Enum _DomainLabel _DomainItemLabel>
    | _BaseDomain<_DomainKind.Number _DomainRange _DomainItemRange>
    | _BaseDomain<_DomainKind.String _DomainRegex _DomainItemRegex>
    | _ParentType<_TypeKind.Enum _Aliased _EnumLabel>
    | _ParentType<_TypeKind.Union _UnionRef _UnionMember>
    | _TypeObject<_TypeKind.Dual _DualField>
    | _TypeObject<_TypeKind.Input _InputField>
    | _TypeObject<_TypeKind.Output _OutputField>
    }

output _BaseType<$kind:_TypeKind> {
    : _Aliased
        typeKind: $kind
    }

output _ChildType<$kind:_TypeKind $parent:_Described> {
    : _BaseType<$kind>
        parent: $parent
    }

output _ParentType<$kind:_TypeKind $item:_Described $allItem:_Described> {
    : _ChildType<$kind _Named>
        items: $item[]
        allItems: $allItem[]
    }

enum _SimpleKind { Basic Enum Internal Domain Union }

enum _TypeKind { :_SimpleKind Dual Input Output }

dual _TypeRef<$kind:_TypeKind> {
    : _Named
        typeKind: $kind
}

dual _TypeSimple {
    | _TypeRef<_TypeKind.Basic>
    | _TypeRef<_TypeKind.Enum>
    | _TypeRef<_TypeKind.Domain>
    | _TypeRef<_TypeKind.Union>
    }
*/

// Generated from Spec Common for Intf

/*
*/
namespace Components.Gqlp_Spec_Common;

public interface ICmpt_Type
{
  _BaseType<_TypeKind> As_BaseType { get; }
  _BaseType<_TypeKind> As_BaseType { get; }
  _BaseDomain<_DomainKind, _DomainTrueFalse, _DomainItemTrueFalse> As_BaseDomain { get; }
  _BaseDomain<_DomainKind, _DomainLabel, _DomainItemLabel> As_BaseDomain { get; }
  _BaseDomain<_DomainKind, _DomainRange, _DomainItemRange> As_BaseDomain { get; }
  _BaseDomain<_DomainKind, _DomainRegex, _DomainItemRegex> As_BaseDomain { get; }
  _ParentType<_TypeKind, _Aliased, _EnumLabel> As_ParentType { get; }
  _ParentType<_TypeKind, _UnionRef, _UnionMember> As_ParentType { get; }
  _TypeObject<_TypeKind, _DualField> As_TypeObject { get; }
  _TypeObject<_TypeKind, _InputField> As_TypeObject { get; }
  _TypeObject<_TypeKind, _OutputField> As_TypeObject { get; }
}

public interface ICmpt_BaseType<Tkind>
  : ICmpt_Aliased
{
  Tkind typeKind { get; }
}

public interface ICmpt_ChildType<Tkind,Tparent>
  : ICmpt_BaseType
{
  Tparent parent { get; }
}

public interface ICmpt_ParentType<Tkind,Titem,TallItem>
  : ICmpt_ChildType
{
  Titem items { get; }
  TallItem allItems { get; }
}

public interface ICmpt_TypeRef<Tkind>
  : ICmpt_Named
{
  Tkind typeKind { get; }
}

public interface ICmpt_TypeSimple
{
  _TypeRef<_TypeKind> As_TypeRef { get; }
  _TypeRef<_TypeKind> As_TypeRef { get; }
  _TypeRef<_TypeKind> As_TypeRef { get; }
  _TypeRef<_TypeKind> As_TypeRef { get; }
}