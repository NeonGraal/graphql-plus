<?xml version="1.0" encoding="utf-8"?>
<CodeSnippets xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
  <CodeSnippet Format="1.0.0">
    <Header>
      <Title>Default Ast Tests for Property</Title>
      <Author>SLJ</Author>
      <Shortcut>astproptest</Shortcut>
    </Header>
    <Snippet>
      <Code Language="CSharp">
        <![CDATA[
[Theory, RepeatData(Repeats)]
  public void HashCode_With$Property$(string name, $Type$ $Param$)
    => _checks.HashCode(
      () => new $Ast$(AstNulls.At, name) { $Property$ = $Param$ });

  [Theory, RepeatData(Repeats)]
  public void String_With$Property$(string name, $Type$ $Param$)
    => _checks.String(
      () => new $Ast$(AstNulls.At, name) { $Property$ = $Param$ },
      $$"( !$end$ {name} {$Param$} )");

  [Theory, RepeatData(Repeats)]
  public void Equality_With$Property$(string name, $Type$ $Param$)
    => _checks.Equality(
      () => new $Ast$(AstNulls.At, name) { $Property$ = $Param$ });

  [Theory, RepeatData(Repeats)]
  public void Inequality_Between$Property$s(string name, $Type$ $Param$1, $Type$ $Param$2)
    => _checks.InequalityBetween($Param$1, $Param$2,
      $Param$ => new $Ast$(AstNulls.At, name) { $Property$ = $Param$ },
      $Param$1 == $Param$2);
]]>
      </Code>
      <Declarations>
        <Literal Editable="true">
          <ID>Ast</ID>
          <Default>ast</Default>
        </Literal>
        <Literal Editable="true">
          <ID>Property</ID>
          <Default>Prop</Default>
        </Literal>
        <Literal Editable="true">
          <ID>Type</ID>
          <Default>string</Default>
        </Literal>
        <Literal Editable="true">
          <ID>Param</ID>
          <Default>prop</Default>
        </Literal>
      </Declarations>
    </Snippet>
  </CodeSnippet>
</CodeSnippets>