/* -Type
output _Type {
    | _BaseType<_TypeKind.Basic>
    | _BaseType<_TypeKind.Internal>
    | _TypeDual
    | _TypeEnum
    | _TypeInput
    | _TypeOutput
    | _TypeDomain
    | _TypeUnion
    }

output _BaseType<$kind:_TypeKind> {
    : _Aliased
        typeKind: $kind
    }

output _ChildType<$kind:_TypeKind $parent:_Described> {
    : _BaseType<$kind>
        parent: $parent
    }

output _ParentType<$kind:_TypeKind $item:_Described $allItem:_Described> {
    : _ChildType<$kind _Named>
        items: $item[]
        allItems: $allItem[]
    }

enum _SimpleKind { Basic Enum Internal Domain Union }

enum _TypeKind { :_SimpleKind Dual Input Output }

dual _TypeRef<$kind:_TypeKind> {
    : _Named
        typeKind: $kind
}

dual _TypeSimple {
    | _TypeRef<_TypeKind.Basic>
    | _TypeRef<_TypeKind.Enum>
    | _TypeRef<_TypeKind.Domain>
    | _TypeRef<_TypeKind.Union>
    }

dual _Collections {
    | _Modifier<_ModifierKind.List>
    | _ModifierKeyed<_ModifierKind.Dictionary>
    | _ModifierKeyed<_ModifierKind.TypeParam>
    }

dual _ModifierKeyed<$kind:_ModifierKind> {
    : _Modifier<$kind>
        by: _TypeSimple
        optional: Boolean
    }

dual _Modifiers {
    | _Modifier<_ModifierKind.Optional>
    | _Collections
    }

enum _ModifierKind { Opt[Optional] List Dict[Dictionary] Param[TypeParam] }

dual _Modifier<$kind:_ModifierKind> {
        modifierKind: $kind
    }
*/

// Generated from Spec -Type for Intf

/*
*/
namespace Components.Gqlp_Spec_Type;

public interface ICmpt_Type
{
  _BaseType<_TypeKind> As_BaseType { get; }
  _BaseType<_TypeKind> As_BaseType { get; }
  _TypeDual As_TypeDual { get; }
  _TypeEnum As_TypeEnum { get; }
  _TypeInput As_TypeInput { get; }
  _TypeOutput As_TypeOutput { get; }
  _TypeDomain As_TypeDomain { get; }
  _TypeUnion As_TypeUnion { get; }
}

public interface ICmpt_BaseType<Tkind>
  : ICmpt_Aliased
{
  Tkind typeKind { get; }
}

public interface ICmpt_ChildType<Tkind,Tparent>
  : ICmpt_BaseType
{
  Tparent parent { get; }
}

public interface ICmpt_ParentType<Tkind,Titem,TallItem>
  : ICmpt_ChildType
{
  Titem items { get; }
  TallItem allItems { get; }
}

public interface ICmpt_TypeRef<Tkind>
  : ICmpt_Named
{
  Tkind typeKind { get; }
}

public interface ICmpt_TypeSimple
{
  _TypeRef<_TypeKind> As_TypeRef { get; }
  _TypeRef<_TypeKind> As_TypeRef { get; }
  _TypeRef<_TypeKind> As_TypeRef { get; }
  _TypeRef<_TypeKind> As_TypeRef { get; }
}

public interface ICmpt_Collections
{
  _Modifier<_ModifierKind> As_Modifier { get; }
  _ModifierKeyed<_ModifierKind> As_ModifierKeyed { get; }
  _ModifierKeyed<_ModifierKind> As_ModifierKeyed { get; }
}

public interface ICmpt_ModifierKeyed<Tkind>
  : ICmpt_Modifier
{
  _TypeSimple by { get; }
  Boolean optional { get; }
}

public interface ICmpt_Modifiers
{
  _Modifier<_ModifierKind> As_Modifier { get; }
  _Collections As_Collections { get; }
}

public interface ICmpt_Modifier<Tkind>
{
  Tkind modifierKind { get; }
}