!_Schema
types: !_Map_Type
  !_Identifier DualCnstFieldObj: !_TypeDual
    allFields:
    - !_ObjectFor(_DualField)
      name: field
      object: DualCnstFieldObjRef
      type: !_DualBase
        dual: DualCnstFieldObjAlt
    name: DualCnstFieldObj
    parent: !_DualBase
      dual: DualCnstFieldObjRef
      typeArgs:
      - !_DualArg
        dual: DualCnstFieldObjAlt
    typeKind: !_TypeKind Dual
  !_Identifier DualCnstFieldObjAlt: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: DualCnstFieldObjParent
      type: !_DualBase
        dual: String
    allFields:
    - !_ObjectFor(_DualField)
      name: alt
      object: DualCnstFieldObjAlt
      type: !_DualBase
        dual: Number
    fields:
    - !_DualField
      name: alt
      type: !_DualBase
        dual: Number
    name: DualCnstFieldObjAlt
    parent: !_DualBase
      dual: DualCnstFieldObjParent
    typeKind: !_TypeKind Dual
  !_Identifier DualCnstFieldObjParent: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: DualCnstFieldObjParent
      type: !_DualBase
        dual: String
    alternates:
    - !_DualAlternate
      type: !_DualBase
        dual: String
    name: DualCnstFieldObjParent
    typeKind: !_TypeKind Dual
  !_Identifier DualCnstFieldObjRef: !_TypeDual
    allFields:
    - !_ObjectFor(_DualField)
      name: field
      object: DualCnstFieldObjRef
      type: !_TypeParam ref
    fields:
    - !_DualField
      name: field
      type: !_TypeParam ref
    name: DualCnstFieldObjRef
    typeKind: !_TypeKind Dual
    typeParams:
    - !_Described
      name: ref