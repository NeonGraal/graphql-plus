enum _ScalarDomain { Boolean Enum Number String Union }

output _TypeScalar {
    | _BaseScalar<_ScalarDomain.Boolean _ScalarTrueFalse>
    | _BaseScalar<_ScalarDomain.Enum _ScalarMember>
    | _BaseScalar<_ScalarDomain.Number _ScalarRange>
    | _BaseScalar<_ScalarDomain.String _ScalarRegex>
    }

output _ScalarRef<$kind> {
    : _TypeRef<_TypeKind.Scalar>
        scalar: $kind
    }

output _BaseScalar<$domain $item> {
    : _ParentType<_TypeKind.Scalar $item _ScalarItem<$item>>
        scalar: $domain
    }

dual _BaseScalarItem {
        exclude: Boolean
    }

dual _ScalarTrueFalse {
    : _BaseScalarItem
        value: Boolean
    }

output _ScalarMember {
    : _BaseScalarItem
        member: _EnumValue
    }

dual _ScalarRange {
    : _BaseScalarItem
        from: Number?
        to: Number?
    }

dual _ScalarRegex {
    : _BaseScalarItem
        regex: String
    }

dual _ScalarItem<$item> {
    : $item
        scalar: Identifier
    }

output _ScalarValue<$kind $value> {
    : _ScalarRef<$kind>
        value: $value
    }
