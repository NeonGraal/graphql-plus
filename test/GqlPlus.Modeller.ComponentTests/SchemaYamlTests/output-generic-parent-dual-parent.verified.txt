!_Schema
types: !_Map_Type
  !_Identifier OutpGenParentDualParent: !_TypeOutput
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: OutpGenParentDualParentAlt
      type: !_DualBase
        dual: String
    allFields:
    - !_ObjectFor(_DualField)
      name: alt
      object: OutpGenParentDualParentAlt
      type: !_DualBase
        dual: Number
    name: OutpGenParentDualParent
    parent: !_OutputBase
      output: OutpGenParentDualParentRef
      typeArgs:
      - !_DualArg
        dual: OutpGenParentDualParentAlt
    typeKind: !_TypeKind Output
  !_Identifier OutpGenParentDualParentAlt: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: OutpGenParentDualParentAlt
      type: !_DualBase
        dual: String
    allFields:
    - !_ObjectFor(_DualField)
      name: alt
      object: OutpGenParentDualParentAlt
      type: !_DualBase
        dual: Number
    alternates:
    - !_DualAlternate
      type: !_DualBase
        dual: String
    fields:
    - !_DualField
      name: alt
      type: !_DualBase
        dual: Number
    name: OutpGenParentDualParentAlt
    typeKind: !_TypeKind Dual
  !_Identifier OutpGenParentDualParentRef: !_TypeOutput
    name: OutpGenParentDualParentRef
    parent: !_TypeParam ref
    typeKind: !_TypeKind Output
    typeParams:
    - !_Described
      name: ref