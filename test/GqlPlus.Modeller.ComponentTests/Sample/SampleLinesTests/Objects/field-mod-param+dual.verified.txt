!_Schema
types: !_Map_Type
  !_Identifier DualFieldModParam: !_TypeDual
    allFields:
      - !_ObjectFor(_DualField)
        modifiers: [!_ModifierTypeParam{by:mod,modifierKind:!_ModifierKind Param}]
        name: field
        object: DualFieldModParam
        type: !_DualBase
          dual: FldDualFieldModParam
    fields:
      - !_DualField
        modifiers: [!_ModifierTypeParam{by:mod,modifierKind:!_ModifierKind Param}]
        name: field
        type: !_DualBase
          dual: FldDualFieldModParam
    name: DualFieldModParam
    typeKind: !_TypeKind Dual
    typeParams:
      - !_TypeParam
        constraint: !_TypeRef(_TypeKind)
          typeKind: !_TypeKind Basic
          typeName: '*'
        name: mod
  !_Identifier FldDualFieldModParam: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: FldDualFieldModParam
        type: !_DualBase
          dual: String
    allFields:
      - !_ObjectFor(_DualField)
        name: field
        object: FldDualFieldModParam
        type: !_DualBase
          dual: Number
    alternates:
      - !_DualAlternate
        type: !_DualBase
          dual: String
    fields:
      - !_DualField
        name: field
        type: !_DualBase
          dual: Number
    name: FldDualFieldModParam
    typeKind: !_TypeKind Dual