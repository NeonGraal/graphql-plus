enum _Scalar { Number String Union }

output _TypeScalar {
    | _ScalarNumber
    | _ScalarString
    | _ScalarUnion
    }

output _ScalarRef<$base> {
    : _TypeRef<_TypeKind.Scalar>
        scalar: $base
    }

output _BaseScalar<$base> {
    : _BaseType<_TypeKind.Scalar>
        extends: _ScalarRef<$base>
    }

output _ScalarNumber {
    : _BaseScalar<_Scalar.Number>
        ranges: _ScalarRange[]
    }

output _ScalarRange {
        from: Number?
        fromInclusive: Boolean
        to: Number?
        toInclusive: Boolean
    }

output _ScalarString {
    : _BaseScalar<_Scalar.String>
        regexes: _ScalarRegex[]
    }

output _ScalarRegex {
        regex: String
        exclude: Boolean
    }

output _ScalarUnion {
    : _BaseScalar<_Scalar.Union>
        references: _TypeSimple[]
    }

output _ScalarValue<$base $value> {
    : _ScalarRef<$base>
        value: $value
}
