[  
!Sc I@001/0001
Success
{
  !Ou I@008/0001
  _Schema
  :
  I@007/0002
  _Named
  {
    !OF I@009/0003
    categories
    (
      !Pa
      I@020/0003
      _CategoryFilter
      ?
    )
    :
    I@039/0003
    _Categories
    [_Identifier]
    !OF I@009/0004
    directives
    (
      !Pa
      I@020/0004
      _Filter
      ?
    )
    :
    I@031/0004
    _Directives
    [_Identifier]
    !OF I@009/0005
    operations
    (
      !Pa
      I@020/0005
      _Filter
      ?
    )
    :
    I@031/0005
    _Operations
    [_Identifier]
    !OF I@009/0006
    types
    (
      !Pa
      I@015/0006
      _TypeFilter
      ?
    )
    :
    I@030/0006
    _Type
    [_Identifier]
    !OF I@009/0007
    settings
    (
      !Pa
      I@018/0007
      _Filter
      ?
    )
    :
    I@029/0007
    _Setting
    [_Identifier]
  }
}
{
  !Do I@008/0010
  _Identifier
  String
  !DX R@029/0010
  /[A-Za-z_]+/
}
{
  !In I@007/0012
  _Filter
  {
    !IF I@009/0013
    names
    :
    I@016/0013
    _NameFilter
    []
    !IF I@009/0014
    matchAliases
    :
    I@023/0014
    Boolean
    ?
    =( !k I@034/0014 Boolean.true )
    !IF I@009/0015
    aliases
    :
    I@018/0015
    _NameFilter
    []
    !IF I@009/0016
    returnByAlias
    :
    I@024/0016
    Boolean
    ?
    =( !k I@035/0016 Boolean.false )
    !IF I@009/0017
    returnReferencedTypes
    :
    I@032/0017
    Boolean
    ?
    =( !k I@043/0017 Boolean.false )
  }
  |
  I@007/0018
  _NameFilter
  []
}
{
  '_NameFilter is a simple match expression against _Identifier where \'.\' matches any single character and \'*\' matches zero or more of any character.'
  !Do I@008/0023
  _NameFilter
  String
  !DX R@029/0023
  /[A-Za-z_.*]+/
}
{
  !In I@007/0025
  _CategoryFilter
  :
  I@007/0026
  _Filter
  {
    !IF I@009/0027
    resolutions
    :
    I@022/0027
    _Resolution
    []
  }
}
{
  !In I@007/0030
  _TypeFilter
  :
  I@007/0031
  _Filter
  {
    !IF I@009/0032
    kinds
    :
    I@016/0032
    _TypeKind
    []
  }
}
{
  !Du I@006/0035
  _Aliased
  :
  I@007/0036
  _Named
  {
    !DF I@009/0037
    aliases
    :
    I@018/0037
    _Identifier
    []
  }
}
{
  !Du I@006/0040
  _Named
  :
  I@007/0041
  _Described
  {
    !DF I@009/0042
    name
    :
    I@015/0042
    _Identifier
  }
}
{
  !Du I@006/0045
  _Described
  {
    !DF I@009/0046
    description
    :
    I@022/0046
    String
    []
  }
}
{
  !Ou I@008/0049
  _AndType
  :
  I@007/0050
  _Named
  {
    !OF I@009/0051
    type
    :
    I@015/0051
    _Type
  }
  |
  I@007/0052
  _Type
}
{
  !Ou I@008/0055
  _Categories
  :
  I@007/0056
  _AndType
  {
    !OF I@009/0057
    category
    :
    I@019/0057
    _Category
  }
  |
  I@007/0058
  _Category
}
{
  !Ou I@008/0061
  _Category
  :
  I@007/0062
  _Aliased
  {
    !OF I@009/0063
    resolution
    :
    I@021/0063
    _Resolution
    !OF I@009/0064
    output
    :
    I@017/0064
    _TypeRef
    <
      I@026/0064
      _TypeKind.Output
    >
    !OF I@009/0065
    modifiers
    :
    I@020/0065
    _Modifiers
    []
  }
}
{
  !En I@006/0068
  _Resolution
  !EL I@020/0068
  Parallel
  !EL I@029/0068
  Sequential
  !EL I@040/0068
  Single
}
{
  !Ou I@008/0070
  _Directives
  :
  I@007/0071
  _AndType
  {
    !OF I@009/0072
    directive
    :
    I@020/0072
    _Directive
  }
  |
  I@007/0073
  _Directive
}
{
  !Ou I@008/0076
  _Directive
  :
  I@007/0077
  _Aliased
  {
    !OF I@009/0078
    parameters
    :
    I@021/0078
    _InputParam
    []
    !OF I@009/0079
    repeatable
    :
    I@021/0079
    Boolean
    !OF I@009/0080
    locations
    :
    I@020/0080
    _
    [_Location]
  }
}
{
  !En I@006/0083
  _Location
  !EL I@018/0083
  Operation
  !EL I@028/0083
  Variable
  !EL I@037/0083
  Field
  !EL I@043/0083
  Inline
  !EL I@050/0083
  Spread
  !EL I@057/0083
  Fragment
}
{
  !Ou I@008/0086
  _Operations
  {
    !OF I@009/0087
    operation
    :
    I@020/0087
    _Operation
    !OF I@009/0088
    type
    :
    I@015/0088
    _Type
  }
  |
  I@007/0089
  _Operation
  I@007/0090
  _Type
}
{
  !Ou I@008/0093
  _Operation
  :
  I@007/0094
  _Aliased
  {
    !OF I@009/0095
    category
    :
    I@019/0095
    _Identifier
    !OF I@009/0096
    variables
    :
    I@020/0096
    _OpVariable
    ?
    !OF I@009/0097
    directives
    :
    I@021/0097
    _OpDirective
    []
    !OF I@009/0098
    fragments
    :
    I@020/0098
    _OpFragment
    []
    !OF I@009/0099
    result
    :
    I@017/0099
    _OpResult
  }
}
{
  !Ou I@008/0102
  _OpVariable
  {
    !OF I@009/0103
    name
    :
    I@015/0103
    _Identifier
    !OF I@009/0104
    type
    :
    I@015/0104
    _ObjType
    <
      I@024/0104
      _InputBase
    >
    !OF I@009/0105
    modifiers
    :
    I@020/0105
    _Modifiers
    []
    !OF I@009/0106
    default
    :
    I@018/0106
    String
    ?
    !OF I@009/0107
    directives
    :
    I@021/0107
    _OpDirective
    []
  }
}
{
  !Du I@006/0110
  _OpDirective
  {
    !DF I@009/0111
    name
    :
    I@015/0111
    _Identifier
    !DF I@009/0112
    argument
    :
    I@019/0112
    String
    ?
  }
}
{
  !Ou I@008/0115
  _OpFragment
  {
    !OF I@009/0116
    name
    :
    I@015/0116
    _Identifier
    !OF I@009/0117
    type
    :
    I@015/0117
    _ObjType
    <
      I@024/0117
      _OutputBase
    >
    !OF I@009/0118
    directives
    :
    I@021/0118
    _OpDirective
    []
    !OF I@009/0119
    body
    :
    I@015/0119
    _OpObject
    []
  }
}
{
  !Ou I@008/0122
  _OpResult
  {
    !OF I@009/0123
    domain
    :
    I@017/0123
    _TypeRef
    <
      I@026/0123
      _SimpleKind
    >
    ?
    !OF I@009/0124
    argument
    :
    I@019/0124
    String
    ?
    !OF I@009/0125
    body
    :
    I@015/0125
    _OpObject
    []
  }
}
{
  !Ou I@008/0128
  _OpObject
  |
  I@009/0129
  _OpField
  I@009/0130
  _OpSpread
  I@009/0131
  _OpInline
}
{
  !Ou I@008/0134
  _OpField
  {
    !OF I@009/0135
    alias
    :
    I@016/0135
    String
    ?
    !OF I@009/0136
    field
    :
    I@016/0136
    String
    !OF I@009/0137
    argument
    :
    I@019/0137
    String
    ?
    !OF I@009/0138
    modifiers
    :
    I@020/0138
    _Modifiers
    !OF I@009/0139
    directives
    :
    I@021/0139
    _OpDirective
    []
    !OF I@009/0140
    body
    :
    I@015/0140
    _OpObject
    []
  }
}
{
  !Ou I@008/0143
  _OpInline
  {
    !OF I@009/0144
    type
    :
    I@015/0144
    String
    ?
    !OF I@009/0145
    directives
    :
    I@021/0145
    _OpDirective
    []
    !OF I@009/0146
    body
    :
    I@015/0146
    _OpObject
    []
  }
}
{
  !Ou I@008/0149
  _OpSpread
  {
    !OF I@009/0150
    fragment
    :
    I@019/0150
    String
    !OF I@009/0151
    directives
    :
    I@021/0151
    _OpDirective
    []
  }
}
{
  !Ou I@008/0154
  _Setting
  :
  I@007/0155
  _Named
  {
    !OF I@009/0156
    value
    :
    I@016/0156
    _Constant
  }
}
{
  !Ou I@008/0159
  _Type
  |
  I@007/0160
  _BaseType
  <
    I@017/0160
    _TypeKind.Basic
  >
  I@007/0161
  _BaseType
  <
    I@017/0161
    _TypeKind.Internal
  >
  I@007/0162
  _TypeDual
  I@007/0163
  _TypeEnum
  I@007/0164
  _TypeInput
  I@007/0165
  _TypeOutput
  I@007/0166
  _TypeDomain
  I@007/0167
  _TypeUnion
}
{
  !Ou I@008/0170
  _BaseType
  <
    I@019/0170
    $kind
    :_TypeKind
  >
  :
  I@007/0171
  _Aliased
  {
    !OF I@009/0172
    typeKind
    :
    I@020/0172
    $kind
  }
}
{
  !Ou I@008/0175
  _ChildType
  <
    I@020/0175
    $kind
    :_TypeKind
    I@036/0175
    $parent
    :_Described
  >
  :
  I@007/0176
  _BaseType
  <
    I@018/0176
    $kind
  >
  {
    !OF I@009/0177
    parent
    :
    I@018/0177
    $parent
  }
}
{
  !Ou I@008/0180
  _ParentType
  <
    I@021/0180
    $kind
    :_TypeKind
    I@037/0180
    $item
    :_Described
    I@054/0180
    $allItem
    :_Described
  >
  :
  I@007/0181
  _ChildType
  <
    I@019/0181
    $kind
    I@024/0181
    _Named
  >
  {
    !OF I@009/0182
    items
    :
    I@017/0182
    $item
    []
    !OF I@009/0183
    allItems
    :
    I@020/0183
    $allItem
    []
  }
}
{
  !En I@006/0186
  _SimpleKind
  !EL I@020/0186
  Basic
  !EL I@026/0186
  Enum
  !EL I@031/0186
  Internal
  !EL I@040/0186
  Domain
  !EL I@047/0186
  Union
}
{
  !En I@006/0188
  _TypeKind
  :( !Tr I@019/0188 _SimpleKind )
  !EL I@031/0188
  Dual
  !EL I@036/0188
  Input
  !EL I@042/0188
  Output
}
{
  !Ou I@008/0190
  _TypeRef
  <
    I@018/0190
    $kind
    :_TypeKind
  >
  :
  I@007/0191
  _Named
  {
    !OF I@009/0192
    typeKind
    :
    I@020/0192
    $kind
  }
}
{
  !Ou I@008/0195
  _TypeSimple
  |
  I@007/0196
  _TypeRef
  <
    I@016/0196
    _TypeKind.Basic
  >
  I@007/0197
  _TypeRef
  <
    I@016/0197
    _TypeKind.Enum
  >
  I@007/0198
  _TypeRef
  <
    I@016/0198
    _TypeKind.Domain
  >
  I@007/0199
  _TypeRef
  <
    I@016/0199
    _TypeKind.Union
  >
}
{
  !Ou I@008/0202
  _Constant
  |
  I@007/0203
  _SimpleValue
  I@007/0204
  _ConstantList
  I@007/0205
  _ConstantMap
}
{
  !Ou I@008/0208
  _SimpleValue
  |
  I@007/0209
  _DomainValue
  <
    I@020/0209
    _DomainKind.Boolean
    I@040/0209
    Boolean
  >
  I@007/0210
  _DomainValue
  <
    I@020/0210
    _DomainKind.Enum
    I@037/0210
    _EnumValue
  >
  I@007/0211
  _DomainValue
  <
    I@020/0211
    _DomainKind.Number
    I@039/0211
    Number
  >
  I@007/0212
  _DomainValue
  <
    I@020/0212
    _DomainKind.String
    I@039/0212
    String
  >
}
{
  !Ou I@008/0215
  _ConstantList
  |
  I@007/0216
  _Constant
  []
}
{
  !Ou I@008/0219
  _ConstantMap
  |
  I@007/0220
  _Constant
  [_Key]
}
{
  !Ou I@008/0223
  _Collections
  |
  I@007/0224
  _Modifier
  <
    I@017/0224
    _ModifierKind.List
  >
  I@007/0225
  _ModifierKeyed
  <
    I@022/0225
    _ModifierKind.Dictionary
  >
  I@007/0226
  _ModifierKeyed
  <
    I@022/0226
    _ModifierKind.TypeParam
  >
}
{
  !Ou I@008/0229
  _ModifierKeyed
  <
    I@024/0229
    $kind
    :_ModifierKind
  >
  :
  I@007/0230
  _Modifier
  <
    I@018/0230
    $kind
  >
  {
    !OF I@009/0231
    by
    :
    I@013/0231
    _TypeSimple
    !OF I@009/0232
    optional
    :
    I@019/0232
    Boolean
  }
}
{
  !Ou I@008/0235
  _Modifiers
  |
  I@007/0236
  _Modifier
  <
    I@017/0236
    _ModifierKind.Optional
  >
  I@007/0237
  _Collections
}
{
  !En I@006/0240
  _ModifierKind
  !EL I@022/0240
  Opt
  [
    Optional
  ]
  !EL I@036/0240
  List
  !EL I@041/0240
  Dict
  [
    Dictionary
  ]
  !EL I@058/0240
  Param
  [
    TypeParam
  ]
}
{
  !Ou I@008/0242
  _Modifier
  <
    I@019/0242
    $kind
    :_ModifierKind
  >
  {
    !OF I@009/0243
    modifierKind
    :
    I@024/0243
    $kind
  }
}
{
  !En I@006/0246
  _DomainKind
  !EL I@020/0246
  Boolean
  !EL I@028/0246
  Enum
  !EL I@033/0246
  Number
  !EL I@040/0246
  String
}
{
  !Ou I@008/0248
  _TypeDomain
  |
  I@007/0249
  _BaseDomain
  <
    I@019/0249
    _DomainKind.Boolean
    I@039/0249
    _DomainTrueFalse
    I@056/0249
    _DomainItemTrueFalse
  >
  I@007/0250
  _BaseDomain
  <
    I@019/0250
    _DomainKind.Enum
    I@036/0250
    _DomainLabel
    I@049/0250
    _DomainItemLabel
  >
  I@007/0251
  _BaseDomain
  <
    I@019/0251
    _DomainKind.Number
    I@038/0251
    _DomainRange
    I@051/0251
    _DomainItemRange
  >
  I@007/0252
  _BaseDomain
  <
    I@019/0252
    _DomainKind.String
    I@038/0252
    _DomainRegex
    I@051/0252
    _DomainItemRegex
  >
}
{
  !Ou I@008/0255
  _DomainRef
  <
    I@020/0255
    $kind
    :_DomainKind
  >
  :
  I@007/0256
  _TypeRef
  <
    I@016/0256
    _TypeKind.Domain
  >
  {
    !OF I@009/0257
    domainKind
    :
    I@022/0257
    $kind
  }
}
{
  !Ou I@008/0260
  _BaseDomain
  <
    I@021/0260
    $domain
    :_DomainKind
    I@041/0260
    $item
    :_BaseDomainItem
    I@063/0260
    $domainItem
    :_DomainItem
  >
  :
  I@007/0261
  _ParentType
  <
    I@019/0261
    _TypeKind.Domain
    I@037/0261
    $item
    I@043/0261
    $domainItem
  >
  {
    !OF I@009/0262
    domainKind
    :
    I@022/0262
    $domain
  }
}
{
  !Du I@006/0265
  _BaseDomainItem
  :
  I@007/0266
  _Described
  {
    !DF I@009/0267
    exclude
    :
    I@018/0267
    Boolean
  }
}
{
  !Ou I@008/0270
  _DomainItem
  <
    I@021/0270
    $item
    :_BaseDomainItem
  >
  :
  I@008/0271
  $item
  {
    !OF I@009/0272
    domain
    :
    I@017/0272
    _Identifier
  }
}
{
  !Ou I@008/0275
  _DomainValue
  <
    I@022/0275
    $kind
    :_DomainKind
    I@040/0275
    $value
    :_BasicValue
  >
  :
  I@007/0276
  _DomainRef
  <
    I@019/0276
    $kind
  >
  {
    !OF I@009/0277
    value
    :
    I@017/0277
    $value
  }
}
{
  !Ou I@008/0280
  _BasicValue
  |
  I@007/0281
  Boolean
  I@007/0282
  _EnumValue
  I@007/0283
  Number
  I@007/0284
  String
}
{
  !Du I@006/0287
  _DomainTrueFalse
  :
  I@007/0288
  _BaseDomainItem
  {
    !DF I@009/0289
    value
    :
    I@016/0289
    Boolean
  }
}
{
  !Ou I@008/0292
  _DomainItemTrueFalse
  :
  I@007/0293
  _DomainItem
  <
    I@019/0293
    _DomainTrueFalse
  >
}
{
  !Ou I@008/0296
  _DomainLabel
  :
  I@007/0297
  _BaseDomainItem
  {
    !OF I@009/0298
    label
    :
    I@016/0298
    _EnumValue
  }
}
{
  !Ou I@008/0301
  _DomainItemLabel
  :
  I@007/0302
  _DomainItem
  <
    I@019/0302
    _DomainLabel
  >
}
{
  !Du I@006/0305
  _DomainRange
  :
  I@007/0306
  _BaseDomainItem
  {
    !DF I@009/0307
    lower
    :
    I@016/0307
    Number
    ?
    !DF I@009/0308
    upper
    :
    I@016/0308
    Number
    ?
  }
}
{
  !Ou I@008/0311
  _DomainItemRange
  :
  I@007/0312
  _DomainItem
  <
    I@019/0312
    _DomainRange
  >
}
{
  !Du I@006/0315
  _DomainRegex
  :
  I@007/0316
  _BaseDomainItem
  {
    !DF I@009/0317
    pattern
    :
    I@018/0317
    String
  }
}
{
  !Ou I@008/0320
  _DomainItemRegex
  :
  I@007/0321
  _DomainItem
  <
    I@019/0321
    _DomainRegex
  >
}
{
  !Ou I@008/0324
  _TypeEnum
  :
  I@007/0325
  _ParentType
  <
    I@019/0325
    _TypeKind.Enum
    I@034/0325
    _Aliased
    I@043/0325
    _EnumLabel
  >
}
{
  !Du I@006/0328
  _EnumLabel
  :
  I@007/0329
  _Aliased
  {
    !DF I@009/0330
    enum
    :
    I@015/0330
    _Identifier
  }
}
{
  !Ou I@008/0333
  _EnumValue
  :
  I@007/0334
  _TypeRef
  <
    I@016/0334
    _TypeKind.Enum
  >
  {
    !OF I@009/0335
    label
    :
    I@016/0335
    _Identifier
  }
}
{
  !Ou I@008/0338
  _TypeUnion
  :
  I@007/0339
  _ParentType
  <
    I@019/0339
    _TypeKind.Union
    I@035/0339
    _UnionRef
    I@045/0339
    _UnionMember
  >
}
{
  !Ou I@008/0342
  _UnionRef
  :
  I@007/0343
  _TypeRef
  <
    I@016/0343
    _SimpleKind
  >
}
{
  !Ou I@008/0346
  _UnionMember
  :
  I@007/0347
  _UnionRef
  {
    !OF I@009/0348
    union
    :
    I@016/0348
    _Identifier
  }
}
{
  !Do I@008/0351
  _ObjectKind
  Enum
  !DE I@027/0351
  _TypeKind
  Dual
  !DE I@042/0351
  _TypeKind
  Input
  !DE I@058/0351
  _TypeKind
  Output
}
{
  !Ou I@008/0353
  _TypeObject
  <
    I@021/0353
    $kind
    :_ObjectKind
    I@039/0353
    $parent
    :_ObjBase
    I@014/0354
    $typeParam
    :_ObjTypeParam
    I@039/0354
    $field
    :_Field
    I@053/0354
    $alternate
    :_Alternate
  >
  :
  I@007/0355
  _ChildType
  <
    I@019/0355
    $kind
    I@025/0355
    $parent
  >
  {
    !OF I@009/0356
    typeParams
    :
    I@022/0356
    $typeParam
    []
    !OF I@009/0357
    fields
    :
    I@018/0357
    $field
    []
    !OF I@009/0358
    alternates
    :
    I@022/0358
    $alternate
    []
    !OF I@009/0359
    allFields
    :
    I@020/0359
    _ObjectFor
    <
      I@032/0359
      $field
    >
    []
    !OF I@009/0360
    allAlternates
    :
    I@024/0360
    _ObjectFor
    <
      I@036/0360
      $alternate
    >
    []
  }
}
{
  !Ou I@008/0363
  _ObjTypeParam
  <
    I@023/0363
    $kind
    :_ObjectKind
  >
  :
  I@007/0364
  _Named
  {
    !OF I@009/0365
    constraint
    :
    I@021/0365
    _ObjConstraint
    <
      I@037/0365
      $kind
    >
  }
}
{
  !Ou I@008/0368
  _ObjConstraint
  <
    I@024/0368
    $kind
    :_ObjectKind
  >
  :
  I@007/0369
  _TypeRef
  <
    I@017/0369
    $kind
  >
}
{
  !Ou I@008/0372
  _ObjBase
  <
    I@018/0372
    $arg
    :_ObjTypeArg
  >
  :
  I@007/0373
  _Named
  {
    !OF I@009/0374
    typeArgs
    :
    I@020/0374
    $arg
    []
  }
  |
  I@007/0375
  _TypeParam
}
{
  !Ou I@008/0378
  _ObjTypeArg
  :
  I@007/0379
  _TypeRef
  <
    I@016/0379
    _TypeKind
  >
  |
  I@007/0380
  _TypeParam
}
{
  !Ou I@008/0383
  _TypeParam
  :
  I@007/0384
  _Named
  {
    !OF I@009/0385
    typeParam
    :
    I@020/0385
    _Identifier
  }
}
{
  !Ou I@008/0388
  _Alternate
  <
    I@020/0388
    $base
    :_ObjBase
  >
  {
    !OF I@007/0389
    type
    :
    I@014/0389
    $base
    !OF I@007/0390
    collections
    :
    I@020/0390
    _Collections
    []
  }
}
{
  !Ou I@008/0393
  _ObjectFor
  <
    I@020/0393
    $for
    :_ForParam
  >
  :
  I@008/0394
  $for
  {
    !OF I@009/0395
    object
    :
    I@017/0395
    _Identifier
  }
}
{
  !Ou I@008/0398
  _Field
  <
    I@016/0398
    $base
    :_ObjBase
  >
  :
  I@007/0399
  _Aliased
  {
    !OF I@007/0400
    type
    :
    I@014/0400
    $base
    !OF I@007/0401
    modifiers
    :
    I@018/0401
    _Modifiers
    []
  }
}
{
  !Ou I@008/0404
  _ForParam
  <
    I@019/0404
    $base
    :_ObjBase
  >
  |
  I@007/0405
  _Alternate
  <
    I@019/0405
    $base
  >
  I@007/0406
  _Field
  <
    I@015/0406
    $base
  >
}
{
  !Ou I@008/0409
  _TypeDual
  :
  I@007/0410
  _TypeObject
  <
    I@019/0410
    _TypeKind.Dual
    I@034/0410
    _DualBase
    I@044/0410
    _DualTypeParam
    I@059/0410
    _DualField
    I@070/0410
    _DualAlternate
  >
}
{
  !Ou I@008/0413
  _DualBase
  :
  I@007/0414
  _ObjBase
  <
    I@016/0414
    _DualTypeArg
  >
}
{
  !Ou I@008/0417
  _DualTypeParam
  :
  I@007/0418
  _ObjTypeParam
  <
    I@021/0418
    _TypeKind.Dual
  >
}
{
  !Ou I@008/0421
  _DualField
  :
  I@007/0422
  _Field
  <
    I@014/0422
    _DualBase
  >
}
{
  !Ou I@008/0425
  _DualAlternate
  :
  I@007/0426
  _Alternate
  <
    I@018/0426
    _DualBase
  >
}
{
  !Ou I@008/0429
  _DualTypeArg
  :
  I@007/0430
  _ObjTypeArg
}
{
  !Ou I@008/0433
  _TypeInput
  :
  I@007/0434
  _TypeObject
  <
    I@019/0434
    _TypeKind.Input
    I@035/0434
    _InputBase
    I@046/0434
    _InputTypeParam
    I@062/0434
    _InputField
    I@074/0434
    _InputAlternate
  >
}
{
  !Ou I@008/0437
  _InputBase
  :
  I@007/0438
  _ObjBase
  <
    I@016/0438
    _InputTypeArg
  >
  |
  I@007/0439
  _DualBase
}
{
  !Ou I@008/0442
  _InputTypeParam
  :
  I@007/0443
  _ObjTypeParam
  <
    I@021/0443
    _TypeKind.Input
  >
  |
  I@007/0444
  _TypeRef
  <
    I@016/0444
    _TypeKind.Dual
  >
}
{
  !Ou I@008/0447
  _InputField
  :
  I@007/0448
  _Field
  <
    I@014/0448
    _InputBase
  >
  {
    !OF I@009/0449
    default
    :
    I@018/0449
    _Constant
    ?
  }
}
{
  !Ou I@008/0452
  _InputAlternate
  :
  I@007/0453
  _Alternate
  <
    I@018/0453
    _InputBase
  >
}
{
  !Ou I@008/0456
  _InputTypeArg
  :
  I@007/0457
  _ObjTypeArg
}
{
  !Ou I@008/0460
  _InputParam
  :
  I@007/0461
  _InputBase
  {
    !OF I@009/0462
    modifiers
    :
    I@020/0462
    _Modifiers
    []
    !OF I@009/0463
    default
    :
    I@018/0463
    _Constant
    ?
  }
}
{
  !Ou I@008/0466
  _TypeOutput
  :
  I@007/0467
  _TypeObject
  <
    I@019/0467
    _TypeKind.Output
    I@036/0467
    _OutputBase
    I@048/0467
    _OutputTypeParam
    I@065/0467
    _OutputField
    I@078/0467
    _OutputAlternate
  >
}
{
  !Ou I@008/0470
  _OutputBase
  :
  I@007/0471
  _ObjBase
  <
    I@016/0471
    _OutputTypeArg
  >
  |
  I@007/0472
  _DualBase
}
{
  !Ou I@008/0475
  _OutputTypeParam
  :
  I@007/0476
  _ObjTypeParam
  <
    I@021/0476
    _TypeKind.Output
  >
  |
  I@007/0477
  _TypeRef
  <
    I@016/0477
    _TypeKind.Dual
  >
  I@007/0478
  _TypeRef
  <
    I@016/0478
    _TypeKind.Enum
  >
}
{
  !Ou I@008/0481
  _OutputField
  :
  I@007/0482
  _Field
  <
    I@014/0482
    _OutputBase
  >
  {
    !OF I@009/0483
    parameters
    :
    I@021/0483
    _InputParam
    []
  }
  |
  I@007/0484
  _OutputEnum
}
{
  !Ou I@008/0487
  _OutputAlternate
  :
  I@007/0488
  _Alternate
  <
    I@018/0488
    _OutputBase
  >
}
{
  !Ou I@008/0491
  _OutputTypeArg
  :
  I@007/0492
  _ObjTypeArg
  {
    !OF I@009/0493
    label
    :
    I@016/0493
    _Identifier
    ?
  }
}
{
  !Ou I@008/0496
  _OutputEnum
  :
  I@007/0497
  _TypeRef
  <
    I@016/0497
    _TypeKind.Enum
  >
  {
    !OF I@009/0498
    field
    :
    I@016/0498
    _Identifier
    !OF I@009/0499
    label
    :
    I@016/0499
    _Identifier
  }
}
]