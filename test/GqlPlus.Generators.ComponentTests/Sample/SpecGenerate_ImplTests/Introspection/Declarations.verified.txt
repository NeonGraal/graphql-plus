/* Declarations
output _Schema {
    : _Named
        categories(_CategoryFilter?): _Categories[_Identifier]
        directives(_Filter?): _Directives[_Identifier]
        types(_TypeFilter?): _Type[_Identifier]
        settings(_Filter?): _Setting[_Identifier]
    }

domain _Identifier { String /[A-Za-z_][A-Za-z0-9_]*/ }

input _Filter {
        names: _NameFilter[]
        matchAliases: Boolean? = true
        aliases: _NameFilter[]
        returnByAlias: Boolean? = false
        returnReferencedTypes: Boolean? = false
    | _NameFilter[]
    }

"_NameFilter is a simple match expression against _Identifier"
"where '.' matches any single character and '*' matches zero or more of any character."
domain _NameFilter { String /[A-Za-z_.*]+/ }

input _CategoryFilter {
    : _Filter
        resolutions: _Resolution[]
    }

input _TypeFilter {
    : _Filter
        kinds: _TypeKind[]
    }
*/

// Generated from Spec Declarations for Impl

/*
*/
namespace Components.Gqlp_Spec_Declarations;

public class OutputCmpt_Schema
  : OutputCmpt_Named
  , ICmpt_Schema
{
  public _Categories categories { get; set; }
  public _Directives directives { get; set; }
  public _Type types { get; set; }
  public _Setting settings { get; set; }
}

public class DomainCmpt_Identifier
  : ICmpt_Identifier
{
}

public class InputCmpt_Filter
  : ICmpt_Filter
{
  public _NameFilter names { get; set; }
  public Boolean matchAliases { get; set; }
  public _NameFilter aliases { get; set; }
  public Boolean returnByAlias { get; set; }
  public Boolean returnReferencedTypes { get; set; }
  public _NameFilter As_NameFilter { get; set; }
}

public class DomainCmpt_NameFilter
  : ICmpt_NameFilter
{
}

public class InputCmpt_CategoryFilter
  : InputCmpt_Filter
  , ICmpt_CategoryFilter
{
  public _Resolution resolutions { get; set; }
}

public class InputCmpt_TypeFilter
  : InputCmpt_Filter
  , ICmpt_TypeFilter
{
  public _TypeKind kinds { get; set; }
}