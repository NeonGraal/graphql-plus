output _TypeObject<$kind $base $field> {
    : _ChildType<$kind _Described<$base>>
        typeParameters: _Described<_Named>[]
        fields: $field[]
        alternates: _Alternate<$base>[]
        allFields: _Object<$field>[]
        allAlternates: _Object<_Alternate<$base>>[]
    }

output  _ObjRef<$base> {
    | _BaseType<_TypeKind.Internal>
    | _TypeSimple
    | $base
    }

dual _ObjBase<$arg> {
        arguments: $arg[]
    | "TypeParameter" Identifier
    }

dual _Alternate<$base> {
      type: _Described<_ObjRef<$base>>
      collections: _Collections[]
    }

dual _Object<$for> {
    : $for
        object: Identifier
    }

dual _Field<$base> {
    : _Aliased
      type: _Described<_ObjRef<$base>>
      modifiers: _Modifiers[]
    }

dual _Parameter {
    : _Alternate<_InputBase>
        default: _Constant?
    }
