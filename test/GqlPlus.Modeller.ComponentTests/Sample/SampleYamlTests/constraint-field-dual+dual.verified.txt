!_Schema
types: !_Map_Type
  !_Identifier DualCnstFieldDual: !_TypeDual
    allFields:
    - !_ObjectFor(_DualField)
      name: field
      object: DualCnstFieldDualRef
      type: !_DualBase
        dual: DualCnstFieldDualAlt
    name: DualCnstFieldDual
    parent: !_DualBase
      dual: DualCnstFieldDualRef
      typeArgs:
      - !_DualArg
        dual: DualCnstFieldDualAlt
    typeKind: !_TypeKind Dual
  !_Identifier DualCnstFieldDualAlt: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: DualCnstFieldDualParent
      type: !_DualBase
        dual: String
    allFields:
    - !_ObjectFor(_DualField)
      name: alt
      object: DualCnstFieldDualAlt
      type: !_DualBase
        dual: Number
    fields:
    - !_DualField
      name: alt
      type: !_DualBase
        dual: Number
    name: DualCnstFieldDualAlt
    parent: !_DualBase
      dual: DualCnstFieldDualParent
    typeKind: !_TypeKind Dual
  !_Identifier DualCnstFieldDualParent: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: DualCnstFieldDualParent
      type: !_DualBase
        dual: String
    alternates:
    - !_DualAlternate
      type: !_DualBase
        dual: String
    name: DualCnstFieldDualParent
    typeKind: !_TypeKind Dual
  !_Identifier DualCnstFieldDualRef: !_TypeDual
    allFields:
    - !_ObjectFor(_DualField)
      name: field
      object: DualCnstFieldDualRef
      type: !_TypeParam ref
    fields:
    - !_DualField
      name: field
      type: !_TypeParam ref
    name: DualCnstFieldDualRef
    typeKind: !_TypeKind Dual
    typeParams:
    - !_Described
      name: ref