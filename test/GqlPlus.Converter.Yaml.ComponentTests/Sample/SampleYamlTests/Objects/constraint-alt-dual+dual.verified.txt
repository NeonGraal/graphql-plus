!_Schema
types: !_Map_Type
  !_Identifier AltDualCnstAltDual: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: PrntDualCnstAltDual
      type: !_DualBase
        dual: String
    allFields:
    - !_ObjectFor(_DualField)
      name: alt
      object: AltDualCnstAltDual
      type: !_DualBase
        dual: Number
    fields:
    - !_DualField
      name: alt
      type: !_DualBase
        dual: Number
    name: AltDualCnstAltDual
    parent: !_DualBase
      dual: PrntDualCnstAltDual
    typeKind: !_TypeKind Dual
  !_Identifier DualCnstAltDual: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: DualCnstAltDual
      type: !_DualBase
        dual: RefDualCnstAltDual
        typeArgs:
        - !_DualArg
          dual: AltDualCnstAltDual
    alternates:
    - !_DualAlternate
      type: !_DualBase
        dual: RefDualCnstAltDual
        typeArgs:
        - !_DualArg
          dual: AltDualCnstAltDual
    name: DualCnstAltDual
    typeKind: !_TypeKind Dual
  !_Identifier PrntDualCnstAltDual: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: PrntDualCnstAltDual
      type: !_DualBase
        dual: String
    alternates:
    - !_DualAlternate
      type: !_DualBase
        dual: String
    name: PrntDualCnstAltDual
    typeKind: !_TypeKind Dual
  !_Identifier RefDualCnstAltDual: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: RefDualCnstAltDual
      type: !_DualBase
        typeParam: ref
    alternates:
    - !_DualAlternate
      type: !_DualBase
        typeParam: ref
    name: RefDualCnstAltDual
    typeKind: !_TypeKind Dual
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        name: PrntDualCnstAltDual
        typeKind: !_TypeKind Dual
      name: ref