output _TypeObject<$kind $base $field> {
    : _BaseType<$kind>
        base: $base?
        typeParameters: _Named[]
        fields: $field[]
        alternates: _Alternate<$base>[]
        allTypeParameters: _Object<_Named>[]
        allFields: _Object<$field>[]
        allAlternates: _Object<_Alternate<$base>>[]
    }

output _Ref<$base> {
    | _BaseType<_TypeKind.Internal>
    | _TypeSimple
    | $base
    }

output _Alternate<$base> {
      type: _Ref<$base>
      collections: _Collection[]
    }

output _Object<$for> {
    : $for
        object: String
    }

output _Field<$base> {
    : _Aliased
      type: _Ref<$base>
      modifiers: _Modifier[]
    }

output _Parameter {
    : _Alternate<_InputBase>
        default: _Constant?
    }
