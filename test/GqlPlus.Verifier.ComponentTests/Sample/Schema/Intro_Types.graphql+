output _Type {
    | _BaseType<_TypeKind.Basic>
    | _BaseType<_TypeKind.Internal>
    | _TypeDual
    | _TypeEnum
    | _TypeInput
    | _TypeOutput
    | _TypeScalar
    | _TypeUnion
    }

output _BaseType<$kind> {
    : _Aliased
        kind: $kind
    }

output _ChildType<$kind $parent> {
    : _BaseType<$kind>
        parent: $parent
    }

output _ParentType<$kind $item $allItem> {
    : _ChildType<$kind Identifier>
        items: $item[]
        allItems: $allItem[]
    }

enum _SimpleKind { Basic Enum Internal Scalar Union }

enum _TypeKind { :_SimpleKind Dual Input Output }

output _TypeRef<$kind> {
        kind: $kind
        name: Identifier
}

output _TypeSimple {
    | _TypeRef<_TypeKind.Basic>
    | _TypeRef<_TypeKind.Enum>
    | _TypeRef<_TypeKind.Scalar>
    | _TypeRef<_TypeKind.Union>
    }
