enum _ScalarKind { Boolean Enum Number String Union }

output _TypeScalar {
    | _BaseScalar<_ScalarKind.Boolean _ScalarTrueFalse>
    | _BaseScalar<_ScalarKind.Enum _ScalarMember>
    | _BaseScalar<_ScalarKind.Number _ScalarRange>
    | _BaseScalar<_ScalarKind.String _ScalarRegex>
    | _BaseScalar<_ScalarKind.Union _TypeSimple>
    }

output _ScalarRef<$kind> {
    : _TypeRef<_TypeKind.Scalar>
        scalar: $kind
    }

output _BaseScalar<$kind $item> {
    : _ParentType<_TypeKind.Scalar $item _ScalarItem<$item>>    
        scalar: $kind
    }

output _BaseScalarItem {
        exclude: Boolean
    }

output _ScalarTrueFalse {
    : _BaseScalarItem
        value: Boolean
    }

output _ScalarMember {
    : _BaseScalarItem
        member: _EnumValue
    }

output _ScalarRange {
    : _BaseScalarItem
        from: Number?
        to: Number?
    }

output _ScalarRegex {
    : _BaseScalarItem
        regex: String
    }

output _ScalarItem<$item> {
    : $item
        scalar: Identifier
    }

output _ScalarValue<$kind $value> {
    : _ScalarRef<$kind>
        value: $value
    }
