!_Schema
aliases: [Alias, Opt1, Opt2]
categories: !_Map_Categories
  !_Identifier ctgr: !_Category
    name: ctgr
    output: !_TypeRef(_TypeKind)
      typeKind: !_TypeKind Output
      typeName: Ctgr
    resolution: !_Resolution Parallel
  !_Identifier ctgrAlias: !_Category
    aliases: [CatA1, CatA2]
    name: ctgrAlias
    output: !_TypeRef(_TypeKind)
      typeKind: !_TypeKind Output
      typeName: CtgrAlias
    resolution: !_Resolution Parallel
  !_Identifier ctgrDescr: !_Category
    description: 'First category Second category'
    name: ctgrDescr
    output: !_TypeRef(_TypeKind)
      typeKind: !_TypeKind Output
      typeName: CtgrDescr
    resolution: !_Resolution Parallel
  !_Identifier ctgrDscrs: !_Category
    description: 'A Category described'
    name: ctgrDscrs
    output: !_TypeRef(_TypeKind)
      typeKind: !_TypeKind Output
      typeName: CtgrDscrs
    resolution: !_Resolution Parallel
  !_Identifier ctgrMod: !_Category
    aliases: [CatM1, CatM2]
    modifiers: [!_Modifier {modifierKind: !_ModifierKind Opt}]
    name: ctgrMod
    output: !_TypeRef(_TypeKind)
      typeKind: !_TypeKind Output
      typeName: CtgrMod
    resolution: !_Resolution Parallel
  !_Identifier ctgrOutp: !_Category
    name: ctgrOutp
    output: !_TypeRef(_TypeKind)
      typeKind: !_TypeKind Output
      typeName: CtgrOutp
    resolution: !_Resolution Parallel
  !_Identifier ctgrOutpDict: !_Category
    modifiers: [!_ModifierDictionary {by: '*', modifierKind: !_ModifierKind Dict,
        typeKind: !_SimpleKind Basic}]
    name: ctgrOutpDict
    output: !_TypeRef(_TypeKind)
      typeKind: !_TypeKind Output
      typeName: CtgrOutpDict
    resolution: !_Resolution Parallel
  !_Identifier ctgrOutpList: !_Category
    modifiers: [!_Modifier {modifierKind: !_ModifierKind List}]
    name: ctgrOutpList
    output: !_TypeRef(_TypeKind)
      typeKind: !_TypeKind Output
      typeName: CtgrOutpList
    resolution: !_Resolution Parallel
  !_Identifier ctgrOutpOptl: !_Category
    modifiers: [!_Modifier {modifierKind: !_ModifierKind Opt}]
    name: ctgrOutpOptl
    output: !_TypeRef(_TypeKind)
      typeKind: !_TypeKind Output
      typeName: CtgrOutpOptl
    resolution: !_Resolution Parallel
  !_Identifier descrBtwn: !_Category
    name: descrBtwn
    output: !_TypeRef(_TypeKind)
      typeKind: !_TypeKind Output
      typeName: DescrBtwn
    resolution: !_Resolution Parallel
directives: !_Map_Directives
  !_Identifier Drct: !_Directive
    locations: !_Set(_Location) {Inline: _, Spread: _}
    name: Drct
    repeatable: false
  !_Identifier DrctAlias: !_Directive
    aliases: [DirA1, DirA2]
    locations: !_Set(_Location) {Field: _, Variable: _}
    name: DrctAlias
    repeatable: false
  !_Identifier DrctDescr: !_Directive
    description: 'A directive described'
    locations: !_Set(_Location) {Field: _, Fragment: _, Inline: _,
      Operation: _, Spread: _, Variable: _}
    name: DrctDescr
    repeatable: false
  !_Identifier DrctNoParam: !_Directive
    locations: !_Set(_Location) {Field: _, Fragment: _, Inline: _,
      Operation: _, Spread: _, Variable: _}
    name: DrctNoParam
    repeatable: false
  !_Identifier DrctParam: !_Directive
    locations: !_Set(_Location) {Fragment: _, Operation: _}
    name: DrctParam
    parameters:
    - !_InputParam
      input: InDrctParam
    repeatable: false
  !_Identifier DrctParamDict: !_Directive
    locations: !_Set(_Location) {Field: _, Fragment: _, Inline: _,
      Operation: _, Spread: _, Variable: _}
    name: DrctParamDict
    parameters:
    - !_InputParam
      input: InDrctParamDict
      modifiers: [!_ModifierDictionary {by: String, modifierKind: !_ModifierKind Dict,
          typeKind: !_SimpleKind Basic}]
    repeatable: false
  !_Identifier DrctParamIn: !_Directive
    locations: !_Set(_Location) {Field: _, Fragment: _, Inline: _,
      Operation: _, Spread: _, Variable: _}
    name: DrctParamIn
    parameters:
    - !_InputParam
      input: InDrctParamIn
    repeatable: false
  !_Identifier DrctParamList: !_Directive
    locations: !_Set(_Location) {Field: _, Fragment: _, Inline: _,
      Operation: _, Spread: _, Variable: _}
    name: DrctParamList
    parameters:
    - !_InputParam
      input: InDrctParamList
      modifiers: [!_Modifier {modifierKind: !_ModifierKind List}]
    repeatable: false
  !_Identifier DrctParamOpt: !_Directive
    locations: !_Set(_Location) {Field: _, Fragment: _, Inline: _,
      Operation: _, Spread: _, Variable: _}
    name: DrctParamOpt
    parameters:
    - !_InputParam
      input: InDrctParamOpt
      modifiers: [!_Modifier {modifierKind: !_ModifierKind Opt}]
    repeatable: false
name: Schema
settings: !_Map_Setting
  !_Identifier descr: !_Setting
    description: 'Option Descr'
    name: descr
    value: true
  !_Identifier global: !_Setting
    name: global
    value: true
  !_Identifier merged: !_Setting
    name: merged
    value:
    - true
    - 0
types: !_Map_Type
  !_Identifier AltDualAlt: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: AltDualAlt
      type: !_DualBase
        dual: String
    allFields:
    - !_ObjectFor(_DualField)
      name: alt
      object: AltDualAlt
      type: !_DualBase
        dual: Number
    alternates:
    - !_DualAlternate
      type: !_DualBase
        dual: String
    fields:
    - !_DualField
      name: alt
      type: !_DualBase
        dual: Number
    name: AltDualAlt
    typeKind: !_TypeKind Dual
  !_Identifier AltDualAltModBool: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: AltDualAltModBool
      type: !_DualBase
        dual: String
    allFields:
    - !_ObjectFor(_DualField)
      name: alt
      object: AltDualAltModBool
      type: !_DualBase
        dual: Number
    alternates:
    - !_DualAlternate
      type: !_DualBase
        dual: String
    fields:
    - !_DualField
      name: alt
      type: !_DualBase
        dual: Number
    name: AltDualAltModBool
    typeKind: !_TypeKind Dual
  !_Identifier AltDualAltModParam: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: AltDualAltModParam
      type: !_DualBase
        dual: String
    allFields:
    - !_ObjectFor(_DualField)
      name: alt
      object: AltDualAltModParam
      type: !_DualBase
        dual: Number
    alternates:
    - !_DualAlternate
      type: !_DualBase
        dual: String
    fields:
    - !_DualField
      name: alt
      type: !_DualBase
        dual: Number
    name: AltDualAltModParam
    typeKind: !_TypeKind Dual
  !_Identifier AltDualCnstAltDual: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: PrntDualCnstAltDual
      type: !_DualBase
        dual: String
    allFields:
    - !_ObjectFor(_DualField)
      name: alt
      object: AltDualCnstAltDual
      type: !_DualBase
        dual: Number
    fields:
    - !_DualField
      name: alt
      type: !_DualBase
        dual: Number
    name: AltDualCnstAltDual
    parent: !_DualBase
      dual: PrntDualCnstAltDual
    typeKind: !_TypeKind Dual
  !_Identifier AltDualCnstAltObj: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: PrntDualCnstAltObj
      type: !_DualBase
        dual: String
    allFields:
    - !_ObjectFor(_DualField)
      name: alt
      object: AltDualCnstAltObj
      type: !_DualBase
        dual: Number
    fields:
    - !_DualField
      name: alt
      type: !_DualBase
        dual: Number
    name: AltDualCnstAltObj
    parent: !_DualBase
      dual: PrntDualCnstAltObj
    typeKind: !_TypeKind Dual
  !_Identifier AltDualCnstFieldDual: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: PrntDualCnstFieldDual
      type: !_DualBase
        dual: String
    allFields:
    - !_ObjectFor(_DualField)
      name: alt
      object: AltDualCnstFieldDual
      type: !_DualBase
        dual: Number
    fields:
    - !_DualField
      name: alt
      type: !_DualBase
        dual: Number
    name: AltDualCnstFieldDual
    parent: !_DualBase
      dual: PrntDualCnstFieldDual
    typeKind: !_TypeKind Dual
  !_Identifier AltDualCnstFieldObj: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: PrntDualCnstFieldObj
      type: !_DualBase
        dual: String
    allFields:
    - !_ObjectFor(_DualField)
      name: alt
      object: AltDualCnstFieldObj
      type: !_DualBase
        dual: Number
    fields:
    - !_DualField
      name: alt
      type: !_DualBase
        dual: Number
    name: AltDualCnstFieldObj
    parent: !_DualBase
      dual: PrntDualCnstFieldObj
    typeKind: !_TypeKind Dual
  !_Identifier AltDualCnstPrntDualPrnt: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: PrntDualCnstPrntDualPrnt
      type: !_DualBase
        dual: String
    allFields:
    - !_ObjectFor(_DualField)
      name: alt
      object: AltDualCnstPrntDualPrnt
      type: !_DualBase
        dual: Number
    fields:
    - !_DualField
      name: alt
      type: !_DualBase
        dual: Number
    name: AltDualCnstPrntDualPrnt
    parent: !_DualBase
      dual: PrntDualCnstPrntDualPrnt
    typeKind: !_TypeKind Dual
  !_Identifier AltDualCnstPrntObjPrnt: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: PrntDualCnstPrntObjPrnt
      type: !_DualBase
        dual: String
    allFields:
    - !_ObjectFor(_DualField)
      name: alt
      object: AltDualCnstPrntObjPrnt
      type: !_DualBase
        dual: Number
    fields:
    - !_DualField
      name: alt
      type: !_DualBase
        dual: Number
    name: AltDualCnstPrntObjPrnt
    parent: !_DualBase
      dual: PrntDualCnstPrntObjPrnt
    typeKind: !_TypeKind Dual
  !_Identifier AltDualGnrcAltDual: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: AltDualGnrcAltDual
      type: !_DualBase
        dual: String
    allFields:
    - !_ObjectFor(_DualField)
      name: alt
      object: AltDualGnrcAltDual
      type: !_DualBase
        dual: Number
    alternates:
    - !_DualAlternate
      type: !_DualBase
        dual: String
    fields:
    - !_DualField
      name: alt
      type: !_DualBase
        dual: Number
    name: AltDualGnrcAltDual
    typeKind: !_TypeKind Dual
  !_Identifier AltDualGnrcAltParam: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: AltDualGnrcAltParam
      type: !_DualBase
        dual: String
    allFields:
    - !_ObjectFor(_DualField)
      name: alt
      object: AltDualGnrcAltParam
      type: !_DualBase
        dual: Number
    alternates:
    - !_DualAlternate
      type: !_DualBase
        dual: String
    fields:
    - !_DualField
      name: alt
      type: !_DualBase
        dual: Number
    name: AltDualGnrcAltParam
    typeKind: !_TypeKind Dual
  !_Identifier AltDualGnrcFieldDual: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: AltDualGnrcFieldDual
      type: !_DualBase
        dual: String
    allFields:
    - !_ObjectFor(_DualField)
      name: alt
      object: AltDualGnrcFieldDual
      type: !_DualBase
        dual: Number
    alternates:
    - !_DualAlternate
      type: !_DualBase
        dual: String
    fields:
    - !_DualField
      name: alt
      type: !_DualBase
        dual: Number
    name: AltDualGnrcFieldDual
    typeKind: !_TypeKind Dual
  !_Identifier AltDualGnrcFieldParam: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: AltDualGnrcFieldParam
      type: !_DualBase
        dual: String
    allFields:
    - !_ObjectFor(_DualField)
      name: alt
      object: AltDualGnrcFieldParam
      type: !_DualBase
        dual: Number
    alternates:
    - !_DualAlternate
      type: !_DualBase
        dual: String
    fields:
    - !_DualField
      name: alt
      type: !_DualBase
        dual: Number
    name: AltDualGnrcFieldParam
    typeKind: !_TypeKind Dual
  !_Identifier AltDualGnrcPrntDual: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: AltDualGnrcPrntDual
      type: !_DualBase
        dual: String
    allFields:
    - !_ObjectFor(_DualField)
      name: alt
      object: AltDualGnrcPrntDual
      type: !_DualBase
        dual: Number
    alternates:
    - !_DualAlternate
      type: !_DualBase
        dual: String
    fields:
    - !_DualField
      name: alt
      type: !_DualBase
        dual: Number
    name: AltDualGnrcPrntDual
    typeKind: !_TypeKind Dual
  !_Identifier AltDualGnrcPrntDualPrnt: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: AltDualGnrcPrntDualPrnt
      type: !_DualBase
        dual: String
    allFields:
    - !_ObjectFor(_DualField)
      name: alt
      object: AltDualGnrcPrntDualPrnt
      type: !_DualBase
        dual: Number
    alternates:
    - !_DualAlternate
      type: !_DualBase
        dual: String
    fields:
    - !_DualField
      name: alt
      type: !_DualBase
        dual: Number
    name: AltDualGnrcPrntDualPrnt
    typeKind: !_TypeKind Dual
  !_Identifier AltDualGnrcPrntParam: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: AltDualGnrcPrntParam
      type: !_DualBase
        dual: String
    allFields:
    - !_ObjectFor(_DualField)
      name: alt
      object: AltDualGnrcPrntParam
      type: !_DualBase
        dual: Number
    alternates:
    - !_DualAlternate
      type: !_DualBase
        dual: String
    fields:
    - !_DualField
      name: alt
      type: !_DualBase
        dual: Number
    name: AltDualGnrcPrntParam
    typeKind: !_TypeKind Dual
  !_Identifier AltDualGnrcPrntParamPrnt: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: AltDualGnrcPrntParamPrnt
      type: !_DualBase
        dual: String
    allFields:
    - !_ObjectFor(_DualField)
      name: alt
      object: AltDualGnrcPrntParamPrnt
      type: !_DualBase
        dual: Number
    alternates:
    - !_DualAlternate
      type: !_DualBase
        dual: String
    fields:
    - !_DualField
      name: alt
      type: !_DualBase
        dual: Number
    name: AltDualGnrcPrntParamPrnt
    typeKind: !_TypeKind Dual
  !_Identifier AltInpAlt: !_TypeInput
    allAlternates:
    - !_ObjectFor(_InputAlternate)
      object: AltInpAlt
      type: !_InputBase
        input: String
    allFields:
    - !_ObjectFor(_InputField)
      name: alt
      object: AltInpAlt
      type: !_InputBase
        input: Number
    alternates:
    - !_InputAlternate
      type: !_InputBase
        input: String
    fields:
    - !_InputField
      name: alt
      type: !_InputBase
        input: Number
    name: AltInpAlt
    typeKind: !_TypeKind Input
  !_Identifier AltInpAltModBool: !_TypeInput
    allAlternates:
    - !_ObjectFor(_InputAlternate)
      object: AltInpAltModBool
      type: !_InputBase
        input: String
    allFields:
    - !_ObjectFor(_InputField)
      name: alt
      object: AltInpAltModBool
      type: !_InputBase
        input: Number
    alternates:
    - !_InputAlternate
      type: !_InputBase
        input: String
    fields:
    - !_InputField
      name: alt
      type: !_InputBase
        input: Number
    name: AltInpAltModBool
    typeKind: !_TypeKind Input
  !_Identifier AltInpAltModParam: !_TypeInput
    allAlternates:
    - !_ObjectFor(_InputAlternate)
      object: AltInpAltModParam
      type: !_InputBase
        input: String
    allFields:
    - !_ObjectFor(_InputField)
      name: alt
      object: AltInpAltModParam
      type: !_InputBase
        input: Number
    alternates:
    - !_InputAlternate
      type: !_InputBase
        input: String
    fields:
    - !_InputField
      name: alt
      type: !_InputBase
        input: Number
    name: AltInpAltModParam
    typeKind: !_TypeKind Input
  !_Identifier AltInpCnstAltDual: !_TypeInput
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: PrntInpCnstAltDual
      type: !_DualBase
        dual: String
    allFields:
    - !_ObjectFor(_InputField)
      name: alt
      object: AltInpCnstAltDual
      type: !_InputBase
        input: Number
    fields:
    - !_InputField
      name: alt
      type: !_InputBase
        input: Number
    name: AltInpCnstAltDual
    parent: !_DualBase
      dual: PrntInpCnstAltDual
    typeKind: !_TypeKind Input
  !_Identifier AltInpCnstAltObj: !_TypeInput
    allAlternates:
    - !_ObjectFor(_InputAlternate)
      object: PrntInpCnstAltObj
      type: !_InputBase
        input: String
    allFields:
    - !_ObjectFor(_InputField)
      name: alt
      object: AltInpCnstAltObj
      type: !_InputBase
        input: Number
    fields:
    - !_InputField
      name: alt
      type: !_InputBase
        input: Number
    name: AltInpCnstAltObj
    parent: !_InputBase
      input: PrntInpCnstAltObj
    typeKind: !_TypeKind Input
  !_Identifier AltInpCnstFieldDual: !_TypeInput
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: PrntInpCnstFieldDual
      type: !_DualBase
        dual: String
    allFields:
    - !_ObjectFor(_InputField)
      name: alt
      object: AltInpCnstFieldDual
      type: !_InputBase
        input: Number
    fields:
    - !_InputField
      name: alt
      type: !_InputBase
        input: Number
    name: AltInpCnstFieldDual
    parent: !_DualBase
      dual: PrntInpCnstFieldDual
    typeKind: !_TypeKind Input
  !_Identifier AltInpCnstFieldObj: !_TypeInput
    allAlternates:
    - !_ObjectFor(_InputAlternate)
      object: PrntInpCnstFieldObj
      type: !_InputBase
        input: String
    allFields:
    - !_ObjectFor(_InputField)
      name: alt
      object: AltInpCnstFieldObj
      type: !_InputBase
        input: Number
    fields:
    - !_InputField
      name: alt
      type: !_InputBase
        input: Number
    name: AltInpCnstFieldObj
    parent: !_InputBase
      input: PrntInpCnstFieldObj
    typeKind: !_TypeKind Input
  !_Identifier AltInpCnstPrntDualPrnt: !_TypeInput
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: PrntInpCnstPrntDualPrnt
      type: !_DualBase
        dual: String
    allFields:
    - !_ObjectFor(_InputField)
      name: alt
      object: AltInpCnstPrntDualPrnt
      type: !_InputBase
        input: Number
    fields:
    - !_InputField
      name: alt
      type: !_InputBase
        input: Number
    name: AltInpCnstPrntDualPrnt
    parent: !_DualBase
      dual: PrntInpCnstPrntDualPrnt
    typeKind: !_TypeKind Input
  !_Identifier AltInpCnstPrntObjPrnt: !_TypeInput
    allAlternates:
    - !_ObjectFor(_InputAlternate)
      object: PrntInpCnstPrntObjPrnt
      type: !_InputBase
        input: String
    allFields:
    - !_ObjectFor(_InputField)
      name: alt
      object: AltInpCnstPrntObjPrnt
      type: !_InputBase
        input: Number
    fields:
    - !_InputField
      name: alt
      type: !_InputBase
        input: Number
    name: AltInpCnstPrntObjPrnt
    parent: !_InputBase
      input: PrntInpCnstPrntObjPrnt
    typeKind: !_TypeKind Input
  !_Identifier AltInpGnrcAltDual: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: AltInpGnrcAltDual
      type: !_DualBase
        dual: String
    allFields:
    - !_ObjectFor(_DualField)
      name: alt
      object: AltInpGnrcAltDual
      type: !_DualBase
        dual: Number
    alternates:
    - !_DualAlternate
      type: !_DualBase
        dual: String
    fields:
    - !_DualField
      name: alt
      type: !_DualBase
        dual: Number
    name: AltInpGnrcAltDual
    typeKind: !_TypeKind Dual
  !_Identifier AltInpGnrcAltParam: !_TypeInput
    allAlternates:
    - !_ObjectFor(_InputAlternate)
      object: AltInpGnrcAltParam
      type: !_InputBase
        input: String
    allFields:
    - !_ObjectFor(_InputField)
      name: alt
      object: AltInpGnrcAltParam
      type: !_InputBase
        input: Number
    alternates:
    - !_InputAlternate
      type: !_InputBase
        input: String
    fields:
    - !_InputField
      name: alt
      type: !_InputBase
        input: Number
    name: AltInpGnrcAltParam
    typeKind: !_TypeKind Input
  !_Identifier AltInpGnrcFieldDual: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: AltInpGnrcFieldDual
      type: !_DualBase
        dual: String
    allFields:
    - !_ObjectFor(_DualField)
      name: alt
      object: AltInpGnrcFieldDual
      type: !_DualBase
        dual: Number
    alternates:
    - !_DualAlternate
      type: !_DualBase
        dual: String
    fields:
    - !_DualField
      name: alt
      type: !_DualBase
        dual: Number
    name: AltInpGnrcFieldDual
    typeKind: !_TypeKind Dual
  !_Identifier AltInpGnrcFieldParam: !_TypeInput
    allAlternates:
    - !_ObjectFor(_InputAlternate)
      object: AltInpGnrcFieldParam
      type: !_InputBase
        input: String
    allFields:
    - !_ObjectFor(_InputField)
      name: alt
      object: AltInpGnrcFieldParam
      type: !_InputBase
        input: Number
    alternates:
    - !_InputAlternate
      type: !_InputBase
        input: String
    fields:
    - !_InputField
      name: alt
      type: !_InputBase
        input: Number
    name: AltInpGnrcFieldParam
    typeKind: !_TypeKind Input
  !_Identifier AltInpGnrcPrntDual: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: AltInpGnrcPrntDual
      type: !_DualBase
        dual: String
    allFields:
    - !_ObjectFor(_DualField)
      name: alt
      object: AltInpGnrcPrntDual
      type: !_DualBase
        dual: Number
    alternates:
    - !_DualAlternate
      type: !_DualBase
        dual: String
    fields:
    - !_DualField
      name: alt
      type: !_DualBase
        dual: Number
    name: AltInpGnrcPrntDual
    typeKind: !_TypeKind Dual
  !_Identifier AltInpGnrcPrntDualPrnt: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: AltInpGnrcPrntDualPrnt
      type: !_DualBase
        dual: String
    allFields:
    - !_ObjectFor(_DualField)
      name: alt
      object: AltInpGnrcPrntDualPrnt
      type: !_DualBase
        dual: Number
    alternates:
    - !_DualAlternate
      type: !_DualBase
        dual: String
    fields:
    - !_DualField
      name: alt
      type: !_DualBase
        dual: Number
    name: AltInpGnrcPrntDualPrnt
    typeKind: !_TypeKind Dual
  !_Identifier AltInpGnrcPrntParam: !_TypeInput
    allAlternates:
    - !_ObjectFor(_InputAlternate)
      object: AltInpGnrcPrntParam
      type: !_InputBase
        input: String
    allFields:
    - !_ObjectFor(_InputField)
      name: alt
      object: AltInpGnrcPrntParam
      type: !_InputBase
        input: Number
    alternates:
    - !_InputAlternate
      type: !_InputBase
        input: String
    fields:
    - !_InputField
      name: alt
      type: !_InputBase
        input: Number
    name: AltInpGnrcPrntParam
    typeKind: !_TypeKind Input
  !_Identifier AltInpGnrcPrntParamPrnt: !_TypeInput
    allAlternates:
    - !_ObjectFor(_InputAlternate)
      object: AltInpGnrcPrntParamPrnt
      type: !_InputBase
        input: String
    allFields:
    - !_ObjectFor(_InputField)
      name: alt
      object: AltInpGnrcPrntParamPrnt
      type: !_InputBase
        input: Number
    alternates:
    - !_InputAlternate
      type: !_InputBase
        input: String
    fields:
    - !_InputField
      name: alt
      type: !_InputBase
        input: Number
    name: AltInpGnrcPrntParamPrnt
    typeKind: !_TypeKind Input
  !_Identifier AltOutpAlt: !_TypeOutput
    allAlternates:
    - !_ObjectFor(_OutputAlternate)
      object: AltOutpAlt
      type: !_OutputBase
        output: String
    allFields:
    - !_ObjectFor(_OutputField)
      name: alt
      object: AltOutpAlt
      type: !_OutputBase
        output: Number
    alternates:
    - !_OutputAlternate
      type: !_OutputBase
        output: String
    fields:
    - !_OutputField
      name: alt
      type: !_OutputBase
        output: Number
    name: AltOutpAlt
    typeKind: !_TypeKind Output
  !_Identifier AltOutpAltModBool: !_TypeOutput
    allAlternates:
    - !_ObjectFor(_OutputAlternate)
      object: AltOutpAltModBool
      type: !_OutputBase
        output: String
    allFields:
    - !_ObjectFor(_OutputField)
      name: alt
      object: AltOutpAltModBool
      type: !_OutputBase
        output: Number
    alternates:
    - !_OutputAlternate
      type: !_OutputBase
        output: String
    fields:
    - !_OutputField
      name: alt
      type: !_OutputBase
        output: Number
    name: AltOutpAltModBool
    typeKind: !_TypeKind Output
  !_Identifier AltOutpAltModParam: !_TypeOutput
    allAlternates:
    - !_ObjectFor(_OutputAlternate)
      object: AltOutpAltModParam
      type: !_OutputBase
        output: String
    allFields:
    - !_ObjectFor(_OutputField)
      name: alt
      object: AltOutpAltModParam
      type: !_OutputBase
        output: Number
    alternates:
    - !_OutputAlternate
      type: !_OutputBase
        output: String
    fields:
    - !_OutputField
      name: alt
      type: !_OutputBase
        output: Number
    name: AltOutpAltModParam
    typeKind: !_TypeKind Output
  !_Identifier AltOutpCnstAltDual: !_TypeOutput
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: PrntOutpCnstAltDual
      type: !_DualBase
        dual: String
    allFields:
    - !_ObjectFor(_OutputField)
      name: alt
      object: AltOutpCnstAltDual
      type: !_OutputBase
        output: Number
    fields:
    - !_OutputField
      name: alt
      type: !_OutputBase
        output: Number
    name: AltOutpCnstAltDual
    parent: !_DualBase
      dual: PrntOutpCnstAltDual
    typeKind: !_TypeKind Output
  !_Identifier AltOutpCnstAltObj: !_TypeOutput
    allAlternates:
    - !_ObjectFor(_OutputAlternate)
      object: PrntOutpCnstAltObj
      type: !_OutputBase
        output: String
    allFields:
    - !_ObjectFor(_OutputField)
      name: alt
      object: AltOutpCnstAltObj
      type: !_OutputBase
        output: Number
    fields:
    - !_OutputField
      name: alt
      type: !_OutputBase
        output: Number
    name: AltOutpCnstAltObj
    parent: !_OutputBase
      output: PrntOutpCnstAltObj
    typeKind: !_TypeKind Output
  !_Identifier AltOutpCnstFieldDual: !_TypeOutput
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: PrntOutpCnstFieldDual
      type: !_DualBase
        dual: String
    allFields:
    - !_ObjectFor(_OutputField)
      name: alt
      object: AltOutpCnstFieldDual
      type: !_OutputBase
        output: Number
    fields:
    - !_OutputField
      name: alt
      type: !_OutputBase
        output: Number
    name: AltOutpCnstFieldDual
    parent: !_DualBase
      dual: PrntOutpCnstFieldDual
    typeKind: !_TypeKind Output
  !_Identifier AltOutpCnstFieldObj: !_TypeOutput
    allAlternates:
    - !_ObjectFor(_OutputAlternate)
      object: PrntOutpCnstFieldObj
      type: !_OutputBase
        output: String
    allFields:
    - !_ObjectFor(_OutputField)
      name: alt
      object: AltOutpCnstFieldObj
      type: !_OutputBase
        output: Number
    fields:
    - !_OutputField
      name: alt
      type: !_OutputBase
        output: Number
    name: AltOutpCnstFieldObj
    parent: !_OutputBase
      output: PrntOutpCnstFieldObj
    typeKind: !_TypeKind Output
  !_Identifier AltOutpCnstPrntDualPrnt: !_TypeOutput
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: PrntOutpCnstPrntDualPrnt
      type: !_DualBase
        dual: String
    allFields:
    - !_ObjectFor(_OutputField)
      name: alt
      object: AltOutpCnstPrntDualPrnt
      type: !_OutputBase
        output: Number
    fields:
    - !_OutputField
      name: alt
      type: !_OutputBase
        output: Number
    name: AltOutpCnstPrntDualPrnt
    parent: !_DualBase
      dual: PrntOutpCnstPrntDualPrnt
    typeKind: !_TypeKind Output
  !_Identifier AltOutpCnstPrntObjPrnt: !_TypeOutput
    allAlternates:
    - !_ObjectFor(_OutputAlternate)
      object: PrntOutpCnstPrntObjPrnt
      type: !_OutputBase
        output: String
    allFields:
    - !_ObjectFor(_OutputField)
      name: alt
      object: AltOutpCnstPrntObjPrnt
      type: !_OutputBase
        output: Number
    fields:
    - !_OutputField
      name: alt
      type: !_OutputBase
        output: Number
    name: AltOutpCnstPrntObjPrnt
    parent: !_OutputBase
      output: PrntOutpCnstPrntObjPrnt
    typeKind: !_TypeKind Output
  !_Identifier AltOutpGnrcAltDual: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: AltOutpGnrcAltDual
      type: !_DualBase
        dual: String
    allFields:
    - !_ObjectFor(_DualField)
      name: alt
      object: AltOutpGnrcAltDual
      type: !_DualBase
        dual: Number
    alternates:
    - !_DualAlternate
      type: !_DualBase
        dual: String
    fields:
    - !_DualField
      name: alt
      type: !_DualBase
        dual: Number
    name: AltOutpGnrcAltDual
    typeKind: !_TypeKind Dual
  !_Identifier AltOutpGnrcAltParam: !_TypeOutput
    allAlternates:
    - !_ObjectFor(_OutputAlternate)
      object: AltOutpGnrcAltParam
      type: !_OutputBase
        output: String
    allFields:
    - !_ObjectFor(_OutputField)
      name: alt
      object: AltOutpGnrcAltParam
      type: !_OutputBase
        output: Number
    alternates:
    - !_OutputAlternate
      type: !_OutputBase
        output: String
    fields:
    - !_OutputField
      name: alt
      type: !_OutputBase
        output: Number
    name: AltOutpGnrcAltParam
    typeKind: !_TypeKind Output
  !_Identifier AltOutpGnrcFieldDual: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: AltOutpGnrcFieldDual
      type: !_DualBase
        dual: String
    allFields:
    - !_ObjectFor(_DualField)
      name: alt
      object: AltOutpGnrcFieldDual
      type: !_DualBase
        dual: Number
    alternates:
    - !_DualAlternate
      type: !_DualBase
        dual: String
    fields:
    - !_DualField
      name: alt
      type: !_DualBase
        dual: Number
    name: AltOutpGnrcFieldDual
    typeKind: !_TypeKind Dual
  !_Identifier AltOutpGnrcFieldParam: !_TypeOutput
    allAlternates:
    - !_ObjectFor(_OutputAlternate)
      object: AltOutpGnrcFieldParam
      type: !_OutputBase
        output: String
    allFields:
    - !_ObjectFor(_OutputField)
      name: alt
      object: AltOutpGnrcFieldParam
      type: !_OutputBase
        output: Number
    alternates:
    - !_OutputAlternate
      type: !_OutputBase
        output: String
    fields:
    - !_OutputField
      name: alt
      type: !_OutputBase
        output: Number
    name: AltOutpGnrcFieldParam
    typeKind: !_TypeKind Output
  !_Identifier AltOutpGnrcPrntDual: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: AltOutpGnrcPrntDual
      type: !_DualBase
        dual: String
    allFields:
    - !_ObjectFor(_DualField)
      name: alt
      object: AltOutpGnrcPrntDual
      type: !_DualBase
        dual: Number
    alternates:
    - !_DualAlternate
      type: !_DualBase
        dual: String
    fields:
    - !_DualField
      name: alt
      type: !_DualBase
        dual: Number
    name: AltOutpGnrcPrntDual
    typeKind: !_TypeKind Dual
  !_Identifier AltOutpGnrcPrntDualPrnt: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: AltOutpGnrcPrntDualPrnt
      type: !_DualBase
        dual: String
    allFields:
    - !_ObjectFor(_DualField)
      name: alt
      object: AltOutpGnrcPrntDualPrnt
      type: !_DualBase
        dual: Number
    alternates:
    - !_DualAlternate
      type: !_DualBase
        dual: String
    fields:
    - !_DualField
      name: alt
      type: !_DualBase
        dual: Number
    name: AltOutpGnrcPrntDualPrnt
    typeKind: !_TypeKind Dual
  !_Identifier AltOutpGnrcPrntParam: !_TypeOutput
    allAlternates:
    - !_ObjectFor(_OutputAlternate)
      object: AltOutpGnrcPrntParam
      type: !_OutputBase
        output: String
    allFields:
    - !_ObjectFor(_OutputField)
      name: alt
      object: AltOutpGnrcPrntParam
      type: !_OutputBase
        output: Number
    alternates:
    - !_OutputAlternate
      type: !_OutputBase
        output: String
    fields:
    - !_OutputField
      name: alt
      type: !_OutputBase
        output: Number
    name: AltOutpGnrcPrntParam
    typeKind: !_TypeKind Output
  !_Identifier AltOutpGnrcPrntParamPrnt: !_TypeOutput
    allAlternates:
    - !_ObjectFor(_OutputAlternate)
      object: AltOutpGnrcPrntParamPrnt
      type: !_OutputBase
        output: String
    allFields:
    - !_ObjectFor(_OutputField)
      name: alt
      object: AltOutpGnrcPrntParamPrnt
      type: !_OutputBase
        output: Number
    alternates:
    - !_OutputAlternate
      type: !_OutputBase
        output: String
    fields:
    - !_OutputField
      name: alt
      type: !_OutputBase
        output: Number
    name: AltOutpGnrcPrntParamPrnt
    typeKind: !_TypeKind Output
  !_Identifier Ctgr: !_TypeOutput
    name: Ctgr
    typeKind: !_TypeKind Output
  !_Identifier CtgrAlias: !_TypeOutput
    name: CtgrAlias
    typeKind: !_TypeKind Output
  !_Identifier CtgrDescr: !_TypeOutput
    name: CtgrDescr
    typeKind: !_TypeKind Output
  !_Identifier CtgrDscrs: !_TypeOutput
    name: CtgrDscrs
    typeKind: !_TypeKind Output
  !_Identifier CtgrMod: !_TypeOutput
    name: CtgrMod
    typeKind: !_TypeKind Output
  !_Identifier CtgrOutp: !_TypeOutput
    name: CtgrOutp
    typeKind: !_TypeKind Output
  !_Identifier CtgrOutpDict: !_TypeOutput
    name: CtgrOutpDict
    typeKind: !_TypeKind Output
  !_Identifier CtgrOutpList: !_TypeOutput
    name: CtgrOutpList
    typeKind: !_TypeKind Output
  !_Identifier CtgrOutpOptl: !_TypeOutput
    name: CtgrOutpOptl
    typeKind: !_TypeKind Output
  !_Identifier Descr: !_TypeOutput
    description: 'A simple description'
    name: Descr
    typeKind: !_TypeKind Output
  !_Identifier DescrBcks: !_TypeOutput
    description: 'A backslash ("\") description'
    name: DescrBcks
    typeKind: !_TypeKind Output
  !_Identifier DescrBtwn: !_TypeOutput
    description: 'A description between'
    name: DescrBtwn
    typeKind: !_TypeKind Output
  !_Identifier DescrCmpl: !_TypeOutput
    description: >-
      A "more" 'Complicated' \ description
    name: DescrCmpl
    typeKind: !_TypeKind Output
  !_Identifier DescrDbl: !_TypeOutput
    description: "A 'double-quoted' description"
    name: DescrDbl
    typeKind: !_TypeKind Output
  !_Identifier DescrSngl: !_TypeOutput
    description: 'A "single-quoted" description'
    name: DescrSngl
    typeKind: !_TypeKind Output
  !_Identifier DmnAlias: !_DomainNumber
    aliases: [Num1, Num2]
    domainKind: !_DomainKind Number
    name: DmnAlias
    typeKind: !_TypeKind Domain
  !_Identifier DmnBool: !_DomainBoolean
    allItems:
    - !_DomainItem(_DomainTrueFalse)
      domain: DmnBool
      exclude: false
      value: false
    - !_DomainItem(_DomainTrueFalse)
      domain: DmnBool
      exclude: false
      value: true
    domainKind: !_DomainKind Boolean
    items:
    - !_DomainTrueFalse
      exclude: false
      value: false
    - !_DomainTrueFalse
      exclude: false
      value: true
    name: DmnBool
    typeKind: !_TypeKind Domain
  !_Identifier DmnBoolDescr: !_DomainBoolean
    allItems:
    - !_DomainItem(_DomainTrueFalse)
      domain: DmnBoolDescr
      exclude: false
      value: true
    domainKind: !_DomainKind Boolean
    items:
    - !_DomainTrueFalse
      exclude: false
      value: true
    name: DmnBoolDescr
    typeKind: !_TypeKind Domain
  !_Identifier DmnBoolDiff: !_DomainBoolean
    allItems:
    - !_DomainItem(_DomainTrueFalse)
      domain: DmnBoolDiff
      exclude: false
      value: true
    - !_DomainItem(_DomainTrueFalse)
      domain: DmnBoolDiff
      exclude: false
      value: false
    domainKind: !_DomainKind Boolean
    items:
    - !_DomainTrueFalse
      exclude: false
      value: true
    - !_DomainTrueFalse
      exclude: false
      value: false
    name: DmnBoolDiff
    typeKind: !_TypeKind Domain
  !_Identifier DmnBoolPrnt: !_DomainBoolean
    allItems:
    - !_DomainItem(_DomainTrueFalse)
      domain: PrntDmnBoolPrnt
      exclude: false
      value: true
    - !_DomainItem(_DomainTrueFalse)
      domain: DmnBoolPrnt
      exclude: false
      value: false
    domainKind: !_DomainKind Boolean
    items:
    - !_DomainTrueFalse
      exclude: false
      value: false
    name: DmnBoolPrnt
    parent: !_TypeRef(_SimpleKind)
      typeKind: !_SimpleKind Domain
      typeName: PrntDmnBoolPrnt
    typeKind: !_TypeKind Domain
  !_Identifier DmnBoolSame: !_DomainBoolean
    allItems:
    - !_DomainItem(_DomainTrueFalse)
      domain: DmnBoolSame
      exclude: false
      value: true
    domainKind: !_DomainKind Boolean
    items:
    - !_DomainTrueFalse
      exclude: false
      value: true
    name: DmnBoolSame
    typeKind: !_TypeKind Domain
  !_Identifier DmnEnumAll: !_DomainEnum
    allItems:
    - !_DomainItem(_DomainLabel)
      domain: DmnEnumAll
      exclude: false
      value: !_EnumValue
        label: '*'
        typeKind: !_SimpleKind Enum
        typeName: EnumDmnEnumAll
    domainKind: !_DomainKind Enum
    items:
    - !_DomainLabel
      exclude: false
      value: !_EnumValue
        label: '*'
        typeKind: !_SimpleKind Enum
        typeName: EnumDmnEnumAll
    name: DmnEnumAll
    typeKind: !_TypeKind Domain
  !_Identifier DmnEnumAllDescr: !_DomainEnum
    allItems:
    - !_DomainItem(_DomainLabel)
      domain: DmnEnumAllDescr
      exclude: false
      value: !_EnumValue
        label: '*'
        typeKind: !_SimpleKind Enum
        typeName: EnumDmnEnumAllDescr
    domainKind: !_DomainKind Enum
    items:
    - !_DomainLabel
      exclude: false
      value: !_EnumValue
        label: '*'
        typeKind: !_SimpleKind Enum
        typeName: EnumDmnEnumAllDescr
    name: DmnEnumAllDescr
    typeKind: !_TypeKind Domain
  !_Identifier DmnEnumAllPrnt: !_DomainEnum
    allItems:
    - !_DomainItem(_DomainLabel)
      domain: DmnEnumAllPrnt
      exclude: false
      value: !_EnumValue
        label: '*'
        typeKind: !_SimpleKind Enum
        typeName: EnumDmnEnumAllPrnt
    domainKind: !_DomainKind Enum
    items:
    - !_DomainLabel
      exclude: false
      value: !_EnumValue
        label: '*'
        typeKind: !_SimpleKind Enum
        typeName: EnumDmnEnumAllPrnt
    name: DmnEnumAllPrnt
    typeKind: !_TypeKind Domain
  !_Identifier DmnEnumDescr: !_DomainEnum
    allItems:
    - !_DomainItem(_DomainLabel)
      domain: DmnEnumDescr
      exclude: false
      value: !_EnumValue
        label: dmnEnumDescr
        typeKind: !_SimpleKind Enum
        typeName: EnumDmnEnumDescr
    domainKind: !_DomainKind Enum
    items:
    - !_DomainLabel
      exclude: false
      value: !_EnumValue
        label: dmnEnumDescr
        typeKind: !_SimpleKind Enum
        typeName: EnumDmnEnumDescr
    name: DmnEnumDescr
    typeKind: !_TypeKind Domain
  !_Identifier DmnEnumDiff: !_DomainEnum
    allItems:
    - !_DomainItem(_DomainLabel)
      domain: DmnEnumDiff
      exclude: false
      value: !_EnumValue
        label: true
        typeKind: !_SimpleKind Enum
        typeName: Boolean
    - !_DomainItem(_DomainLabel)
      domain: DmnEnumDiff
      exclude: false
      value: !_EnumValue
        label: false
        typeKind: !_SimpleKind Enum
        typeName: Boolean
    domainKind: !_DomainKind Enum
    items:
    - !_DomainLabel
      exclude: false
      value: !_EnumValue
        label: true
        typeKind: !_SimpleKind Enum
        typeName: Boolean
    - !_DomainLabel
      exclude: false
      value: !_EnumValue
        label: false
        typeKind: !_SimpleKind Enum
        typeName: Boolean
    name: DmnEnumDiff
    typeKind: !_TypeKind Domain
  !_Identifier DmnEnumLabel: !_DomainEnum
    allItems:
    - !_DomainItem(_DomainLabel)
      domain: DmnEnumLabel
      exclude: false
      value: !_EnumValue
        label: dmnEnumLabel
        typeKind: !_SimpleKind Enum
        typeName: EnumDmnEnumLabel
    domainKind: !_DomainKind Enum
    items:
    - !_DomainLabel
      exclude: false
      value: !_EnumValue
        label: dmnEnumLabel
        typeKind: !_SimpleKind Enum
        typeName: EnumDmnEnumLabel
    name: DmnEnumLabel
    typeKind: !_TypeKind Domain
  !_Identifier DmnEnumPrnt: !_DomainEnum
    allItems:
    - !_DomainItem(_DomainLabel)
      domain: PrntDmnEnumPrnt
      exclude: false
      value: !_EnumValue
        label: prnt_dmnEnumPrnt
        typeKind: !_SimpleKind Enum
        typeName: EnumDmnEnumPrnt
    - !_DomainItem(_DomainLabel)
      domain: DmnEnumPrnt
      exclude: false
      value: !_EnumValue
        label: enum_dmnEnumPrnt
        typeKind: !_SimpleKind Enum
        typeName: EnumDmnEnumPrnt
    domainKind: !_DomainKind Enum
    items:
    - !_DomainLabel
      exclude: false
      value: !_EnumValue
        label: enum_dmnEnumPrnt
        typeKind: !_SimpleKind Enum
        typeName: EnumDmnEnumPrnt
    name: DmnEnumPrnt
    parent: !_TypeRef(_SimpleKind)
      typeKind: !_SimpleKind Domain
      typeName: PrntDmnEnumPrnt
    typeKind: !_TypeKind Domain
  !_Identifier DmnEnumSame: !_DomainEnum
    allItems:
    - !_DomainItem(_DomainLabel)
      domain: DmnEnumSame
      exclude: false
      value: !_EnumValue
        label: true
        typeKind: !_SimpleKind Enum
        typeName: Boolean
    domainKind: !_DomainKind Enum
    items:
    - !_DomainLabel
      exclude: false
      value: !_EnumValue
        label: true
        typeKind: !_SimpleKind Enum
        typeName: Boolean
    name: DmnEnumSame
    typeKind: !_TypeKind Domain
  !_Identifier DmnEnumValue: !_DomainEnum
    allItems:
    - !_DomainItem(_DomainLabel)
      domain: DmnEnumValue
      exclude: false
      value: !_EnumValue
        label: dmnEnumValue
        typeKind: !_SimpleKind Enum
        typeName: EnumDmnEnumValue
    domainKind: !_DomainKind Enum
    items:
    - !_DomainLabel
      exclude: false
      value: !_EnumValue
        label: dmnEnumValue
        typeKind: !_SimpleKind Enum
        typeName: EnumDmnEnumValue
    name: DmnEnumValue
    typeKind: !_TypeKind Domain
  !_Identifier DmnEnumValuePrnt: !_DomainEnum
    allItems:
    - !_DomainItem(_DomainLabel)
      domain: DmnEnumValuePrnt
      exclude: false
      value: !_EnumValue
        label: prnt_dmnEnumValuePrnt
        typeKind: !_SimpleKind Enum
        typeName: EnumDmnEnumValuePrnt
    domainKind: !_DomainKind Enum
    items:
    - !_DomainLabel
      exclude: false
      value: !_EnumValue
        label: prnt_dmnEnumValuePrnt
        typeKind: !_SimpleKind Enum
        typeName: EnumDmnEnumValuePrnt
    name: DmnEnumValuePrnt
    typeKind: !_TypeKind Domain
  !_Identifier DmnNmbr: !_DomainNumber
    domainKind: !_DomainKind Number
    name: DmnNmbr
    typeKind: !_TypeKind Domain
  !_Identifier DmnNmbrDescr: !_DomainNumber
    allItems:
    - !_DomainItem(_DomainRange)
      domain: DmnNmbrDescr
      exclude: false
      to: 2
    domainKind: !_DomainKind Number
    items:
    - !_DomainRange
      exclude: false
      to: 2
    name: DmnNmbrDescr
    typeKind: !_TypeKind Domain
  !_Identifier DmnNmbrDiff: !_DomainNumber
    allItems:
    - !_DomainItem(_DomainRange)
      domain: DmnNmbrDiff
      exclude: false
      from: 1
      to: 9
    domainKind: !_DomainKind Number
    items:
    - !_DomainRange
      exclude: false
      from: 1
      to: 9
    name: DmnNmbrDiff
    typeKind: !_TypeKind Domain
  !_Identifier DmnNmbrPrnt: !_DomainNumber
    allItems:
    - !_DomainItem(_DomainRange)
      domain: PrntDmnNmbrPrnt
      exclude: false
      to: 2
    - !_DomainItem(_DomainRange)
      domain: DmnNmbrPrnt
      exclude: false
      from: 2
    domainKind: !_DomainKind Number
    items:
    - !_DomainRange
      exclude: false
      from: 2
    name: DmnNmbrPrnt
    parent: !_TypeRef(_SimpleKind)
      typeKind: !_SimpleKind Domain
      typeName: PrntDmnNmbrPrnt
    typeKind: !_TypeKind Domain
  !_Identifier DmnNmbrSame: !_DomainNumber
    allItems:
    - !_DomainItem(_DomainRange)
      domain: DmnNmbrSame
      exclude: false
      from: 1
      to: 9
    domainKind: !_DomainKind Number
    items:
    - !_DomainRange
      exclude: false
      from: 1
      to: 9
    name: DmnNmbrSame
    typeKind: !_TypeKind Domain
  !_Identifier DmnStr: !_DomainString
    domainKind: !_DomainKind String
    name: DmnStr
    typeKind: !_TypeKind Domain
  !_Identifier DmnStrDescr: !_DomainString
    allItems:
    - !_DomainItem(_DomainRegex)
      domain: DmnStrDescr
      exclude: false
      pattern: a+
    domainKind: !_DomainKind String
    items:
    - !_DomainRegex
      exclude: false
      pattern: a+
    name: DmnStrDescr
    typeKind: !_TypeKind Domain
  !_Identifier DmnStrDiff: !_DomainString
    allItems:
    - !_DomainItem(_DomainRegex)
      domain: DmnStrDiff
      exclude: false
      pattern: a+
    domainKind: !_DomainKind String
    items:
    - !_DomainRegex
      exclude: false
      pattern: a+
    name: DmnStrDiff
    typeKind: !_TypeKind Domain
  !_Identifier DmnStrPrnt: !_DomainString
    allItems:
    - !_DomainItem(_DomainRegex)
      domain: PrntDmnStrPrnt
      exclude: false
      pattern: b+
    - !_DomainItem(_DomainRegex)
      domain: DmnStrPrnt
      exclude: false
      pattern: a+
    domainKind: !_DomainKind String
    items:
    - !_DomainRegex
      exclude: false
      pattern: a+
    name: DmnStrPrnt
    parent: !_TypeRef(_SimpleKind)
      typeKind: !_SimpleKind Domain
      typeName: PrntDmnStrPrnt
    typeKind: !_TypeKind Domain
  !_Identifier DmnStrSame: !_DomainString
    allItems:
    - !_DomainItem(_DomainRegex)
      domain: DmnStrSame
      exclude: false
      pattern: a+
    domainKind: !_DomainKind String
    items:
    - !_DomainRegex
      exclude: false
      pattern: a+
    name: DmnStrSame
    typeKind: !_TypeKind Domain
  !_Identifier DomCnstAltDmn: !_DomainString
    allItems:
    - !_DomainItem(_DomainRegex)
      domain: DomCnstAltDmn
      exclude: false
      pattern: \w+
    domainKind: !_DomainKind String
    items:
    - !_DomainRegex
      exclude: false
      pattern: \w+
    name: DomCnstAltDmn
    typeKind: !_TypeKind Domain
  !_Identifier DomCnstFieldDmn: !_DomainString
    allItems:
    - !_DomainItem(_DomainRegex)
      domain: DomCnstFieldDmn
      exclude: false
      pattern: \w+
    domainKind: !_DomainKind String
    items:
    - !_DomainRegex
      exclude: false
      pattern: \w+
    name: DomCnstFieldDmn
    typeKind: !_TypeKind Domain
  !_Identifier DomGnrcPrntEnumDom: !_DomainEnum
    allItems:
    - !_DomainItem(_DomainLabel)
      domain: DomGnrcPrntEnumDom
      exclude: false
      value: !_EnumValue
        label: gnrcPrntEnumDomLabel
        typeKind: !_SimpleKind Enum
    domainKind: !_DomainKind Enum
    items:
    - !_DomainLabel
      exclude: false
      value: !_EnumValue
        label: gnrcPrntEnumDomLabel
        typeKind: !_SimpleKind Enum
    name: DomGnrcPrntEnumDom
    typeKind: !_TypeKind Domain
  !_Identifier DomGnrcPrntStrDom: !_DomainString
    allItems:
    - !_DomainItem(_DomainRegex)
      domain: DomGnrcPrntStrDom
      exclude: false
      pattern: \w+
    domainKind: !_DomainKind String
    items:
    - !_DomainRegex
      exclude: false
      pattern: \w+
    name: DomGnrcPrntStrDom
    typeKind: !_TypeKind Domain
  !_Identifier DomOutpParamModDmn: !_DomainNumber
    allItems:
    - !_DomainItem(_DomainRange)
      domain: DomOutpParamModDmn
      exclude: false
      from: 1
      to: 10
    domainKind: !_DomainKind Number
    items:
    - !_DomainRange
      exclude: false
      from: 1
      to: 10
    name: DomOutpParamModDmn
    typeKind: !_TypeKind Domain
  !_Identifier DomOutpParamModParam: !_DomainNumber
    allItems:
    - !_DomainItem(_DomainRange)
      domain: DomOutpParamModParam
      exclude: false
      from: 1
      to: 10
    domainKind: !_DomainKind Number
    items:
    - !_DomainRange
      exclude: false
      from: 1
      to: 10
    name: DomOutpParamModParam
    typeKind: !_TypeKind Domain
  !_Identifier Dscrs: !_TypeOutput
    description: >-
      A simple description With extra
    name: Dscrs
    typeKind: !_TypeKind Output
  !_Identifier DualAlt: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: DualAlt
      type: !_DualBase
        dual: AltDualAlt
    alternates:
    - !_DualAlternate
      type: !_DualBase
        dual: AltDualAlt
    name: DualAlt
    typeKind: !_TypeKind Dual
  !_Identifier DualAltDescr: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: DualAltDescr
      type: !_DualBase
        description: 'Test Descr'
        dual: String
    alternates:
    - !_DualAlternate
      type: !_DualBase
        description: 'Test Descr'
        dual: String
    name: DualAltDescr
    typeKind: !_TypeKind Dual
  !_Identifier DualAltDual: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: DualAltDual
      type: !_DualBase
        dual: DualDualAltDual
    alternates:
    - !_DualAlternate
      type: !_DualBase
        dual: DualDualAltDual
    name: DualAltDual
    typeKind: !_TypeKind Dual
  !_Identifier DualAltModBool: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      collections:
      - !_ModifierDictionary
        by: ^
        modifierKind: !_ModifierKind Dict
        typeKind: !_SimpleKind Basic
      object: DualAltModBool
      type: !_DualBase
        dual: AltDualAltModBool
    alternates:
    - !_DualAlternate
      collections:
      - !_ModifierDictionary
        by: ^
        modifierKind: !_ModifierKind Dict
        typeKind: !_SimpleKind Basic
      type: !_DualBase
        dual: AltDualAltModBool
    name: DualAltModBool
    typeKind: !_TypeKind Dual
  !_Identifier DualAltModParam: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      collections:
      - !_ModifierTypeParam
        by: mod
        modifierKind: !_ModifierKind Param
      object: DualAltModParam
      type: !_DualBase
        dual: AltDualAltModParam
    alternates:
    - !_DualAlternate
      collections:
      - !_ModifierTypeParam
        by: mod
        modifierKind: !_ModifierKind Param
      type: !_DualBase
        dual: AltDualAltModParam
    name: DualAltModParam
    typeKind: !_TypeKind Dual
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Basic
        typeName: String
      name: mod
  !_Identifier DualAltSmpl: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: DualAltSmpl
      type: !_DualBase
        dual: String
    alternates:
    - !_DualAlternate
      type: !_DualBase
        dual: String
    name: DualAltSmpl
    typeKind: !_TypeKind Dual
  !_Identifier DualCnstAlt: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: DualCnstAlt
      type: !_DualBase
        typeParam: type
    alternates:
    - !_DualAlternate
      type: !_DualBase
        typeParam: type
    name: DualCnstAlt
    typeKind: !_TypeKind Dual
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Basic
        typeName: Number
      name: type
  !_Identifier DualCnstAltDmn: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: DualCnstAltDmn
      type: !_DualBase
        dual: RefDualCnstAltDmn
        typeArgs:
        - !_DualArg
          dual: DomCnstAltDmn
    alternates:
    - !_DualAlternate
      type: !_DualBase
        dual: RefDualCnstAltDmn
        typeArgs:
        - !_DualArg
          dual: DomCnstAltDmn
    name: DualCnstAltDmn
    typeKind: !_TypeKind Dual
  !_Identifier DualCnstAltDual: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: DualCnstAltDual
      type: !_DualBase
        dual: RefDualCnstAltDual
        typeArgs:
        - !_DualArg
          dual: AltDualCnstAltDual
    alternates:
    - !_DualAlternate
      type: !_DualBase
        dual: RefDualCnstAltDual
        typeArgs:
        - !_DualArg
          dual: AltDualCnstAltDual
    name: DualCnstAltDual
    typeKind: !_TypeKind Dual
  !_Identifier DualCnstAltObj: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: DualCnstAltObj
      type: !_DualBase
        dual: RefDualCnstAltObj
        typeArgs:
        - !_DualArg
          dual: AltDualCnstAltObj
    alternates:
    - !_DualAlternate
      type: !_DualBase
        dual: RefDualCnstAltObj
        typeArgs:
        - !_DualArg
          dual: AltDualCnstAltObj
    name: DualCnstAltObj
    typeKind: !_TypeKind Dual
  !_Identifier DualCnstFieldDmn: !_TypeDual
    allFields:
    - !_ObjectFor(_DualField)
      name: field
      object: RefDualCnstFieldDmn
      type: !_DualBase
        dual: DomCnstFieldDmn
    name: DualCnstFieldDmn
    parent: !_DualBase
      dual: RefDualCnstFieldDmn
      typeArgs:
      - !_DualArg
        dual: DomCnstFieldDmn
    typeKind: !_TypeKind Dual
  !_Identifier DualCnstFieldDual: !_TypeDual
    allFields:
    - !_ObjectFor(_DualField)
      name: field
      object: RefDualCnstFieldDual
      type: !_DualBase
        dual: AltDualCnstFieldDual
    name: DualCnstFieldDual
    parent: !_DualBase
      dual: RefDualCnstFieldDual
      typeArgs:
      - !_DualArg
        dual: AltDualCnstFieldDual
    typeKind: !_TypeKind Dual
  !_Identifier DualCnstFieldObj: !_TypeDual
    allFields:
    - !_ObjectFor(_DualField)
      name: field
      object: RefDualCnstFieldObj
      type: !_DualBase
        dual: AltDualCnstFieldObj
    name: DualCnstFieldObj
    parent: !_DualBase
      dual: RefDualCnstFieldObj
      typeArgs:
      - !_DualArg
        dual: AltDualCnstFieldObj
    typeKind: !_TypeKind Dual
  !_Identifier DualCnstPrntDualPrnt: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: PrntDualCnstPrntDualPrnt
      type: !_DualBase
        dual: String
    allFields:
    - !_ObjectFor(_DualField)
      name: alt
      object: AltDualCnstPrntDualPrnt
      type: !_DualBase
        dual: Number
    name: DualCnstPrntDualPrnt
    parent: !_DualBase
      dual: RefDualCnstPrntDualPrnt
      typeArgs:
      - !_DualArg
        dual: AltDualCnstPrntDualPrnt
    typeKind: !_TypeKind Dual
  !_Identifier DualCnstPrntObjPrnt: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: PrntDualCnstPrntObjPrnt
      type: !_DualBase
        dual: String
    allFields:
    - !_ObjectFor(_DualField)
      name: alt
      object: AltDualCnstPrntObjPrnt
      type: !_DualBase
        dual: Number
    name: DualCnstPrntObjPrnt
    parent: !_DualBase
      dual: RefDualCnstPrntObjPrnt
      typeArgs:
      - !_DualArg
        dual: AltDualCnstPrntObjPrnt
    typeKind: !_TypeKind Dual
  !_Identifier DualDualAltDual: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: DualDualAltDual
      type: !_DualBase
        dual: String
    allFields:
    - !_ObjectFor(_DualField)
      name: alt
      object: DualDualAltDual
      type: !_DualBase
        dual: Number
    alternates:
    - !_DualAlternate
      type: !_DualBase
        dual: String
    fields:
    - !_DualField
      name: alt
      type: !_DualBase
        dual: Number
    name: DualDualAltDual
    typeKind: !_TypeKind Dual
  !_Identifier DualField: !_TypeDual
    allFields:
    - !_ObjectFor(_DualField)
      name: field
      object: DualField
      type: !_DualBase
        dual: String
    fields:
    - !_DualField
      name: field
      type: !_DualBase
        dual: String
    name: DualField
    typeKind: !_TypeKind Dual
  !_Identifier DualFieldDescr: !_TypeDual
    allFields:
    - !_ObjectFor(_DualField)
      description: 'Test Descr'
      name: field
      object: DualFieldDescr
      type: !_DualBase
        dual: String
    fields:
    - !_DualField
      description: 'Test Descr'
      name: field
      type: !_DualBase
        dual: String
    name: DualFieldDescr
    typeKind: !_TypeKind Dual
  !_Identifier DualFieldDual: !_TypeDual
    allFields:
    - !_ObjectFor(_DualField)
      name: field
      object: DualFieldDual
      type: !_DualBase
        dual: FldDualFieldDual
    fields:
    - !_DualField
      name: field
      type: !_DualBase
        dual: FldDualFieldDual
    name: DualFieldDual
    typeKind: !_TypeKind Dual
  !_Identifier DualFieldModEnum: !_TypeDual
    allFields:
    - !_ObjectFor(_DualField)
      modifiers: [!_ModifierDictionary {by: EnumDualFieldModEnum,
          modifierKind: !_ModifierKind Dict, typeKind: !_SimpleKind Enum}]
      name: field
      object: DualFieldModEnum
      type: !_DualBase
        dual: String
    fields:
    - !_DualField
      modifiers: [!_ModifierDictionary {by: EnumDualFieldModEnum,
          modifierKind: !_ModifierKind Dict, typeKind: !_SimpleKind Enum}]
      name: field
      type: !_DualBase
        dual: String
    name: DualFieldModEnum
    typeKind: !_TypeKind Dual
  !_Identifier DualFieldModParam: !_TypeDual
    allFields:
    - !_ObjectFor(_DualField)
      modifiers: [!_ModifierTypeParam {by: mod, modifierKind: !_ModifierKind Param}]
      name: field
      object: DualFieldModParam
      type: !_DualBase
        dual: FldDualFieldModParam
    fields:
    - !_DualField
      modifiers: [!_ModifierTypeParam {by: mod, modifierKind: !_ModifierKind Param}]
      name: field
      type: !_DualBase
        dual: FldDualFieldModParam
    name: DualFieldModParam
    typeKind: !_TypeKind Dual
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Basic
        typeName: String
      name: mod
  !_Identifier DualFieldObj: !_TypeDual
    allFields:
    - !_ObjectFor(_DualField)
      name: field
      object: DualFieldObj
      type: !_DualBase
        dual: FldDualFieldObj
    fields:
    - !_DualField
      name: field
      type: !_DualBase
        dual: FldDualFieldObj
    name: DualFieldObj
    typeKind: !_TypeKind Dual
  !_Identifier DualFieldSmpl: !_TypeDual
    allFields:
    - !_ObjectFor(_DualField)
      name: field
      object: DualFieldSmpl
      type: !_DualBase
        dual: Number
    fields:
    - !_DualField
      name: field
      type: !_DualBase
        dual: Number
    name: DualFieldSmpl
    typeKind: !_TypeKind Dual
  !_Identifier DualFieldTypeDescr: !_TypeDual
    allFields:
    - !_ObjectFor(_DualField)
      name: field
      object: DualFieldTypeDescr
      type: !_DualBase
        description: 'Test Descr'
        dual: Number
    fields:
    - !_DualField
      name: field
      type: !_DualBase
        description: 'Test Descr'
        dual: Number
    name: DualFieldTypeDescr
    typeKind: !_TypeKind Dual
  !_Identifier DualGnrcAlt: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: DualGnrcAlt
      type: !_DualBase
        typeParam: type
    alternates:
    - !_DualAlternate
      type: !_DualBase
        typeParam: type
    name: DualGnrcAlt
    typeKind: !_TypeKind Dual
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Basic
        typeName: String
      name: type
  !_Identifier DualGnrcAltArg: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: DualGnrcAltArg
      type: !_DualBase
        dual: RefDualGnrcAltArg
        typeArgs:
        - !_DualArg
          typeParam: type
    alternates:
    - !_DualAlternate
      type: !_DualBase
        dual: RefDualGnrcAltArg
        typeArgs:
        - !_DualArg
          typeParam: type
    name: DualGnrcAltArg
    typeKind: !_TypeKind Dual
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Basic
        typeName: String
      name: type
  !_Identifier DualGnrcAltArgDescr: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: DualGnrcAltArgDescr
      type: !_DualBase
        dual: RefDualGnrcAltArgDescr
        typeArgs:
        - !_DualArg
          description: 'Test Descr'
          typeParam: type
    alternates:
    - !_DualAlternate
      type: !_DualBase
        dual: RefDualGnrcAltArgDescr
        typeArgs:
        - !_DualArg
          description: 'Test Descr'
          typeParam: type
    name: DualGnrcAltArgDescr
    typeKind: !_TypeKind Dual
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Basic
        typeName: String
      name: type
  !_Identifier DualGnrcAltDual: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: DualGnrcAltDual
      type: !_DualBase
        dual: RefDualGnrcAltDual
        typeArgs:
        - !_DualArg
          dual: AltDualGnrcAltDual
    alternates:
    - !_DualAlternate
      type: !_DualBase
        dual: RefDualGnrcAltDual
        typeArgs:
        - !_DualArg
          dual: AltDualGnrcAltDual
    name: DualGnrcAltDual
    typeKind: !_TypeKind Dual
  !_Identifier DualGnrcAltParam: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: DualGnrcAltParam
      type: !_DualBase
        dual: RefDualGnrcAltParam
        typeArgs:
        - !_DualArg
          dual: AltDualGnrcAltParam
    alternates:
    - !_DualAlternate
      type: !_DualBase
        dual: RefDualGnrcAltParam
        typeArgs:
        - !_DualArg
          dual: AltDualGnrcAltParam
    name: DualGnrcAltParam
    typeKind: !_TypeKind Dual
  !_Identifier DualGnrcAltSmpl: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: DualGnrcAltSmpl
      type: !_DualBase
        dual: RefDualGnrcAltSmpl
        typeArgs:
        - !_DualArg
          dual: String
    alternates:
    - !_DualAlternate
      type: !_DualBase
        dual: RefDualGnrcAltSmpl
        typeArgs:
        - !_DualArg
          dual: String
    name: DualGnrcAltSmpl
    typeKind: !_TypeKind Dual
  !_Identifier DualGnrcDescr: !_TypeDual
    allFields:
    - !_ObjectFor(_DualField)
      name: field
      object: DualGnrcDescr
      type: !_DualBase
        typeParam: type
    fields:
    - !_DualField
      name: field
      type: !_DualBase
        typeParam: type
    name: DualGnrcDescr
    typeKind: !_TypeKind Dual
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Basic
        typeName: String
      description: 'Test Descr'
      name: type
  !_Identifier DualGnrcField: !_TypeDual
    allFields:
    - !_ObjectFor(_DualField)
      name: field
      object: DualGnrcField
      type: !_DualBase
        typeParam: type
    fields:
    - !_DualField
      name: field
      type: !_DualBase
        typeParam: type
    name: DualGnrcField
    typeKind: !_TypeKind Dual
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Basic
        typeName: String
      name: type
  !_Identifier DualGnrcFieldArg: !_TypeDual
    allFields:
    - !_ObjectFor(_DualField)
      name: field
      object: DualGnrcFieldArg
      type: !_DualBase
        dual: RefDualGnrcFieldArg
        typeArgs:
        - !_DualArg
          typeParam: type
    fields:
    - !_DualField
      name: field
      type: !_DualBase
        dual: RefDualGnrcFieldArg
        typeArgs:
        - !_DualArg
          typeParam: type
    name: DualGnrcFieldArg
    typeKind: !_TypeKind Dual
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Basic
        typeName: String
      name: type
  !_Identifier DualGnrcFieldDual: !_TypeDual
    allFields:
    - !_ObjectFor(_DualField)
      name: field
      object: DualGnrcFieldDual
      type: !_DualBase
        dual: RefDualGnrcFieldDual
        typeArgs:
        - !_DualArg
          dual: AltDualGnrcFieldDual
    fields:
    - !_DualField
      name: field
      type: !_DualBase
        dual: RefDualGnrcFieldDual
        typeArgs:
        - !_DualArg
          dual: AltDualGnrcFieldDual
    name: DualGnrcFieldDual
    typeKind: !_TypeKind Dual
  !_Identifier DualGnrcFieldParam: !_TypeDual
    allFields:
    - !_ObjectFor(_DualField)
      name: field
      object: DualGnrcFieldParam
      type: !_DualBase
        dual: RefDualGnrcFieldParam
        typeArgs:
        - !_DualArg
          dual: AltDualGnrcFieldParam
    fields:
    - !_DualField
      name: field
      type: !_DualBase
        dual: RefDualGnrcFieldParam
        typeArgs:
        - !_DualArg
          dual: AltDualGnrcFieldParam
    name: DualGnrcFieldParam
    typeKind: !_TypeKind Dual
  !_Identifier DualGnrcPrnt: !_TypeDual
    name: DualGnrcPrnt
    parent: !_DualBase
      typeParam: type
    typeKind: !_TypeKind Dual
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Basic
        typeName: String
      name: type
  !_Identifier DualGnrcPrntArg: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: RefDualGnrcPrntArg
      type: !_DualBase
        typeParam: ref
    name: DualGnrcPrntArg
    parent: !_DualBase
      dual: RefDualGnrcPrntArg
      typeArgs:
      - !_DualArg
        typeParam: type
    typeKind: !_TypeKind Dual
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Basic
        typeName: String
      name: type
  !_Identifier DualGnrcPrntDual: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: RefDualGnrcPrntDual
      type: !_DualBase
        dual: AltDualGnrcPrntDual
    name: DualGnrcPrntDual
    parent: !_DualBase
      dual: RefDualGnrcPrntDual
      typeArgs:
      - !_DualArg
        dual: AltDualGnrcPrntDual
    typeKind: !_TypeKind Dual
  !_Identifier DualGnrcPrntDualPrnt: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: AltDualGnrcPrntDualPrnt
      type: !_DualBase
        dual: String
    allFields:
    - !_ObjectFor(_DualField)
      name: alt
      object: AltDualGnrcPrntDualPrnt
      type: !_DualBase
        dual: Number
    name: DualGnrcPrntDualPrnt
    parent: !_DualBase
      dual: RefDualGnrcPrntDualPrnt
      typeArgs:
      - !_DualArg
        dual: AltDualGnrcPrntDualPrnt
    typeKind: !_TypeKind Dual
  !_Identifier DualGnrcPrntEnumChild: !_TypeDual
    allFields:
    - !_ObjectFor(_DualField)
      name: field
      object: FieldDualGnrcPrntEnumChild
      type: !_DualBase
        dual: ParentGnrcPrntEnumChild
    name: DualGnrcPrntEnumChild
    parent: !_DualBase
      dual: FieldDualGnrcPrntEnumChild
      typeArgs:
      - !_DualArg
        dual: ParentGnrcPrntEnumChild
    typeKind: !_TypeKind Dual
  !_Identifier DualGnrcPrntEnumDom: !_TypeDual
    allFields:
    - !_ObjectFor(_DualField)
      name: field
      object: FieldDualGnrcPrntEnumDom
      type: !_DualBase
        dual: DomGnrcPrntEnumDom
    name: DualGnrcPrntEnumDom
    parent: !_DualBase
      dual: FieldDualGnrcPrntEnumDom
      typeArgs:
      - !_DualArg
        dual: DomGnrcPrntEnumDom
    typeKind: !_TypeKind Dual
  !_Identifier DualGnrcPrntEnumPrnt: !_TypeDual
    allFields:
    - !_ObjectFor(_DualField)
      name: field
      object: FieldDualGnrcPrntEnumPrnt
      type: !_DualBase
        dual: EnumGnrcPrntEnumPrnt
    name: DualGnrcPrntEnumPrnt
    parent: !_DualBase
      dual: FieldDualGnrcPrntEnumPrnt
      typeArgs:
      - !_DualArg
        dual: EnumGnrcPrntEnumPrnt
    typeKind: !_TypeKind Dual
  !_Identifier DualGnrcPrntParam: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: RefDualGnrcPrntParam
      type: !_DualBase
        dual: AltDualGnrcPrntParam
    name: DualGnrcPrntParam
    parent: !_DualBase
      dual: RefDualGnrcPrntParam
      typeArgs:
      - !_DualArg
        dual: AltDualGnrcPrntParam
    typeKind: !_TypeKind Dual
  !_Identifier DualGnrcPrntParamPrnt: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: AltDualGnrcPrntParamPrnt
      type: !_DualBase
        dual: String
    allFields:
    - !_ObjectFor(_DualField)
      name: alt
      object: AltDualGnrcPrntParamPrnt
      type: !_DualBase
        dual: Number
    name: DualGnrcPrntParamPrnt
    parent: !_DualBase
      dual: RefDualGnrcPrntParamPrnt
      typeArgs:
      - !_DualArg
        dual: AltDualGnrcPrntParamPrnt
    typeKind: !_TypeKind Dual
  !_Identifier DualGnrcPrntSmplEnum: !_TypeDual
    allFields:
    - !_ObjectFor(_DualField)
      name: field
      object: FieldDualGnrcPrntSmplEnum
      type: !_DualBase
        dual: EnumGnrcPrntSmplEnum
    name: DualGnrcPrntSmplEnum
    parent: !_DualBase
      dual: FieldDualGnrcPrntSmplEnum
      typeArgs:
      - !_DualArg
        dual: EnumGnrcPrntSmplEnum
    typeKind: !_TypeKind Dual
  !_Identifier DualGnrcPrntStrDom: !_TypeDual
    allFields:
    - !_ObjectFor(_DualField)
      name: field
      object: FieldDualGnrcPrntStrDom
      type: !_DualBase
        dual: DomGnrcPrntStrDom
    name: DualGnrcPrntStrDom
    parent: !_DualBase
      dual: FieldDualGnrcPrntStrDom
      typeArgs:
      - !_DualArg
        dual: DomGnrcPrntStrDom
    typeKind: !_TypeKind Dual
  !_Identifier DualObj: !_TypeDual
    name: DualObj
    typeKind: !_TypeKind Dual
  !_Identifier DualObjAlias: !_TypeDual
    aliases: [Dual1, Dual2]
    name: DualObjAlias
    typeKind: !_TypeKind Dual
  !_Identifier DualObjAlt: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: DualObjAlt
      type: !_DualBase
        dual: DualObjAltType
    alternates:
    - !_DualAlternate
      type: !_DualBase
        dual: DualObjAltType
    name: DualObjAlt
    typeKind: !_TypeKind Dual
  !_Identifier DualObjAltType: !_TypeDual
    name: DualObjAltType
    typeKind: !_TypeKind Dual
  !_Identifier DualObjCnst: !_TypeDual
    allFields:
    - !_ObjectFor(_DualField)
      name: field
      object: DualObjCnst
      type: !_DualBase
        typeParam: type
    - !_ObjectFor(_DualField)
      name: str
      object: DualObjCnst
      type: !_DualBase
        typeParam: type
    fields:
    - !_DualField
      name: field
      type: !_DualBase
        typeParam: type
    - !_DualField
      name: str
      type: !_DualBase
        typeParam: type
    name: DualObjCnst
    typeKind: !_TypeKind Dual
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Basic
        typeName: String
      name: type
  !_Identifier DualObjField: !_TypeDual
    allFields:
    - !_ObjectFor(_DualField)
      name: field
      object: DualObjField
      type: !_DualBase
        dual: FldDualObjField
    fields:
    - !_DualField
      name: field
      type: !_DualBase
        dual: FldDualObjField
    name: DualObjField
    typeKind: !_TypeKind Dual
  !_Identifier DualObjFieldAlias: !_TypeDual
    allFields:
    - !_ObjectFor(_DualField)
      aliases: [field1, field2]
      name: field
      object: DualObjFieldAlias
      type: !_DualBase
        dual: FldDualObjFieldAlias
    fields:
    - !_DualField
      aliases: [field1, field2]
      name: field
      type: !_DualBase
        dual: FldDualObjFieldAlias
    name: DualObjFieldAlias
    typeKind: !_TypeKind Dual
  !_Identifier DualObjFieldTypeAlias: !_TypeDual
    allFields:
    - !_ObjectFor(_DualField)
      name: field
      object: DualObjFieldTypeAlias
      type: !_DualBase
        dual: String
    fields:
    - !_DualField
      name: field
      type: !_DualBase
        dual: String
    name: DualObjFieldTypeAlias
    typeKind: !_TypeKind Dual
  !_Identifier DualObjParam: !_TypeDual
    allFields:
    - !_ObjectFor(_DualField)
      name: test
      object: DualObjParam
      type: !_DualBase
        typeParam: test
    - !_ObjectFor(_DualField)
      name: type
      object: DualObjParam
      type: !_DualBase
        typeParam: type
    fields:
    - !_DualField
      name: test
      type: !_DualBase
        typeParam: test
    - !_DualField
      name: type
      type: !_DualBase
        typeParam: type
    name: DualObjParam
    typeKind: !_TypeKind Dual
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Basic
        typeName: String
      name: test
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Basic
        typeName: String
      name: type
  !_Identifier DualObjParamCnst: !_TypeDual
    allFields:
    - !_ObjectFor(_DualField)
      name: test
      object: DualObjParamCnst
      type: !_DualBase
        typeParam: test
    - !_ObjectFor(_DualField)
      name: type
      object: DualObjParamCnst
      type: !_DualBase
        typeParam: test
    fields:
    - !_DualField
      name: test
      type: !_DualBase
        typeParam: test
    - !_DualField
      name: type
      type: !_DualBase
        typeParam: test
    name: DualObjParamCnst
    typeKind: !_TypeKind Dual
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Basic
        typeName: String
      name: test
  !_Identifier DualObjParamDup: !_TypeDual
    allFields:
    - !_ObjectFor(_DualField)
      name: test
      object: DualObjParamDup
      type: !_DualBase
        typeParam: test
    - !_ObjectFor(_DualField)
      name: type
      object: DualObjParamDup
      type: !_DualBase
        typeParam: test
    fields:
    - !_DualField
      name: test
      type: !_DualBase
        typeParam: test
    - !_DualField
      name: type
      type: !_DualBase
        typeParam: test
    name: DualObjParamDup
    typeKind: !_TypeKind Dual
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Basic
        typeName: String
      name: test
  !_Identifier DualObjPrnt: !_TypeDual
    name: DualObjPrnt
    parent: !_DualBase
      dual: RefDualObjPrnt
    typeKind: !_TypeKind Dual
  !_Identifier DualPrnt: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: RefDualPrnt
      type: !_DualBase
        dual: String
    allFields:
    - !_ObjectFor(_DualField)
      name: parent
      object: RefDualPrnt
      type: !_DualBase
        dual: Number
    name: DualPrnt
    parent: !_DualBase
      dual: RefDualPrnt
    typeKind: !_TypeKind Dual
  !_Identifier DualPrntAlt: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: RefDualPrntAlt
      type: !_DualBase
        dual: String
    - !_ObjectFor(_DualAlternate)
      object: DualPrntAlt
      type: !_DualBase
        dual: Number
    allFields:
    - !_ObjectFor(_DualField)
      name: parent
      object: RefDualPrntAlt
      type: !_DualBase
        dual: Number
    alternates:
    - !_DualAlternate
      type: !_DualBase
        dual: Number
    name: DualPrntAlt
    parent: !_DualBase
      dual: RefDualPrntAlt
    typeKind: !_TypeKind Dual
  !_Identifier DualPrntDescr: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: RefDualPrntDescr
      type: !_DualBase
        dual: String
    allFields:
    - !_ObjectFor(_DualField)
      name: parent
      object: RefDualPrntDescr
      type: !_DualBase
        dual: Number
    name: DualPrntDescr
    parent: !_DualBase
      description: 'Test Descr'
      dual: RefDualPrntDescr
    typeKind: !_TypeKind Dual
  !_Identifier DualPrntDual: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: RefDualPrntDual
      type: !_DualBase
        dual: String
    allFields:
    - !_ObjectFor(_DualField)
      name: parent
      object: RefDualPrntDual
      type: !_DualBase
        dual: Number
    name: DualPrntDual
    parent: !_DualBase
      dual: RefDualPrntDual
    typeKind: !_TypeKind Dual
  !_Identifier DualPrntField: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: RefDualPrntField
      type: !_DualBase
        dual: String
    allFields:
    - !_ObjectFor(_DualField)
      name: parent
      object: RefDualPrntField
      type: !_DualBase
        dual: Number
    - !_ObjectFor(_DualField)
      name: field
      object: DualPrntField
      type: !_DualBase
        dual: Number
    fields:
    - !_DualField
      name: field
      type: !_DualBase
        dual: Number
    name: DualPrntField
    parent: !_DualBase
      dual: RefDualPrntField
    typeKind: !_TypeKind Dual
  !_Identifier DualPrntParamDiff: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: RefDualPrntParamDiff
      type: !_DualBase
        typeParam: b
    allFields:
    - !_ObjectFor(_DualField)
      name: field
      object: DualPrntParamDiff
      type: !_DualBase
        typeParam: a
    fields:
    - !_DualField
      name: field
      type: !_DualBase
        typeParam: a
    name: DualPrntParamDiff
    parent: !_DualBase
      dual: RefDualPrntParamDiff
      typeArgs:
      - !_DualArg
        typeParam: a
    typeKind: !_TypeKind Dual
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Basic
        typeName: String
      name: a
  !_Identifier DualPrntParamSame: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: RefDualPrntParamSame
      type: !_DualBase
        typeParam: a
    allFields:
    - !_ObjectFor(_DualField)
      name: field
      object: DualPrntParamSame
      type: !_DualBase
        typeParam: a
    fields:
    - !_DualField
      name: field
      type: !_DualBase
        typeParam: a
    name: DualPrntParamSame
    parent: !_DualBase
      dual: RefDualPrntParamSame
      typeArgs:
      - !_DualArg
        typeParam: a
    typeKind: !_TypeKind Dual
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Basic
        typeName: String
      name: a
  !_Identifier DupDmnEnumUnqPrnt: !_TypeEnum
    allItems:
    - !_EnumLabel
      enum: DupDmnEnumUnqPrnt
      name: dmnEnumUnqPrnt
    - !_EnumLabel
      enum: DupDmnEnumUnqPrnt
      name: dup_dmnEnumUnqPrnt
    items:
    - !_Aliased
      name: dmnEnumUnqPrnt
    - !_Aliased
      name: dup_dmnEnumUnqPrnt
    name: DupDmnEnumUnqPrnt
    typeKind: !_TypeKind Enum
  !_Identifier EnumAlias: !_TypeEnum
    aliases: [En1, En2]
    allItems:
    - !_EnumLabel
      enum: EnumAlias
      name: enumAlias
    items:
    - !_Aliased
      name: enumAlias
    name: EnumAlias
    typeKind: !_TypeKind Enum
  !_Identifier EnumDescr: !_TypeEnum
    allItems:
    - !_EnumLabel
      description: 'Enum Descr'
      enum: EnumDescr
      name: enumDescr
    items:
    - !_Aliased
      description: 'Enum Descr'
      name: enumDescr
    name: EnumDescr
    typeKind: !_TypeKind Enum
  !_Identifier EnumDiff: !_TypeEnum
    allItems:
    - !_EnumLabel
      enum: EnumDiff
      name: one
    - !_EnumLabel
      enum: EnumDiff
      name: two
    items:
    - !_Aliased
      name: one
    - !_Aliased
      name: two
    name: EnumDiff
    typeKind: !_TypeKind Enum
  !_Identifier EnumDmnEnumAll: !_TypeEnum
    allItems:
    - !_EnumLabel
      enum: EnumDmnEnumAll
      name: dmnEnumAll
    - !_EnumLabel
      enum: EnumDmnEnumAll
      name: enum_dmnEnumAll
    items:
    - !_Aliased
      name: dmnEnumAll
    - !_Aliased
      name: enum_dmnEnumAll
    name: EnumDmnEnumAll
    typeKind: !_TypeKind Enum
  !_Identifier EnumDmnEnumAllDescr: !_TypeEnum
    allItems:
    - !_EnumLabel
      enum: EnumDmnEnumAllDescr
      name: dmnEnumAllDescr
    - !_EnumLabel
      enum: EnumDmnEnumAllDescr
      name: enum_dmnEnumAllDescr
    items:
    - !_Aliased
      name: dmnEnumAllDescr
    - !_Aliased
      name: enum_dmnEnumAllDescr
    name: EnumDmnEnumAllDescr
    typeKind: !_TypeKind Enum
  !_Identifier EnumDmnEnumAllPrnt: !_TypeEnum
    allItems:
    - !_EnumLabel
      enum: PrntDmnEnumAllPrnt
      name: prnt_dmnEnumAllPrnt
    - !_EnumLabel
      enum: EnumDmnEnumAllPrnt
      name: dmnEnumAllPrnt
    items:
    - !_Aliased
      name: dmnEnumAllPrnt
    name: EnumDmnEnumAllPrnt
    parent: !_TypeRef(_SimpleKind)
      typeKind: !_SimpleKind Enum
      typeName: PrntDmnEnumAllPrnt
    typeKind: !_TypeKind Enum
  !_Identifier EnumDmnEnumDescr: !_TypeEnum
    allItems:
    - !_EnumLabel
      enum: EnumDmnEnumDescr
      name: dmnEnumDescr
    items:
    - !_Aliased
      name: dmnEnumDescr
    name: EnumDmnEnumDescr
    typeKind: !_TypeKind Enum
  !_Identifier EnumDmnEnumLabel: !_TypeEnum
    allItems:
    - !_EnumLabel
      enum: EnumDmnEnumLabel
      name: dmnEnumLabel
    items:
    - !_Aliased
      name: dmnEnumLabel
    name: EnumDmnEnumLabel
    typeKind: !_TypeKind Enum
  !_Identifier EnumDmnEnumPrnt: !_TypeEnum
    allItems:
    - !_EnumLabel
      enum: EnumDmnEnumPrnt
      name: enum_dmnEnumPrnt
    - !_EnumLabel
      enum: EnumDmnEnumPrnt
      name: prnt_dmnEnumPrnt
    items:
    - !_Aliased
      name: enum_dmnEnumPrnt
    - !_Aliased
      name: prnt_dmnEnumPrnt
    name: EnumDmnEnumPrnt
    typeKind: !_TypeKind Enum
  !_Identifier EnumDmnEnumUnq: !_TypeEnum
    allItems:
    - !_EnumLabel
      enum: EnumDmnEnumUnq
      name: enum_dmnEnumUnq
    - !_EnumLabel
      enum: EnumDmnEnumUnq
      name: dmnEnumUnq
    items:
    - !_Aliased
      name: enum_dmnEnumUnq
    - !_Aliased
      name: dmnEnumUnq
    name: EnumDmnEnumUnq
    typeKind: !_TypeKind Enum
  !_Identifier EnumDmnEnumUnqPrnt: !_TypeEnum
    allItems:
    - !_EnumLabel
      enum: PrntDmnEnumUnqPrnt
      name: dmnEnumUnqPrnt
    - !_EnumLabel
      enum: PrntDmnEnumUnqPrnt
      name: prnt_dmnEnumUnqPrnt
    - !_EnumLabel
      enum: EnumDmnEnumUnqPrnt
      name: enum_dmnEnumUnqPrnt
    items:
    - !_Aliased
      name: enum_dmnEnumUnqPrnt
    name: EnumDmnEnumUnqPrnt
    parent: !_TypeRef(_SimpleKind)
      typeKind: !_SimpleKind Enum
      typeName: PrntDmnEnumUnqPrnt
    typeKind: !_TypeKind Enum
  !_Identifier EnumDmnEnumValue: !_TypeEnum
    allItems:
    - !_EnumLabel
      enum: EnumDmnEnumValue
      name: dmnEnumValue
    items:
    - !_Aliased
      name: dmnEnumValue
    name: EnumDmnEnumValue
    typeKind: !_TypeKind Enum
  !_Identifier EnumDmnEnumValuePrnt: !_TypeEnum
    allItems:
    - !_EnumLabel
      enum: PrntDmnEnumValuePrnt
      name: prnt_dmnEnumValuePrnt
    - !_EnumLabel
      enum: EnumDmnEnumValuePrnt
      name: dmnEnumValuePrnt
    items:
    - !_Aliased
      name: dmnEnumValuePrnt
    name: EnumDmnEnumValuePrnt
    parent: !_TypeRef(_SimpleKind)
      typeKind: !_SimpleKind Enum
      typeName: PrntDmnEnumValuePrnt
    typeKind: !_TypeKind Enum
  !_Identifier EnumDomDup: !_TypeEnum
    allItems:
    - !_EnumLabel
      enum: EnumDomDup
      name: dmnEnumUnq
    - !_EnumLabel
      enum: EnumDomDup
      name: dup_dmnEnumUnq
    items:
    - !_Aliased
      name: dmnEnumUnq
    - !_Aliased
      name: dup_dmnEnumUnq
    name: EnumDomDup
    typeKind: !_TypeKind Enum
  !_Identifier EnumDualFieldModEnum: !_TypeEnum
    allItems:
    - !_EnumLabel
      enum: EnumDualFieldModEnum
      name: value
    items:
    - !_Aliased
      name: value
    name: EnumDualFieldModEnum
    typeKind: !_TypeKind Enum
  !_Identifier EnumGnrcPrntEnumChild: !_TypeEnum
    allItems:
    - !_EnumLabel
      enum: ParentGnrcPrntEnumChild
      name: gnrcPrntEnumChildParent
    - !_EnumLabel
      enum: EnumGnrcPrntEnumChild
      name: gnrcPrntEnumChildLabel
    items:
    - !_Aliased
      name: gnrcPrntEnumChildLabel
    name: EnumGnrcPrntEnumChild
    parent: !_TypeRef(_SimpleKind)
      typeKind: !_SimpleKind Enum
      typeName: ParentGnrcPrntEnumChild
    typeKind: !_TypeKind Enum
  !_Identifier EnumGnrcPrntEnumDom: !_TypeEnum
    allItems:
    - !_EnumLabel
      enum: EnumGnrcPrntEnumDom
      name: gnrcPrntEnumDomLabel
    - !_EnumLabel
      enum: EnumGnrcPrntEnumDom
      name: gnrcPrntEnumDomOther
    items:
    - !_Aliased
      name: gnrcPrntEnumDomLabel
    - !_Aliased
      name: gnrcPrntEnumDomOther
    name: EnumGnrcPrntEnumDom
    typeKind: !_TypeKind Enum
  !_Identifier EnumGnrcPrntEnumPrnt: !_TypeEnum
    allItems:
    - !_EnumLabel
      enum: ParentGnrcPrntEnumPrnt
      name: gnrcPrntEnumPrntParent
    - !_EnumLabel
      enum: EnumGnrcPrntEnumPrnt
      name: gnrcPrntEnumPrntLabel
    items:
    - !_Aliased
      name: gnrcPrntEnumPrntLabel
    name: EnumGnrcPrntEnumPrnt
    parent: !_TypeRef(_SimpleKind)
      typeKind: !_SimpleKind Enum
      typeName: ParentGnrcPrntEnumPrnt
    typeKind: !_TypeKind Enum
  !_Identifier EnumGnrcPrntSmplEnum: !_TypeEnum
    allItems:
    - !_EnumLabel
      enum: EnumGnrcPrntSmplEnum
      name: gnrcPrntSmplEnum
    items:
    - !_Aliased
      name: gnrcPrntSmplEnum
    name: EnumGnrcPrntSmplEnum
    typeKind: !_TypeKind Enum
  !_Identifier EnumInpFieldEnum: !_TypeEnum
    allItems:
    - !_EnumLabel
      enum: EnumInpFieldEnum
      name: inpFieldEnum
    items:
    - !_Aliased
      name: inpFieldEnum
    name: EnumInpFieldEnum
    typeKind: !_TypeKind Enum
  !_Identifier EnumInpFieldModEnum: !_TypeEnum
    allItems:
    - !_EnumLabel
      enum: EnumInpFieldModEnum
      name: value
    items:
    - !_Aliased
      name: value
    name: EnumInpFieldModEnum
    typeKind: !_TypeKind Enum
  !_Identifier EnumOutpCnstDomEnum: !_TypeEnum
    allItems:
    - !_EnumLabel
      enum: EnumOutpCnstDomEnum
      name: outpCnstDomEnum
    - !_EnumLabel
      enum: EnumOutpCnstDomEnum
      name: other
    items:
    - !_Aliased
      name: outpCnstDomEnum
    - !_Aliased
      name: other
    name: EnumOutpCnstDomEnum
    typeKind: !_TypeKind Enum
  !_Identifier EnumOutpCnstEnum: !_TypeEnum
    allItems:
    - !_EnumLabel
      enum: EnumOutpCnstEnum
      name: outpCnstEnum
    items:
    - !_Aliased
      name: outpCnstEnum
    name: EnumOutpCnstEnum
    typeKind: !_TypeKind Enum
  !_Identifier EnumOutpCnstEnumPrnt: !_TypeEnum
    allItems:
    - !_EnumLabel
      enum: ParentOutpCnstEnumPrnt
      name: parentOutpCnstEnumPrnt
    - !_EnumLabel
      enum: EnumOutpCnstEnumPrnt
      name: outpCnstEnumPrnt
    items:
    - !_Aliased
      name: outpCnstEnumPrnt
    name: EnumOutpCnstEnumPrnt
    parent: !_TypeRef(_SimpleKind)
      typeKind: !_SimpleKind Enum
      typeName: ParentOutpCnstEnumPrnt
    typeKind: !_TypeKind Enum
  !_Identifier EnumOutpCnstPrntEnum: !_TypeEnum
    allItems:
    - !_EnumLabel
      enum: ParentOutpCnstPrntEnum
      name: parentOutpCnstPrntEnum
    - !_EnumLabel
      enum: EnumOutpCnstPrntEnum
      name: outpCnstPrntEnum
    items:
    - !_Aliased
      name: outpCnstPrntEnum
    name: EnumOutpCnstPrntEnum
    parent: !_TypeRef(_SimpleKind)
      typeKind: !_SimpleKind Enum
      typeName: ParentOutpCnstPrntEnum
    typeKind: !_TypeKind Enum
  !_Identifier EnumOutpFieldEnum: !_TypeEnum
    allItems:
    - !_EnumLabel
      enum: EnumOutpFieldEnum
      name: outpFieldEnum
    items:
    - !_Aliased
      name: outpFieldEnum
    name: EnumOutpFieldEnum
    typeKind: !_TypeKind Enum
  !_Identifier EnumOutpFieldEnumPrnt: !_TypeEnum
    allItems:
    - !_EnumLabel
      enum: PrntOutpFieldEnumPrnt
      name: prnt_outpFieldEnumPrnt
    - !_EnumLabel
      enum: EnumOutpFieldEnumPrnt
      name: outpFieldEnumPrnt
    items:
    - !_Aliased
      name: outpFieldEnumPrnt
    name: EnumOutpFieldEnumPrnt
    parent: !_TypeRef(_SimpleKind)
      typeKind: !_SimpleKind Enum
      typeName: PrntOutpFieldEnumPrnt
    typeKind: !_TypeKind Enum
  !_Identifier EnumOutpFieldModEnum: !_TypeEnum
    allItems:
    - !_EnumLabel
      enum: EnumOutpFieldModEnum
      name: value
    items:
    - !_Aliased
      name: value
    name: EnumOutpFieldModEnum
    typeKind: !_TypeKind Enum
  !_Identifier EnumOutpFieldValue: !_TypeEnum
    allItems:
    - !_EnumLabel
      enum: EnumOutpFieldValue
      name: outpFieldValue
    items:
    - !_Aliased
      name: outpFieldValue
    name: EnumOutpFieldValue
    typeKind: !_TypeKind Enum
  !_Identifier EnumOutpFieldValueDescr: !_TypeEnum
    allItems:
    - !_EnumLabel
      enum: EnumOutpFieldValueDescr
      name: outpFieldValueDescr
    items:
    - !_Aliased
      name: outpFieldValueDescr
    name: EnumOutpFieldValueDescr
    typeKind: !_TypeKind Enum
  !_Identifier EnumOutpGnrcEnum: !_TypeEnum
    allItems:
    - !_EnumLabel
      enum: EnumOutpGnrcEnum
      name: outpGnrcEnum
    items:
    - !_Aliased
      name: outpGnrcEnum
    name: EnumOutpGnrcEnum
    typeKind: !_TypeKind Enum
  !_Identifier EnumOutpGnrcValue: !_TypeEnum
    allItems:
    - !_EnumLabel
      enum: EnumOutpGnrcValue
      name: outpGnrcValue
    items:
    - !_Aliased
      name: outpGnrcValue
    name: EnumOutpGnrcValue
    typeKind: !_TypeKind Enum
  !_Identifier EnumOutpPrntGnrc: !_TypeEnum
    allItems:
    - !_EnumLabel
      enum: PrntOutpPrntGnrc
      name: prnt_outpPrntGnrc
    - !_EnumLabel
      enum: EnumOutpPrntGnrc
      name: outpPrntGnrc
    items:
    - !_Aliased
      name: outpPrntGnrc
    name: EnumOutpPrntGnrc
    parent: !_TypeRef(_SimpleKind)
      typeKind: !_SimpleKind Enum
      typeName: PrntOutpPrntGnrc
    typeKind: !_TypeKind Enum
  !_Identifier EnumPrnt: !_TypeEnum
    allItems:
    - !_EnumLabel
      enum: PrntEnumPrnt
      name: prnt_enumPrnt
    - !_EnumLabel
      enum: EnumPrnt
      name: enumPrnt
    items:
    - !_Aliased
      name: enumPrnt
    name: EnumPrnt
    parent: !_TypeRef(_SimpleKind)
      typeKind: !_SimpleKind Enum
      typeName: PrntEnumPrnt
    typeKind: !_TypeKind Enum
  !_Identifier EnumPrntAlias: !_TypeEnum
    allItems:
    - !_EnumLabel
      enum: PrntEnumPrntAlias
      name: prnt_enumPrntAlias
    - !_EnumLabel
      enum: EnumPrntAlias
      name: val_enumPrntAlias
    - !_EnumLabel
      aliases: [enumPrntAlias]
      enum: EnumPrntAlias
      name: prnt_enumPrntAlias
    items:
    - !_Aliased
      name: val_enumPrntAlias
    - !_Aliased
      aliases: [enumPrntAlias]
      name: prnt_enumPrntAlias
    name: EnumPrntAlias
    parent: !_TypeRef(_SimpleKind)
      typeKind: !_SimpleKind Enum
      typeName: PrntEnumPrntAlias
    typeKind: !_TypeKind Enum
  !_Identifier EnumPrntDup: !_TypeEnum
    allItems:
    - !_EnumLabel
      aliases: [enumPrntDup]
      enum: PrntEnumPrntDup
      name: prnt_enumPrntDup
    - !_EnumLabel
      enum: EnumPrntDup
      name: enumPrntDup
    items:
    - !_Aliased
      name: enumPrntDup
    name: EnumPrntDup
    parent: !_TypeRef(_SimpleKind)
      typeKind: !_SimpleKind Enum
      typeName: PrntEnumPrntDup
    typeKind: !_TypeKind Enum
  !_Identifier EnumSame: !_TypeEnum
    allItems:
    - !_EnumLabel
      enum: EnumSame
      name: enumSame
    items:
    - !_Aliased
      name: enumSame
    name: EnumSame
    typeKind: !_TypeKind Enum
  !_Identifier EnumSamePrnt: !_TypeEnum
    allItems:
    - !_EnumLabel
      enum: PrntEnumSamePrnt
      name: prnt_enumSamePrnt
    - !_EnumLabel
      enum: EnumSamePrnt
      name: enumSamePrnt
    items:
    - !_Aliased
      name: enumSamePrnt
    name: EnumSamePrnt
    parent: !_TypeRef(_SimpleKind)
      typeKind: !_SimpleKind Enum
      typeName: PrntEnumSamePrnt
    typeKind: !_TypeKind Enum
  !_Identifier EnumValueAlias: !_TypeEnum
    allItems:
    - !_EnumLabel
      aliases: [val1, val2]
      enum: EnumValueAlias
      name: enumValueAlias
    items:
    - !_Aliased
      aliases: [val1, val2]
      name: enumValueAlias
    name: EnumValueAlias
    typeKind: !_TypeKind Enum
  !_Identifier FieldDualGnrcPrntEnumChild: !_TypeDual
    allFields:
    - !_ObjectFor(_DualField)
      name: field
      object: FieldDualGnrcPrntEnumChild
      type: !_DualBase
        typeParam: ref
    fields:
    - !_DualField
      name: field
      type: !_DualBase
        typeParam: ref
    name: FieldDualGnrcPrntEnumChild
    typeKind: !_TypeKind Dual
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Enum
        typeName: EnumGnrcPrntEnumChild
      name: ref
  !_Identifier FieldDualGnrcPrntEnumDom: !_TypeDual
    allFields:
    - !_ObjectFor(_DualField)
      name: field
      object: FieldDualGnrcPrntEnumDom
      type: !_DualBase
        typeParam: ref
    fields:
    - !_DualField
      name: field
      type: !_DualBase
        typeParam: ref
    name: FieldDualGnrcPrntEnumDom
    typeKind: !_TypeKind Dual
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Enum
        typeName: EnumGnrcPrntEnumDom
      name: ref
  !_Identifier FieldDualGnrcPrntEnumPrnt: !_TypeDual
    allFields:
    - !_ObjectFor(_DualField)
      name: field
      object: FieldDualGnrcPrntEnumPrnt
      type: !_DualBase
        typeParam: ref
    fields:
    - !_DualField
      name: field
      type: !_DualBase
        typeParam: ref
    name: FieldDualGnrcPrntEnumPrnt
    typeKind: !_TypeKind Dual
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Enum
        typeName: ParentGnrcPrntEnumPrnt
      name: ref
  !_Identifier FieldDualGnrcPrntSmplEnum: !_TypeDual
    allFields:
    - !_ObjectFor(_DualField)
      name: field
      object: FieldDualGnrcPrntSmplEnum
      type: !_DualBase
        typeParam: ref
    fields:
    - !_DualField
      name: field
      type: !_DualBase
        typeParam: ref
    name: FieldDualGnrcPrntSmplEnum
    typeKind: !_TypeKind Dual
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Internal
        typeName: _Simple
      name: ref
  !_Identifier FieldDualGnrcPrntStrDom: !_TypeDual
    allFields:
    - !_ObjectFor(_DualField)
      name: field
      object: FieldDualGnrcPrntStrDom
      type: !_DualBase
        typeParam: ref
    fields:
    - !_DualField
      name: field
      type: !_DualBase
        typeParam: ref
    name: FieldDualGnrcPrntStrDom
    typeKind: !_TypeKind Dual
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Basic
        typeName: String
      name: ref
  !_Identifier FieldInpGnrcPrntEnumChild: !_TypeInput
    allFields:
    - !_ObjectFor(_InputField)
      name: field
      object: FieldInpGnrcPrntEnumChild
      type: !_InputBase
        typeParam: ref
    fields:
    - !_InputField
      name: field
      type: !_InputBase
        typeParam: ref
    name: FieldInpGnrcPrntEnumChild
    typeKind: !_TypeKind Input
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Enum
        typeName: EnumGnrcPrntEnumChild
      name: ref
  !_Identifier FieldInpGnrcPrntEnumDom: !_TypeInput
    allFields:
    - !_ObjectFor(_InputField)
      name: field
      object: FieldInpGnrcPrntEnumDom
      type: !_InputBase
        typeParam: ref
    fields:
    - !_InputField
      name: field
      type: !_InputBase
        typeParam: ref
    name: FieldInpGnrcPrntEnumDom
    typeKind: !_TypeKind Input
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Enum
        typeName: EnumGnrcPrntEnumDom
      name: ref
  !_Identifier FieldInpGnrcPrntEnumPrnt: !_TypeInput
    allFields:
    - !_ObjectFor(_InputField)
      name: field
      object: FieldInpGnrcPrntEnumPrnt
      type: !_InputBase
        typeParam: ref
    fields:
    - !_InputField
      name: field
      type: !_InputBase
        typeParam: ref
    name: FieldInpGnrcPrntEnumPrnt
    typeKind: !_TypeKind Input
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Enum
        typeName: ParentGnrcPrntEnumPrnt
      name: ref
  !_Identifier FieldInpGnrcPrntSmplEnum: !_TypeInput
    allFields:
    - !_ObjectFor(_InputField)
      name: field
      object: FieldInpGnrcPrntSmplEnum
      type: !_InputBase
        typeParam: ref
    fields:
    - !_InputField
      name: field
      type: !_InputBase
        typeParam: ref
    name: FieldInpGnrcPrntSmplEnum
    typeKind: !_TypeKind Input
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Internal
        typeName: _Simple
      name: ref
  !_Identifier FieldInpGnrcPrntStrDom: !_TypeInput
    allFields:
    - !_ObjectFor(_InputField)
      name: field
      object: FieldInpGnrcPrntStrDom
      type: !_InputBase
        typeParam: ref
    fields:
    - !_InputField
      name: field
      type: !_InputBase
        typeParam: ref
    name: FieldInpGnrcPrntStrDom
    typeKind: !_TypeKind Input
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Basic
        typeName: String
      name: ref
  !_Identifier FieldOutpGnrcPrntEnumChild: !_TypeOutput
    allFields:
    - !_ObjectFor(_OutputField)
      name: field
      object: FieldOutpGnrcPrntEnumChild
      type: !_OutputBase
        typeParam: ref
    fields:
    - !_OutputField
      name: field
      type: !_OutputBase
        typeParam: ref
    name: FieldOutpGnrcPrntEnumChild
    typeKind: !_TypeKind Output
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Enum
        typeName: EnumGnrcPrntEnumChild
      name: ref
  !_Identifier FieldOutpGnrcPrntEnumDom: !_TypeOutput
    allFields:
    - !_ObjectFor(_OutputField)
      name: field
      object: FieldOutpGnrcPrntEnumDom
      type: !_OutputBase
        typeParam: ref
    fields:
    - !_OutputField
      name: field
      type: !_OutputBase
        typeParam: ref
    name: FieldOutpGnrcPrntEnumDom
    typeKind: !_TypeKind Output
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Enum
        typeName: EnumGnrcPrntEnumDom
      name: ref
  !_Identifier FieldOutpGnrcPrntEnumPrnt: !_TypeOutput
    allFields:
    - !_ObjectFor(_OutputField)
      name: field
      object: FieldOutpGnrcPrntEnumPrnt
      type: !_OutputBase
        typeParam: ref
    fields:
    - !_OutputField
      name: field
      type: !_OutputBase
        typeParam: ref
    name: FieldOutpGnrcPrntEnumPrnt
    typeKind: !_TypeKind Output
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Enum
        typeName: ParentGnrcPrntEnumPrnt
      name: ref
  !_Identifier FieldOutpGnrcPrntSmplEnum: !_TypeOutput
    allFields:
    - !_ObjectFor(_OutputField)
      name: field
      object: FieldOutpGnrcPrntSmplEnum
      type: !_OutputBase
        typeParam: ref
    fields:
    - !_OutputField
      name: field
      type: !_OutputBase
        typeParam: ref
    name: FieldOutpGnrcPrntSmplEnum
    typeKind: !_TypeKind Output
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Internal
        typeName: _Simple
      name: ref
  !_Identifier FieldOutpGnrcPrntStrDom: !_TypeOutput
    allFields:
    - !_ObjectFor(_OutputField)
      name: field
      object: FieldOutpGnrcPrntStrDom
      type: !_OutputBase
        typeParam: ref
    fields:
    - !_OutputField
      name: field
      type: !_OutputBase
        typeParam: ref
    name: FieldOutpGnrcPrntStrDom
    typeKind: !_TypeKind Output
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Basic
        typeName: String
      name: ref
  !_Identifier FldDualFieldDual: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: FldDualFieldDual
      type: !_DualBase
        dual: String
    allFields:
    - !_ObjectFor(_DualField)
      name: field
      object: FldDualFieldDual
      type: !_DualBase
        dual: Number
    alternates:
    - !_DualAlternate
      type: !_DualBase
        dual: String
    fields:
    - !_DualField
      name: field
      type: !_DualBase
        dual: Number
    name: FldDualFieldDual
    typeKind: !_TypeKind Dual
  !_Identifier FldDualFieldModParam: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: FldDualFieldModParam
      type: !_DualBase
        dual: String
    allFields:
    - !_ObjectFor(_DualField)
      name: field
      object: FldDualFieldModParam
      type: !_DualBase
        dual: Number
    alternates:
    - !_DualAlternate
      type: !_DualBase
        dual: String
    fields:
    - !_DualField
      name: field
      type: !_DualBase
        dual: Number
    name: FldDualFieldModParam
    typeKind: !_TypeKind Dual
  !_Identifier FldDualFieldObj: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: FldDualFieldObj
      type: !_DualBase
        dual: String
    allFields:
    - !_ObjectFor(_DualField)
      name: field
      object: FldDualFieldObj
      type: !_DualBase
        dual: Number
    alternates:
    - !_DualAlternate
      type: !_DualBase
        dual: String
    fields:
    - !_DualField
      name: field
      type: !_DualBase
        dual: Number
    name: FldDualFieldObj
    typeKind: !_TypeKind Dual
  !_Identifier FldDualObjField: !_TypeDual
    name: FldDualObjField
    typeKind: !_TypeKind Dual
  !_Identifier FldDualObjFieldAlias: !_TypeDual
    name: FldDualObjFieldAlias
    typeKind: !_TypeKind Dual
  !_Identifier FldInpFieldDual: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: FldInpFieldDual
      type: !_DualBase
        dual: String
    allFields:
    - !_ObjectFor(_DualField)
      name: field
      object: FldInpFieldDual
      type: !_DualBase
        dual: Number
    alternates:
    - !_DualAlternate
      type: !_DualBase
        dual: String
    fields:
    - !_DualField
      name: field
      type: !_DualBase
        dual: Number
    name: FldInpFieldDual
    typeKind: !_TypeKind Dual
  !_Identifier FldInpFieldModParam: !_TypeInput
    allAlternates:
    - !_ObjectFor(_InputAlternate)
      object: FldInpFieldModParam
      type: !_InputBase
        input: String
    allFields:
    - !_ObjectFor(_InputField)
      name: field
      object: FldInpFieldModParam
      type: !_InputBase
        input: Number
    alternates:
    - !_InputAlternate
      type: !_InputBase
        input: String
    fields:
    - !_InputField
      name: field
      type: !_InputBase
        input: Number
    name: FldInpFieldModParam
    typeKind: !_TypeKind Input
  !_Identifier FldInpFieldNull: !_TypeDual
    name: FldInpFieldNull
    typeKind: !_TypeKind Dual
  !_Identifier FldInpFieldObj: !_TypeInput
    allAlternates:
    - !_ObjectFor(_InputAlternate)
      object: FldInpFieldObj
      type: !_InputBase
        input: String
    allFields:
    - !_ObjectFor(_InputField)
      name: field
      object: FldInpFieldObj
      type: !_InputBase
        input: Number
    alternates:
    - !_InputAlternate
      type: !_InputBase
        input: String
    fields:
    - !_InputField
      name: field
      type: !_InputBase
        input: Number
    name: FldInpFieldObj
    typeKind: !_TypeKind Input
  !_Identifier FldInpObjField: !_TypeInput
    name: FldInpObjField
    typeKind: !_TypeKind Input
  !_Identifier FldInpObjFieldAlias: !_TypeInput
    name: FldInpObjFieldAlias
    typeKind: !_TypeKind Input
  !_Identifier FldOutpDescrParam: !_TypeDual
    name: FldOutpDescrParam
    typeKind: !_TypeKind Dual
  !_Identifier FldOutpFieldDual: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: FldOutpFieldDual
      type: !_DualBase
        dual: String
    allFields:
    - !_ObjectFor(_DualField)
      name: field
      object: FldOutpFieldDual
      type: !_DualBase
        dual: Number
    alternates:
    - !_DualAlternate
      type: !_DualBase
        dual: String
    fields:
    - !_DualField
      name: field
      type: !_DualBase
        dual: Number
    name: FldOutpFieldDual
    typeKind: !_TypeKind Dual
  !_Identifier FldOutpFieldModParam: !_TypeOutput
    allAlternates:
    - !_ObjectFor(_OutputAlternate)
      object: FldOutpFieldModParam
      type: !_OutputBase
        output: String
    allFields:
    - !_ObjectFor(_OutputField)
      name: field
      object: FldOutpFieldModParam
      type: !_OutputBase
        output: Number
    alternates:
    - !_OutputAlternate
      type: !_OutputBase
        output: String
    fields:
    - !_OutputField
      name: field
      type: !_OutputBase
        output: Number
    name: FldOutpFieldModParam
    typeKind: !_TypeKind Output
  !_Identifier FldOutpFieldObj: !_TypeOutput
    allAlternates:
    - !_ObjectFor(_OutputAlternate)
      object: FldOutpFieldObj
      type: !_OutputBase
        output: String
    allFields:
    - !_ObjectFor(_OutputField)
      name: field
      object: FldOutpFieldObj
      type: !_OutputBase
        output: Number
    alternates:
    - !_OutputAlternate
      type: !_OutputBase
        output: String
    fields:
    - !_OutputField
      name: field
      type: !_OutputBase
        output: Number
    name: FldOutpFieldObj
    typeKind: !_TypeKind Output
  !_Identifier FldOutpFieldParam: !_TypeDual
    name: FldOutpFieldParam
    typeKind: !_TypeKind Dual
  !_Identifier FldOutpObjField: !_TypeOutput
    name: FldOutpObjField
    typeKind: !_TypeKind Output
  !_Identifier FldOutpObjFieldAlias: !_TypeOutput
    name: FldOutpObjFieldAlias
    typeKind: !_TypeKind Output
  !_Identifier FldOutpParam: !_TypeDual
    name: FldOutpParam
    typeKind: !_TypeKind Dual
  !_Identifier FldOutpParamDescr: !_TypeDual
    name: FldOutpParamDescr
    typeKind: !_TypeKind Dual
  !_Identifier FldOutpParamTypeDescr: !_TypeDual
    name: FldOutpParamTypeDescr
    typeKind: !_TypeKind Dual
  !_Identifier FldOutpPrntParam: !_TypeDual
    name: FldOutpPrntParam
    typeKind: !_TypeKind Dual
  !_Identifier InDrctParam: !_TypeInput
    name: InDrctParam
    typeKind: !_TypeKind Input
  !_Identifier InDrctParamDict: !_TypeInput
    name: InDrctParamDict
    typeKind: !_TypeKind Input
  !_Identifier InDrctParamIn: !_TypeInput
    name: InDrctParamIn
    typeKind: !_TypeKind Input
  !_Identifier InDrctParamList: !_TypeInput
    name: InDrctParamList
    typeKind: !_TypeKind Input
  !_Identifier InDrctParamOpt: !_TypeInput
    name: InDrctParamOpt
    typeKind: !_TypeKind Input
  !_Identifier InOutpDescrParam: !_TypeInput
    allAlternates:
    - !_ObjectFor(_InputAlternate)
      object: InOutpDescrParam
      type: !_InputBase
        input: String
    allFields:
    - !_ObjectFor(_InputField)
      name: param
      object: InOutpDescrParam
      type: !_InputBase
        input: Number
    alternates:
    - !_InputAlternate
      type: !_InputBase
        input: String
    fields:
    - !_InputField
      name: param
      type: !_InputBase
        input: Number
    name: InOutpDescrParam
    typeKind: !_TypeKind Input
  !_Identifier InOutpParam: !_TypeInput
    allAlternates:
    - !_ObjectFor(_InputAlternate)
      object: InOutpParam
      type: !_InputBase
        input: String
    allFields:
    - !_ObjectFor(_InputField)
      name: param
      object: InOutpParam
      type: !_InputBase
        input: Number
    alternates:
    - !_InputAlternate
      type: !_InputBase
        input: String
    fields:
    - !_InputField
      name: param
      type: !_InputBase
        input: Number
    name: InOutpParam
    typeKind: !_TypeKind Input
  !_Identifier InOutpParamDescr: !_TypeInput
    allAlternates:
    - !_ObjectFor(_InputAlternate)
      object: InOutpParamDescr
      type: !_InputBase
        input: String
    allFields:
    - !_ObjectFor(_InputField)
      name: param
      object: InOutpParamDescr
      type: !_InputBase
        input: Number
    alternates:
    - !_InputAlternate
      type: !_InputBase
        input: String
    fields:
    - !_InputField
      name: param
      type: !_InputBase
        input: Number
    name: InOutpParamDescr
    typeKind: !_TypeKind Input
  !_Identifier InOutpParamModDmn: !_TypeInput
    allAlternates:
    - !_ObjectFor(_InputAlternate)
      object: InOutpParamModDmn
      type: !_InputBase
        input: String
    allFields:
    - !_ObjectFor(_InputField)
      name: param
      object: InOutpParamModDmn
      type: !_InputBase
        input: Number
    alternates:
    - !_InputAlternate
      type: !_InputBase
        input: String
    fields:
    - !_InputField
      name: param
      type: !_InputBase
        input: Number
    name: InOutpParamModDmn
    typeKind: !_TypeKind Input
  !_Identifier InOutpParamModParam: !_TypeInput
    allAlternates:
    - !_ObjectFor(_InputAlternate)
      object: InOutpParamModParam
      type: !_InputBase
        input: String
    allFields:
    - !_ObjectFor(_InputField)
      name: param
      object: InOutpParamModParam
      type: !_InputBase
        input: Number
    alternates:
    - !_InputAlternate
      type: !_InputBase
        input: String
    fields:
    - !_InputField
      name: param
      type: !_InputBase
        input: Number
    name: InOutpParamModParam
    typeKind: !_TypeKind Input
  !_Identifier InOutpParamTypeDescr: !_TypeInput
    allAlternates:
    - !_ObjectFor(_InputAlternate)
      object: InOutpParamTypeDescr
      type: !_InputBase
        input: String
    allFields:
    - !_ObjectFor(_InputField)
      name: param
      object: InOutpParamTypeDescr
      type: !_InputBase
        input: Number
    alternates:
    - !_InputAlternate
      type: !_InputBase
        input: String
    fields:
    - !_InputField
      name: param
      type: !_InputBase
        input: Number
    name: InOutpParamTypeDescr
    typeKind: !_TypeKind Input
  !_Identifier InOutpPrntParam: !_TypeInput
    allAlternates:
    - !_ObjectFor(_InputAlternate)
      object: InOutpPrntParam
      type: !_InputBase
        input: String
    allFields:
    - !_ObjectFor(_InputField)
      name: param
      object: InOutpPrntParam
      type: !_InputBase
        input: Number
    alternates:
    - !_InputAlternate
      type: !_InputBase
        input: String
    fields:
    - !_InputField
      name: param
      type: !_InputBase
        input: Number
    name: InOutpPrntParam
    typeKind: !_TypeKind Input
  !_Identifier InpAlt: !_TypeInput
    allAlternates:
    - !_ObjectFor(_InputAlternate)
      object: InpAlt
      type: !_InputBase
        input: AltInpAlt
    alternates:
    - !_InputAlternate
      type: !_InputBase
        input: AltInpAlt
    name: InpAlt
    typeKind: !_TypeKind Input
  !_Identifier InpAltDescr: !_TypeInput
    allAlternates:
    - !_ObjectFor(_InputAlternate)
      object: InpAltDescr
      type: !_InputBase
        description: 'Test Descr'
        input: String
    alternates:
    - !_InputAlternate
      type: !_InputBase
        description: 'Test Descr'
        input: String
    name: InpAltDescr
    typeKind: !_TypeKind Input
  !_Identifier InpAltDual: !_TypeInput
    allAlternates:
    - !_ObjectFor(_InputAlternate)
      object: InpAltDual
      type: !_DualBase
        dual: InpDualAltDual
    alternates:
    - !_InputAlternate
      type: !_DualBase
        dual: InpDualAltDual
    name: InpAltDual
    typeKind: !_TypeKind Input
  !_Identifier InpAltModBool: !_TypeInput
    allAlternates:
    - !_ObjectFor(_InputAlternate)
      collections:
      - !_ModifierDictionary
        by: ^
        modifierKind: !_ModifierKind Dict
        typeKind: !_SimpleKind Basic
      object: InpAltModBool
      type: !_InputBase
        input: AltInpAltModBool
    alternates:
    - !_InputAlternate
      collections:
      - !_ModifierDictionary
        by: ^
        modifierKind: !_ModifierKind Dict
        typeKind: !_SimpleKind Basic
      type: !_InputBase
        input: AltInpAltModBool
    name: InpAltModBool
    typeKind: !_TypeKind Input
  !_Identifier InpAltModParam: !_TypeInput
    allAlternates:
    - !_ObjectFor(_InputAlternate)
      collections:
      - !_ModifierTypeParam
        by: mod
        modifierKind: !_ModifierKind Param
      object: InpAltModParam
      type: !_InputBase
        input: AltInpAltModParam
    alternates:
    - !_InputAlternate
      collections:
      - !_ModifierTypeParam
        by: mod
        modifierKind: !_ModifierKind Param
      type: !_InputBase
        input: AltInpAltModParam
    name: InpAltModParam
    typeKind: !_TypeKind Input
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Basic
        typeName: String
      name: mod
  !_Identifier InpAltSmpl: !_TypeInput
    allAlternates:
    - !_ObjectFor(_InputAlternate)
      object: InpAltSmpl
      type: !_InputBase
        input: String
    alternates:
    - !_InputAlternate
      type: !_InputBase
        input: String
    name: InpAltSmpl
    typeKind: !_TypeKind Input
  !_Identifier InpCnstAlt: !_TypeInput
    allAlternates:
    - !_ObjectFor(_InputAlternate)
      object: InpCnstAlt
      type: !_InputBase
        typeParam: type
    alternates:
    - !_InputAlternate
      type: !_InputBase
        typeParam: type
    name: InpCnstAlt
    typeKind: !_TypeKind Input
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Basic
        typeName: Number
      name: type
  !_Identifier InpCnstAltDmn: !_TypeInput
    allAlternates:
    - !_ObjectFor(_InputAlternate)
      object: InpCnstAltDmn
      type: !_InputBase
        input: RefInpCnstAltDmn
        typeArgs:
        - !_InputArg
          input: DomCnstAltDmn
    alternates:
    - !_InputAlternate
      type: !_InputBase
        input: RefInpCnstAltDmn
        typeArgs:
        - !_InputArg
          input: DomCnstAltDmn
    name: InpCnstAltDmn
    typeKind: !_TypeKind Input
  !_Identifier InpCnstAltDual: !_TypeInput
    allAlternates:
    - !_ObjectFor(_InputAlternate)
      object: InpCnstAltDual
      type: !_InputBase
        input: RefInpCnstAltDual
        typeArgs:
        - !_InputArg
          input: AltInpCnstAltDual
    alternates:
    - !_InputAlternate
      type: !_InputBase
        input: RefInpCnstAltDual
        typeArgs:
        - !_InputArg
          input: AltInpCnstAltDual
    name: InpCnstAltDual
    typeKind: !_TypeKind Input
  !_Identifier InpCnstAltObj: !_TypeInput
    allAlternates:
    - !_ObjectFor(_InputAlternate)
      object: InpCnstAltObj
      type: !_InputBase
        input: RefInpCnstAltObj
        typeArgs:
        - !_InputArg
          input: AltInpCnstAltObj
    alternates:
    - !_InputAlternate
      type: !_InputBase
        input: RefInpCnstAltObj
        typeArgs:
        - !_InputArg
          input: AltInpCnstAltObj
    name: InpCnstAltObj
    typeKind: !_TypeKind Input
  !_Identifier InpCnstFieldDmn: !_TypeInput
    allFields:
    - !_ObjectFor(_InputField)
      name: field
      object: RefInpCnstFieldDmn
      type: !_InputBase
        input: DomCnstFieldDmn
    name: InpCnstFieldDmn
    parent: !_InputBase
      input: RefInpCnstFieldDmn
      typeArgs:
      - !_InputArg
        input: DomCnstFieldDmn
    typeKind: !_TypeKind Input
  !_Identifier InpCnstFieldDual: !_TypeInput
    allFields:
    - !_ObjectFor(_InputField)
      name: field
      object: RefInpCnstFieldDual
      type: !_InputBase
        input: AltInpCnstFieldDual
    name: InpCnstFieldDual
    parent: !_InputBase
      input: RefInpCnstFieldDual
      typeArgs:
      - !_InputArg
        input: AltInpCnstFieldDual
    typeKind: !_TypeKind Input
  !_Identifier InpCnstFieldObj: !_TypeInput
    allFields:
    - !_ObjectFor(_InputField)
      name: field
      object: RefInpCnstFieldObj
      type: !_InputBase
        input: AltInpCnstFieldObj
    name: InpCnstFieldObj
    parent: !_InputBase
      input: RefInpCnstFieldObj
      typeArgs:
      - !_InputArg
        input: AltInpCnstFieldObj
    typeKind: !_TypeKind Input
  !_Identifier InpCnstPrntDualPrnt: !_TypeInput
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: PrntInpCnstPrntDualPrnt
      type: !_DualBase
        dual: String
    allFields:
    - !_ObjectFor(_InputField)
      name: alt
      object: AltInpCnstPrntDualPrnt
      type: !_InputBase
        input: Number
    name: InpCnstPrntDualPrnt
    parent: !_InputBase
      input: RefInpCnstPrntDualPrnt
      typeArgs:
      - !_InputArg
        input: AltInpCnstPrntDualPrnt
    typeKind: !_TypeKind Input
  !_Identifier InpCnstPrntObjPrnt: !_TypeInput
    allAlternates:
    - !_ObjectFor(_InputAlternate)
      object: PrntInpCnstPrntObjPrnt
      type: !_InputBase
        input: String
    allFields:
    - !_ObjectFor(_InputField)
      name: alt
      object: AltInpCnstPrntObjPrnt
      type: !_InputBase
        input: Number
    name: InpCnstPrntObjPrnt
    parent: !_InputBase
      input: RefInpCnstPrntObjPrnt
      typeArgs:
      - !_InputArg
        input: AltInpCnstPrntObjPrnt
    typeKind: !_TypeKind Input
  !_Identifier InpDualAltDual: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: InpDualAltDual
      type: !_DualBase
        dual: String
    allFields:
    - !_ObjectFor(_DualField)
      name: alt
      object: InpDualAltDual
      type: !_DualBase
        dual: Number
    alternates:
    - !_DualAlternate
      type: !_DualBase
        dual: String
    fields:
    - !_DualField
      name: alt
      type: !_DualBase
        dual: Number
    name: InpDualAltDual
    typeKind: !_TypeKind Dual
  !_Identifier InpField: !_TypeInput
    allFields:
    - !_ObjectFor(_InputField)
      name: field
      object: InpField
      type: !_InputBase
        input: String
    fields:
    - !_InputField
      name: field
      type: !_InputBase
        input: String
    name: InpField
    typeKind: !_TypeKind Input
  !_Identifier InpFieldDescr: !_TypeInput
    allFields:
    - !_ObjectFor(_InputField)
      description: 'Test Descr'
      name: field
      object: InpFieldDescr
      type: !_InputBase
        input: String
    fields:
    - !_InputField
      description: 'Test Descr'
      name: field
      type: !_InputBase
        input: String
    name: InpFieldDescr
    typeKind: !_TypeKind Input
  !_Identifier InpFieldDescrNmbr: !_TypeInput
    allFields:
    - !_ObjectFor(_InputField)
      default: 0
      description: 'Test Descr'
      name: field
      object: InpFieldDescrNmbr
      type: !_InputBase
        input: Number
    fields:
    - !_InputField
      default: 0
      description: 'Test Descr'
      name: field
      type: !_InputBase
        input: Number
    name: InpFieldDescrNmbr
    typeKind: !_TypeKind Input
  !_Identifier InpFieldDual: !_TypeInput
    allFields:
    - !_ObjectFor(_InputField)
      name: field
      object: InpFieldDual
      type: !_DualBase
        dual: FldInpFieldDual
    fields:
    - !_InputField
      name: field
      type: !_DualBase
        dual: FldInpFieldDual
    name: InpFieldDual
    typeKind: !_TypeKind Input
  !_Identifier InpFieldEnum: !_TypeInput
    allFields:
    - !_ObjectFor(_InputField)
      default: inpFieldEnum
      name: field
      object: InpFieldEnum
      type: !_InputBase
        input: EnumInpFieldEnum
    fields:
    - !_InputField
      default: inpFieldEnum
      name: field
      type: !_InputBase
        input: EnumInpFieldEnum
    name: InpFieldEnum
    typeKind: !_TypeKind Input
  !_Identifier InpFieldModEnum: !_TypeInput
    allFields:
    - !_ObjectFor(_InputField)
      modifiers: [!_ModifierDictionary {by: EnumInpFieldModEnum,
          modifierKind: !_ModifierKind Dict, typeKind: !_SimpleKind Enum}]
      name: field
      object: InpFieldModEnum
      type: !_InputBase
        input: String
    fields:
    - !_InputField
      modifiers: [!_ModifierDictionary {by: EnumInpFieldModEnum,
          modifierKind: !_ModifierKind Dict, typeKind: !_SimpleKind Enum}]
      name: field
      type: !_InputBase
        input: String
    name: InpFieldModEnum
    typeKind: !_TypeKind Input
  !_Identifier InpFieldModParam: !_TypeInput
    allFields:
    - !_ObjectFor(_InputField)
      modifiers: [!_ModifierTypeParam {by: mod, modifierKind: !_ModifierKind Param}]
      name: field
      object: InpFieldModParam
      type: !_InputBase
        input: FldInpFieldModParam
    fields:
    - !_InputField
      modifiers: [!_ModifierTypeParam {by: mod, modifierKind: !_ModifierKind Param}]
      name: field
      type: !_InputBase
        input: FldInpFieldModParam
    name: InpFieldModParam
    typeKind: !_TypeKind Input
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Basic
        typeName: String
      name: mod
  !_Identifier InpFieldNmbr: !_TypeInput
    allFields:
    - !_ObjectFor(_InputField)
      default: 0
      name: field
      object: InpFieldNmbr
      type: !_InputBase
        input: Number
    fields:
    - !_InputField
      default: 0
      name: field
      type: !_InputBase
        input: Number
    name: InpFieldNmbr
    typeKind: !_TypeKind Input
  !_Identifier InpFieldNmbrDescr: !_TypeInput
    allFields:
    - !_ObjectFor(_InputField)
      default: 0
      name: field
      object: InpFieldNmbrDescr
      type: !_InputBase
        description: 'Test Descr'
        input: Number
    fields:
    - !_InputField
      default: 0
      name: field
      type: !_InputBase
        description: 'Test Descr'
        input: Number
    name: InpFieldNmbrDescr
    typeKind: !_TypeKind Input
  !_Identifier InpFieldNull: !_TypeInput
    allFields:
    - !_ObjectFor(_InputField)
      default: !Null null
      modifiers: [!_Modifier {modifierKind: !_ModifierKind Opt}]
      name: field
      object: InpFieldNull
      type: !_DualBase
        dual: FldInpFieldNull
    fields:
    - !_InputField
      default: !Null null
      modifiers: [!_Modifier {modifierKind: !_ModifierKind Opt}]
      name: field
      type: !_DualBase
        dual: FldInpFieldNull
    name: InpFieldNull
    typeKind: !_TypeKind Input
  !_Identifier InpFieldObj: !_TypeInput
    allFields:
    - !_ObjectFor(_InputField)
      name: field
      object: InpFieldObj
      type: !_InputBase
        input: FldInpFieldObj
    fields:
    - !_InputField
      name: field
      type: !_InputBase
        input: FldInpFieldObj
    name: InpFieldObj
    typeKind: !_TypeKind Input
  !_Identifier InpFieldSmpl: !_TypeInput
    allFields:
    - !_ObjectFor(_InputField)
      name: field
      object: InpFieldSmpl
      type: !_InputBase
        input: Number
    fields:
    - !_InputField
      name: field
      type: !_InputBase
        input: Number
    name: InpFieldSmpl
    typeKind: !_TypeKind Input
  !_Identifier InpFieldStr: !_TypeInput
    allFields:
    - !_ObjectFor(_InputField)
      name: field
      object: InpFieldStr
      type: !_InputBase
        input: String
    fields:
    - !_InputField
      name: field
      type: !_InputBase
        input: String
    name: InpFieldStr
    typeKind: !_TypeKind Input
  !_Identifier InpFieldTypeDescr: !_TypeInput
    allFields:
    - !_ObjectFor(_InputField)
      name: field
      object: InpFieldTypeDescr
      type: !_InputBase
        description: 'Test Descr'
        input: Number
    fields:
    - !_InputField
      name: field
      type: !_InputBase
        description: 'Test Descr'
        input: Number
    name: InpFieldTypeDescr
    typeKind: !_TypeKind Input
  !_Identifier InpGnrcAlt: !_TypeInput
    allAlternates:
    - !_ObjectFor(_InputAlternate)
      object: InpGnrcAlt
      type: !_InputBase
        typeParam: type
    alternates:
    - !_InputAlternate
      type: !_InputBase
        typeParam: type
    name: InpGnrcAlt
    typeKind: !_TypeKind Input
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Basic
        typeName: String
      name: type
  !_Identifier InpGnrcAltArg: !_TypeInput
    allAlternates:
    - !_ObjectFor(_InputAlternate)
      object: InpGnrcAltArg
      type: !_InputBase
        input: RefInpGnrcAltArg
        typeArgs:
        - !_InputArg
          typeParam: type
    alternates:
    - !_InputAlternate
      type: !_InputBase
        input: RefInpGnrcAltArg
        typeArgs:
        - !_InputArg
          typeParam: type
    name: InpGnrcAltArg
    typeKind: !_TypeKind Input
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Basic
        typeName: String
      name: type
  !_Identifier InpGnrcAltArgDescr: !_TypeInput
    allAlternates:
    - !_ObjectFor(_InputAlternate)
      object: InpGnrcAltArgDescr
      type: !_InputBase
        input: RefInpGnrcAltArgDescr
        typeArgs:
        - !_InputArg
          description: 'Test Descr'
          typeParam: type
    alternates:
    - !_InputAlternate
      type: !_InputBase
        input: RefInpGnrcAltArgDescr
        typeArgs:
        - !_InputArg
          description: 'Test Descr'
          typeParam: type
    name: InpGnrcAltArgDescr
    typeKind: !_TypeKind Input
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Basic
        typeName: String
      name: type
  !_Identifier InpGnrcAltDual: !_TypeInput
    allAlternates:
    - !_ObjectFor(_InputAlternate)
      object: InpGnrcAltDual
      type: !_InputBase
        input: RefInpGnrcAltDual
        typeArgs:
        - !_DualArg
          dual: AltInpGnrcAltDual
    alternates:
    - !_InputAlternate
      type: !_InputBase
        input: RefInpGnrcAltDual
        typeArgs:
        - !_DualArg
          dual: AltInpGnrcAltDual
    name: InpGnrcAltDual
    typeKind: !_TypeKind Input
  !_Identifier InpGnrcAltParam: !_TypeInput
    allAlternates:
    - !_ObjectFor(_InputAlternate)
      object: InpGnrcAltParam
      type: !_InputBase
        input: RefInpGnrcAltParam
        typeArgs:
        - !_InputArg
          input: AltInpGnrcAltParam
    alternates:
    - !_InputAlternate
      type: !_InputBase
        input: RefInpGnrcAltParam
        typeArgs:
        - !_InputArg
          input: AltInpGnrcAltParam
    name: InpGnrcAltParam
    typeKind: !_TypeKind Input
  !_Identifier InpGnrcAltSmpl: !_TypeInput
    allAlternates:
    - !_ObjectFor(_InputAlternate)
      object: InpGnrcAltSmpl
      type: !_InputBase
        input: RefInpGnrcAltSmpl
        typeArgs:
        - !_InputArg
          input: String
    alternates:
    - !_InputAlternate
      type: !_InputBase
        input: RefInpGnrcAltSmpl
        typeArgs:
        - !_InputArg
          input: String
    name: InpGnrcAltSmpl
    typeKind: !_TypeKind Input
  !_Identifier InpGnrcDescr: !_TypeInput
    allFields:
    - !_ObjectFor(_InputField)
      name: field
      object: InpGnrcDescr
      type: !_InputBase
        typeParam: type
    fields:
    - !_InputField
      name: field
      type: !_InputBase
        typeParam: type
    name: InpGnrcDescr
    typeKind: !_TypeKind Input
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Basic
        typeName: String
      description: 'Test Descr'
      name: type
  !_Identifier InpGnrcField: !_TypeInput
    allFields:
    - !_ObjectFor(_InputField)
      name: field
      object: InpGnrcField
      type: !_InputBase
        typeParam: type
    fields:
    - !_InputField
      name: field
      type: !_InputBase
        typeParam: type
    name: InpGnrcField
    typeKind: !_TypeKind Input
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Basic
        typeName: String
      name: type
  !_Identifier InpGnrcFieldArg: !_TypeInput
    allFields:
    - !_ObjectFor(_InputField)
      name: field
      object: InpGnrcFieldArg
      type: !_InputBase
        input: RefInpGnrcFieldArg
        typeArgs:
        - !_InputArg
          typeParam: type
    fields:
    - !_InputField
      name: field
      type: !_InputBase
        input: RefInpGnrcFieldArg
        typeArgs:
        - !_InputArg
          typeParam: type
    name: InpGnrcFieldArg
    typeKind: !_TypeKind Input
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Basic
        typeName: String
      name: type
  !_Identifier InpGnrcFieldDual: !_TypeInput
    allFields:
    - !_ObjectFor(_InputField)
      name: field
      object: InpGnrcFieldDual
      type: !_InputBase
        input: RefInpGnrcFieldDual
        typeArgs:
        - !_DualArg
          dual: AltInpGnrcFieldDual
    fields:
    - !_InputField
      name: field
      type: !_InputBase
        input: RefInpGnrcFieldDual
        typeArgs:
        - !_DualArg
          dual: AltInpGnrcFieldDual
    name: InpGnrcFieldDual
    typeKind: !_TypeKind Input
  !_Identifier InpGnrcFieldParam: !_TypeInput
    allFields:
    - !_ObjectFor(_InputField)
      name: field
      object: InpGnrcFieldParam
      type: !_InputBase
        input: RefInpGnrcFieldParam
        typeArgs:
        - !_InputArg
          input: AltInpGnrcFieldParam
    fields:
    - !_InputField
      name: field
      type: !_InputBase
        input: RefInpGnrcFieldParam
        typeArgs:
        - !_InputArg
          input: AltInpGnrcFieldParam
    name: InpGnrcFieldParam
    typeKind: !_TypeKind Input
  !_Identifier InpGnrcPrnt: !_TypeInput
    name: InpGnrcPrnt
    parent: !_InputBase
      typeParam: type
    typeKind: !_TypeKind Input
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Basic
        typeName: String
      name: type
  !_Identifier InpGnrcPrntArg: !_TypeInput
    allAlternates:
    - !_ObjectFor(_InputAlternate)
      object: RefInpGnrcPrntArg
      type: !_InputBase
        typeParam: ref
    name: InpGnrcPrntArg
    parent: !_InputBase
      input: RefInpGnrcPrntArg
      typeArgs:
      - !_InputArg
        typeParam: type
    typeKind: !_TypeKind Input
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Basic
        typeName: String
      name: type
  !_Identifier InpGnrcPrntDual: !_TypeInput
    allAlternates:
    - !_ObjectFor(_InputAlternate)
      object: RefInpGnrcPrntDual
      type: !_DualBase
        dual: AltInpGnrcPrntDual
    name: InpGnrcPrntDual
    parent: !_InputBase
      input: RefInpGnrcPrntDual
      typeArgs:
      - !_DualArg
        dual: AltInpGnrcPrntDual
    typeKind: !_TypeKind Input
  !_Identifier InpGnrcPrntDualPrnt: !_TypeInput
    name: InpGnrcPrntDualPrnt
    parent: !_InputBase
      input: RefInpGnrcPrntDualPrnt
      typeArgs:
      - !_DualArg
        dual: AltInpGnrcPrntDualPrnt
    typeKind: !_TypeKind Input
  !_Identifier InpGnrcPrntEnumChild: !_TypeInput
    allFields:
    - !_ObjectFor(_InputField)
      name: field
      object: FieldInpGnrcPrntEnumChild
      type: !_InputBase
        input: ParentGnrcPrntEnumChild
    name: InpGnrcPrntEnumChild
    parent: !_InputBase
      input: FieldInpGnrcPrntEnumChild
      typeArgs:
      - !_InputArg
        input: ParentGnrcPrntEnumChild
    typeKind: !_TypeKind Input
  !_Identifier InpGnrcPrntEnumDom: !_TypeInput
    allFields:
    - !_ObjectFor(_InputField)
      name: field
      object: FieldInpGnrcPrntEnumDom
      type: !_InputBase
        input: DomGnrcPrntEnumDom
    name: InpGnrcPrntEnumDom
    parent: !_InputBase
      input: FieldInpGnrcPrntEnumDom
      typeArgs:
      - !_InputArg
        input: DomGnrcPrntEnumDom
    typeKind: !_TypeKind Input
  !_Identifier InpGnrcPrntEnumPrnt: !_TypeInput
    allFields:
    - !_ObjectFor(_InputField)
      name: field
      object: FieldInpGnrcPrntEnumPrnt
      type: !_InputBase
        input: EnumGnrcPrntEnumPrnt
    name: InpGnrcPrntEnumPrnt
    parent: !_InputBase
      input: FieldInpGnrcPrntEnumPrnt
      typeArgs:
      - !_InputArg
        input: EnumGnrcPrntEnumPrnt
    typeKind: !_TypeKind Input
  !_Identifier InpGnrcPrntParam: !_TypeInput
    allAlternates:
    - !_ObjectFor(_InputAlternate)
      object: RefInpGnrcPrntParam
      type: !_InputBase
        input: AltInpGnrcPrntParam
    name: InpGnrcPrntParam
    parent: !_InputBase
      input: RefInpGnrcPrntParam
      typeArgs:
      - !_InputArg
        input: AltInpGnrcPrntParam
    typeKind: !_TypeKind Input
  !_Identifier InpGnrcPrntParamPrnt: !_TypeInput
    allAlternates:
    - !_ObjectFor(_InputAlternate)
      object: AltInpGnrcPrntParamPrnt
      type: !_InputBase
        input: String
    allFields:
    - !_ObjectFor(_InputField)
      name: alt
      object: AltInpGnrcPrntParamPrnt
      type: !_InputBase
        input: Number
    name: InpGnrcPrntParamPrnt
    parent: !_InputBase
      input: RefInpGnrcPrntParamPrnt
      typeArgs:
      - !_InputArg
        input: AltInpGnrcPrntParamPrnt
    typeKind: !_TypeKind Input
  !_Identifier InpGnrcPrntSmplEnum: !_TypeInput
    allFields:
    - !_ObjectFor(_InputField)
      name: field
      object: FieldInpGnrcPrntSmplEnum
      type: !_InputBase
        input: EnumGnrcPrntSmplEnum
    name: InpGnrcPrntSmplEnum
    parent: !_InputBase
      input: FieldInpGnrcPrntSmplEnum
      typeArgs:
      - !_InputArg
        input: EnumGnrcPrntSmplEnum
    typeKind: !_TypeKind Input
  !_Identifier InpGnrcPrntStrDom: !_TypeInput
    allFields:
    - !_ObjectFor(_InputField)
      name: field
      object: FieldInpGnrcPrntStrDom
      type: !_InputBase
        input: DomGnrcPrntStrDom
    name: InpGnrcPrntStrDom
    parent: !_InputBase
      input: FieldInpGnrcPrntStrDom
      typeArgs:
      - !_InputArg
        input: DomGnrcPrntStrDom
    typeKind: !_TypeKind Input
  !_Identifier InpObj: !_TypeInput
    name: InpObj
    typeKind: !_TypeKind Input
  !_Identifier InpObjAlias: !_TypeInput
    aliases: [Inp1, Inp2]
    name: InpObjAlias
    typeKind: !_TypeKind Input
  !_Identifier InpObjAlt: !_TypeInput
    allAlternates:
    - !_ObjectFor(_InputAlternate)
      object: InpObjAlt
      type: !_InputBase
        input: InpObjAltType
    alternates:
    - !_InputAlternate
      type: !_InputBase
        input: InpObjAltType
    name: InpObjAlt
    typeKind: !_TypeKind Input
  !_Identifier InpObjAltType: !_TypeInput
    name: InpObjAltType
    typeKind: !_TypeKind Input
  !_Identifier InpObjCnst: !_TypeInput
    allFields:
    - !_ObjectFor(_InputField)
      name: field
      object: InpObjCnst
      type: !_InputBase
        typeParam: type
    - !_ObjectFor(_InputField)
      name: str
      object: InpObjCnst
      type: !_InputBase
        typeParam: type
    fields:
    - !_InputField
      name: field
      type: !_InputBase
        typeParam: type
    - !_InputField
      name: str
      type: !_InputBase
        typeParam: type
    name: InpObjCnst
    typeKind: !_TypeKind Input
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Basic
        typeName: String
      name: type
  !_Identifier InpObjField: !_TypeInput
    allFields:
    - !_ObjectFor(_InputField)
      name: field
      object: InpObjField
      type: !_InputBase
        input: FldInpObjField
    fields:
    - !_InputField
      name: field
      type: !_InputBase
        input: FldInpObjField
    name: InpObjField
    typeKind: !_TypeKind Input
  !_Identifier InpObjFieldAlias: !_TypeInput
    allFields:
    - !_ObjectFor(_InputField)
      aliases: [field1, field2]
      name: field
      object: InpObjFieldAlias
      type: !_InputBase
        input: FldInpObjFieldAlias
    fields:
    - !_InputField
      aliases: [field1, field2]
      name: field
      type: !_InputBase
        input: FldInpObjFieldAlias
    name: InpObjFieldAlias
    typeKind: !_TypeKind Input
  !_Identifier InpObjFieldTypeAlias: !_TypeInput
    allFields:
    - !_ObjectFor(_InputField)
      name: field
      object: InpObjFieldTypeAlias
      type: !_InputBase
        input: String
    fields:
    - !_InputField
      name: field
      type: !_InputBase
        input: String
    name: InpObjFieldTypeAlias
    typeKind: !_TypeKind Input
  !_Identifier InpObjParam: !_TypeInput
    allFields:
    - !_ObjectFor(_InputField)
      name: test
      object: InpObjParam
      type: !_InputBase
        typeParam: test
    - !_ObjectFor(_InputField)
      name: type
      object: InpObjParam
      type: !_InputBase
        typeParam: type
    fields:
    - !_InputField
      name: test
      type: !_InputBase
        typeParam: test
    - !_InputField
      name: type
      type: !_InputBase
        typeParam: type
    name: InpObjParam
    typeKind: !_TypeKind Input
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Basic
        typeName: String
      name: test
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Basic
        typeName: String
      name: type
  !_Identifier InpObjParamCnst: !_TypeInput
    allFields:
    - !_ObjectFor(_InputField)
      name: test
      object: InpObjParamCnst
      type: !_InputBase
        typeParam: test
    - !_ObjectFor(_InputField)
      name: type
      object: InpObjParamCnst
      type: !_InputBase
        typeParam: test
    fields:
    - !_InputField
      name: test
      type: !_InputBase
        typeParam: test
    - !_InputField
      name: type
      type: !_InputBase
        typeParam: test
    name: InpObjParamCnst
    typeKind: !_TypeKind Input
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Basic
        typeName: String
      name: test
  !_Identifier InpObjParamDup: !_TypeInput
    allFields:
    - !_ObjectFor(_InputField)
      name: test
      object: InpObjParamDup
      type: !_InputBase
        typeParam: test
    - !_ObjectFor(_InputField)
      name: type
      object: InpObjParamDup
      type: !_InputBase
        typeParam: test
    fields:
    - !_InputField
      name: test
      type: !_InputBase
        typeParam: test
    - !_InputField
      name: type
      type: !_InputBase
        typeParam: test
    name: InpObjParamDup
    typeKind: !_TypeKind Input
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Basic
        typeName: String
      name: test
  !_Identifier InpObjPrnt: !_TypeInput
    name: InpObjPrnt
    parent: !_InputBase
      input: RefInpObjPrnt
    typeKind: !_TypeKind Input
  !_Identifier InpPrnt: !_TypeInput
    allAlternates:
    - !_ObjectFor(_InputAlternate)
      object: RefInpPrnt
      type: !_InputBase
        input: String
    allFields:
    - !_ObjectFor(_InputField)
      name: parent
      object: RefInpPrnt
      type: !_InputBase
        input: Number
    name: InpPrnt
    parent: !_InputBase
      input: RefInpPrnt
    typeKind: !_TypeKind Input
  !_Identifier InpPrntAlt: !_TypeInput
    allAlternates:
    - !_ObjectFor(_InputAlternate)
      object: RefInpPrntAlt
      type: !_InputBase
        input: String
    - !_ObjectFor(_InputAlternate)
      object: InpPrntAlt
      type: !_InputBase
        input: Number
    allFields:
    - !_ObjectFor(_InputField)
      name: parent
      object: RefInpPrntAlt
      type: !_InputBase
        input: Number
    alternates:
    - !_InputAlternate
      type: !_InputBase
        input: Number
    name: InpPrntAlt
    parent: !_InputBase
      input: RefInpPrntAlt
    typeKind: !_TypeKind Input
  !_Identifier InpPrntDescr: !_TypeInput
    allAlternates:
    - !_ObjectFor(_InputAlternate)
      object: RefInpPrntDescr
      type: !_InputBase
        input: String
    allFields:
    - !_ObjectFor(_InputField)
      name: parent
      object: RefInpPrntDescr
      type: !_InputBase
        input: Number
    name: InpPrntDescr
    parent: !_InputBase
      description: 'Test Descr'
      input: RefInpPrntDescr
    typeKind: !_TypeKind Input
  !_Identifier InpPrntDual: !_TypeInput
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: RefInpPrntDual
      type: !_DualBase
        dual: String
    allFields:
    - !_ObjectFor(_DualField)
      name: parent
      object: RefInpPrntDual
      type: !_DualBase
        dual: Number
    name: InpPrntDual
    parent: !_DualBase
      dual: RefInpPrntDual
    typeKind: !_TypeKind Input
  !_Identifier InpPrntField: !_TypeInput
    allAlternates:
    - !_ObjectFor(_InputAlternate)
      object: RefInpPrntField
      type: !_InputBase
        input: String
    allFields:
    - !_ObjectFor(_InputField)
      name: parent
      object: RefInpPrntField
      type: !_InputBase
        input: Number
    - !_ObjectFor(_InputField)
      name: field
      object: InpPrntField
      type: !_InputBase
        input: Number
    fields:
    - !_InputField
      name: field
      type: !_InputBase
        input: Number
    name: InpPrntField
    parent: !_InputBase
      input: RefInpPrntField
    typeKind: !_TypeKind Input
  !_Identifier InpPrntParamDiff: !_TypeInput
    allAlternates:
    - !_ObjectFor(_InputAlternate)
      object: RefInpPrntParamDiff
      type: !_InputBase
        typeParam: b
    allFields:
    - !_ObjectFor(_InputField)
      name: field
      object: InpPrntParamDiff
      type: !_InputBase
        typeParam: a
    fields:
    - !_InputField
      name: field
      type: !_InputBase
        typeParam: a
    name: InpPrntParamDiff
    parent: !_InputBase
      input: RefInpPrntParamDiff
      typeArgs:
      - !_InputArg
        typeParam: a
    typeKind: !_TypeKind Input
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Basic
        typeName: String
      name: a
  !_Identifier InpPrntParamSame: !_TypeInput
    allAlternates:
    - !_ObjectFor(_InputAlternate)
      object: RefInpPrntParamSame
      type: !_InputBase
        typeParam: a
    allFields:
    - !_ObjectFor(_InputField)
      name: field
      object: InpPrntParamSame
      type: !_InputBase
        typeParam: a
    fields:
    - !_InputField
      name: field
      type: !_InputBase
        typeParam: a
    name: InpPrntParamSame
    parent: !_InputBase
      input: RefInpPrntParamSame
      typeArgs:
      - !_InputArg
        typeParam: a
    typeKind: !_TypeKind Input
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Basic
        typeName: String
      name: a
  !_Identifier JustOutpCnstDomEnum: !_DomainEnum
    allItems:
    - !_DomainItem(_DomainLabel)
      domain: JustOutpCnstDomEnum
      exclude: false
      value: !_EnumValue
        label: outpCnstDomEnum
        typeKind: !_SimpleKind Enum
        typeName: EnumOutpCnstDomEnum
    domainKind: !_DomainKind Enum
    items:
    - !_DomainLabel
      exclude: false
      value: !_EnumValue
        label: outpCnstDomEnum
        typeKind: !_SimpleKind Enum
        typeName: EnumOutpCnstDomEnum
    name: JustOutpCnstDomEnum
    typeKind: !_TypeKind Domain
  !_Identifier OutpAlt: !_TypeOutput
    allAlternates:
    - !_ObjectFor(_OutputAlternate)
      object: OutpAlt
      type: !_OutputBase
        output: AltOutpAlt
    alternates:
    - !_OutputAlternate
      type: !_OutputBase
        output: AltOutpAlt
    name: OutpAlt
    typeKind: !_TypeKind Output
  !_Identifier OutpAltDescr: !_TypeOutput
    allAlternates:
    - !_ObjectFor(_OutputAlternate)
      object: OutpAltDescr
      type: !_OutputBase
        description: 'Test Descr'
        output: String
    alternates:
    - !_OutputAlternate
      type: !_OutputBase
        description: 'Test Descr'
        output: String
    name: OutpAltDescr
    typeKind: !_TypeKind Output
  !_Identifier OutpAltDual: !_TypeOutput
    allAlternates:
    - !_ObjectFor(_OutputAlternate)
      object: OutpAltDual
      type: !_DualBase
        dual: OutpDualAltDual
    alternates:
    - !_OutputAlternate
      type: !_DualBase
        dual: OutpDualAltDual
    name: OutpAltDual
    typeKind: !_TypeKind Output
  !_Identifier OutpAltModBool: !_TypeOutput
    allAlternates:
    - !_ObjectFor(_OutputAlternate)
      collections:
      - !_ModifierDictionary
        by: ^
        modifierKind: !_ModifierKind Dict
        typeKind: !_SimpleKind Basic
      object: OutpAltModBool
      type: !_OutputBase
        output: AltOutpAltModBool
    alternates:
    - !_OutputAlternate
      collections:
      - !_ModifierDictionary
        by: ^
        modifierKind: !_ModifierKind Dict
        typeKind: !_SimpleKind Basic
      type: !_OutputBase
        output: AltOutpAltModBool
    name: OutpAltModBool
    typeKind: !_TypeKind Output
  !_Identifier OutpAltModParam: !_TypeOutput
    allAlternates:
    - !_ObjectFor(_OutputAlternate)
      collections:
      - !_ModifierTypeParam
        by: mod
        modifierKind: !_ModifierKind Param
      object: OutpAltModParam
      type: !_OutputBase
        output: AltOutpAltModParam
    alternates:
    - !_OutputAlternate
      collections:
      - !_ModifierTypeParam
        by: mod
        modifierKind: !_ModifierKind Param
      type: !_OutputBase
        output: AltOutpAltModParam
    name: OutpAltModParam
    typeKind: !_TypeKind Output
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Basic
        typeName: String
      name: mod
  !_Identifier OutpAltSmpl: !_TypeOutput
    allAlternates:
    - !_ObjectFor(_OutputAlternate)
      object: OutpAltSmpl
      type: !_OutputBase
        output: String
    alternates:
    - !_OutputAlternate
      type: !_OutputBase
        output: String
    name: OutpAltSmpl
    typeKind: !_TypeKind Output
  !_Identifier OutpCnstAlt: !_TypeOutput
    allAlternates:
    - !_ObjectFor(_OutputAlternate)
      object: OutpCnstAlt
      type: !_OutputBase
        typeParam: type
    alternates:
    - !_OutputAlternate
      type: !_OutputBase
        typeParam: type
    name: OutpCnstAlt
    typeKind: !_TypeKind Output
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Basic
        typeName: Number
      name: type
  !_Identifier OutpCnstAltDmn: !_TypeOutput
    allAlternates:
    - !_ObjectFor(_OutputAlternate)
      object: OutpCnstAltDmn
      type: !_OutputBase
        output: RefOutpCnstAltDmn
        typeArgs:
        - !_OutputArg
          output: DomCnstAltDmn
    alternates:
    - !_OutputAlternate
      type: !_OutputBase
        output: RefOutpCnstAltDmn
        typeArgs:
        - !_OutputArg
          output: DomCnstAltDmn
    name: OutpCnstAltDmn
    typeKind: !_TypeKind Output
  !_Identifier OutpCnstAltDual: !_TypeOutput
    allAlternates:
    - !_ObjectFor(_OutputAlternate)
      object: OutpCnstAltDual
      type: !_OutputBase
        output: RefOutpCnstAltDual
        typeArgs:
        - !_OutputArg
          output: AltOutpCnstAltDual
    alternates:
    - !_OutputAlternate
      type: !_OutputBase
        output: RefOutpCnstAltDual
        typeArgs:
        - !_OutputArg
          output: AltOutpCnstAltDual
    name: OutpCnstAltDual
    typeKind: !_TypeKind Output
  !_Identifier OutpCnstAltObj: !_TypeOutput
    allAlternates:
    - !_ObjectFor(_OutputAlternate)
      object: OutpCnstAltObj
      type: !_OutputBase
        output: RefOutpCnstAltObj
        typeArgs:
        - !_OutputArg
          output: AltOutpCnstAltObj
    alternates:
    - !_OutputAlternate
      type: !_OutputBase
        output: RefOutpCnstAltObj
        typeArgs:
        - !_OutputArg
          output: AltOutpCnstAltObj
    name: OutpCnstAltObj
    typeKind: !_TypeKind Output
  !_Identifier OutpCnstDomEnum: !_TypeOutput
    allAlternates:
    - !_ObjectFor(_OutputAlternate)
      object: OutpCnstDomEnum
      type: !_OutputBase
        output: RefOutpCnstDomEnum
        typeArgs:
        - !_OutputArg
          output: outpCnstDomEnum
    alternates:
    - !_OutputAlternate
      type: !_OutputBase
        output: RefOutpCnstDomEnum
        typeArgs:
        - !_OutputArg
          output: outpCnstDomEnum
    name: OutpCnstDomEnum
    typeKind: !_TypeKind Output
  !_Identifier OutpCnstEnum: !_TypeOutput
    allAlternates:
    - !_ObjectFor(_OutputAlternate)
      object: OutpCnstEnum
      type: !_OutputBase
        output: RefOutpCnstEnum
        typeArgs:
        - !_OutputArg
          output: outpCnstEnum
    alternates:
    - !_OutputAlternate
      type: !_OutputBase
        output: RefOutpCnstEnum
        typeArgs:
        - !_OutputArg
          output: outpCnstEnum
    name: OutpCnstEnum
    typeKind: !_TypeKind Output
  !_Identifier OutpCnstEnumPrnt: !_TypeOutput
    allAlternates:
    - !_ObjectFor(_OutputAlternate)
      object: OutpCnstEnumPrnt
      type: !_OutputBase
        output: RefOutpCnstEnumPrnt
        typeArgs:
        - !_OutputArg
          output: outpCnstEnumPrnt
    alternates:
    - !_OutputAlternate
      type: !_OutputBase
        output: RefOutpCnstEnumPrnt
        typeArgs:
        - !_OutputArg
          output: outpCnstEnumPrnt
    name: OutpCnstEnumPrnt
    typeKind: !_TypeKind Output
  !_Identifier OutpCnstFieldDmn: !_TypeOutput
    allFields:
    - !_ObjectFor(_OutputField)
      name: field
      object: RefOutpCnstFieldDmn
      type: !_OutputBase
        output: DomCnstFieldDmn
    name: OutpCnstFieldDmn
    parent: !_OutputBase
      output: RefOutpCnstFieldDmn
      typeArgs:
      - !_OutputArg
        output: DomCnstFieldDmn
    typeKind: !_TypeKind Output
  !_Identifier OutpCnstFieldDual: !_TypeOutput
    allFields:
    - !_ObjectFor(_OutputField)
      name: field
      object: RefOutpCnstFieldDual
      type: !_OutputBase
        output: AltOutpCnstFieldDual
    name: OutpCnstFieldDual
    parent: !_OutputBase
      output: RefOutpCnstFieldDual
      typeArgs:
      - !_OutputArg
        output: AltOutpCnstFieldDual
    typeKind: !_TypeKind Output
  !_Identifier OutpCnstFieldObj: !_TypeOutput
    allFields:
    - !_ObjectFor(_OutputField)
      name: field
      object: RefOutpCnstFieldObj
      type: !_OutputBase
        output: AltOutpCnstFieldObj
    name: OutpCnstFieldObj
    parent: !_OutputBase
      output: RefOutpCnstFieldObj
      typeArgs:
      - !_OutputArg
        output: AltOutpCnstFieldObj
    typeKind: !_TypeKind Output
  !_Identifier OutpCnstPrntDualPrnt: !_TypeOutput
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: PrntOutpCnstPrntDualPrnt
      type: !_DualBase
        dual: String
    allFields:
    - !_ObjectFor(_OutputField)
      name: alt
      object: AltOutpCnstPrntDualPrnt
      type: !_OutputBase
        output: Number
    name: OutpCnstPrntDualPrnt
    parent: !_OutputBase
      output: RefOutpCnstPrntDualPrnt
      typeArgs:
      - !_OutputArg
        output: AltOutpCnstPrntDualPrnt
    typeKind: !_TypeKind Output
  !_Identifier OutpCnstPrntEnum: !_TypeOutput
    allAlternates:
    - !_ObjectFor(_OutputAlternate)
      object: OutpCnstPrntEnum
      type: !_OutputBase
        output: RefOutpCnstPrntEnum
        typeArgs:
        - !_OutputArg
          output: parentOutpCnstPrntEnum
    alternates:
    - !_OutputAlternate
      type: !_OutputBase
        output: RefOutpCnstPrntEnum
        typeArgs:
        - !_OutputArg
          output: parentOutpCnstPrntEnum
    name: OutpCnstPrntEnum
    typeKind: !_TypeKind Output
  !_Identifier OutpCnstPrntObjPrnt: !_TypeOutput
    allAlternates:
    - !_ObjectFor(_OutputAlternate)
      object: PrntOutpCnstPrntObjPrnt
      type: !_OutputBase
        output: String
    allFields:
    - !_ObjectFor(_OutputField)
      name: alt
      object: AltOutpCnstPrntObjPrnt
      type: !_OutputBase
        output: Number
    name: OutpCnstPrntObjPrnt
    parent: !_OutputBase
      output: RefOutpCnstPrntObjPrnt
      typeArgs:
      - !_OutputArg
        output: AltOutpCnstPrntObjPrnt
    typeKind: !_TypeKind Output
  !_Identifier OutpDescrParam: !_TypeOutput
    allFields:
    - !_ObjectFor(_OutputField)
      description: 'Test Descr'
      name: field
      object: OutpDescrParam
      parameters:
      - !_InputParam
        input: InOutpDescrParam
      type: !_DualBase
        dual: FldOutpDescrParam
    fields:
    - !_OutputField
      description: 'Test Descr'
      name: field
      parameters:
      - !_InputParam
        input: InOutpDescrParam
      type: !_DualBase
        dual: FldOutpDescrParam
    name: OutpDescrParam
    typeKind: !_TypeKind Output
  !_Identifier OutpDualAltDual: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: OutpDualAltDual
      type: !_DualBase
        dual: String
    allFields:
    - !_ObjectFor(_DualField)
      name: alt
      object: OutpDualAltDual
      type: !_DualBase
        dual: Number
    alternates:
    - !_DualAlternate
      type: !_DualBase
        dual: String
    fields:
    - !_DualField
      name: alt
      type: !_DualBase
        dual: Number
    name: OutpDualAltDual
    typeKind: !_TypeKind Dual
  !_Identifier OutpField: !_TypeOutput
    allFields:
    - !_ObjectFor(_OutputField)
      name: field
      object: OutpField
      type: !_OutputBase
        output: String
    fields:
    - !_OutputField
      name: field
      type: !_OutputBase
        output: String
    name: OutpField
    typeKind: !_TypeKind Output
  !_Identifier OutpFieldDescr: !_TypeOutput
    allFields:
    - !_ObjectFor(_OutputField)
      description: 'Test Descr'
      name: field
      object: OutpFieldDescr
      type: !_OutputBase
        output: String
    fields:
    - !_OutputField
      description: 'Test Descr'
      name: field
      type: !_OutputBase
        output: String
    name: OutpFieldDescr
    typeKind: !_TypeKind Output
  !_Identifier OutpFieldDual: !_TypeOutput
    allFields:
    - !_ObjectFor(_OutputField)
      name: field
      object: OutpFieldDual
      type: !_DualBase
        dual: FldOutpFieldDual
    fields:
    - !_OutputField
      name: field
      type: !_DualBase
        dual: FldOutpFieldDual
    name: OutpFieldDual
    typeKind: !_TypeKind Output
  !_Identifier OutpFieldEnum: !_TypeOutput
    allFields:
    - !_ObjectFor(_OutputField)
      field: field
      label: outpFieldEnum
      object: OutpFieldEnum
      typeKind: !_SimpleKind Enum
      typeName: EnumOutpFieldEnum
    fields:
    - !_OutputEnum
      field: field
      label: outpFieldEnum
      typeKind: !_SimpleKind Enum
      typeName: EnumOutpFieldEnum
    name: OutpFieldEnum
    typeKind: !_TypeKind Output
  !_Identifier OutpFieldEnumAlias: !_TypeOutput
    allFields:
    - !_ObjectFor(_OutputField)
      field: field
      label: true
      object: OutpFieldEnumAlias
      typeKind: !_SimpleKind Enum
      typeName: Boolean
    fields:
    - !_OutputEnum
      field: field
      label: true
      typeKind: !_SimpleKind Enum
      typeName: Boolean
    name: OutpFieldEnumAlias
    typeKind: !_TypeKind Output
  !_Identifier OutpFieldEnumPrnt: !_TypeOutput
    allFields:
    - !_ObjectFor(_OutputField)
      field: field
      label: prnt_outpFieldEnumPrnt
      object: OutpFieldEnumPrnt
      typeKind: !_SimpleKind Enum
      typeName: EnumOutpFieldEnumPrnt
    fields:
    - !_OutputEnum
      field: field
      label: prnt_outpFieldEnumPrnt
      typeKind: !_SimpleKind Enum
      typeName: EnumOutpFieldEnumPrnt
    name: OutpFieldEnumPrnt
    typeKind: !_TypeKind Output
  !_Identifier OutpFieldEnumValue: !_TypeOutput
    allFields:
    - !_ObjectFor(_OutputField)
      field: field
      label: true
      object: OutpFieldEnumValue
      typeKind: !_SimpleKind Enum
      typeName: Boolean
    fields:
    - !_OutputEnum
      field: field
      label: true
      typeKind: !_SimpleKind Enum
      typeName: Boolean
    name: OutpFieldEnumValue
    typeKind: !_TypeKind Output
  !_Identifier OutpFieldModEnum: !_TypeOutput
    allFields:
    - !_ObjectFor(_OutputField)
      modifiers: [!_ModifierDictionary {by: EnumOutpFieldModEnum,
          modifierKind: !_ModifierKind Dict, typeKind: !_SimpleKind Enum}]
      name: field
      object: OutpFieldModEnum
      type: !_OutputBase
        output: String
    fields:
    - !_OutputField
      modifiers: [!_ModifierDictionary {by: EnumOutpFieldModEnum,
          modifierKind: !_ModifierKind Dict, typeKind: !_SimpleKind Enum}]
      name: field
      type: !_OutputBase
        output: String
    name: OutpFieldModEnum
    typeKind: !_TypeKind Output
  !_Identifier OutpFieldModParam: !_TypeOutput
    allFields:
    - !_ObjectFor(_OutputField)
      modifiers: [!_ModifierTypeParam {by: mod, modifierKind: !_ModifierKind Param}]
      name: field
      object: OutpFieldModParam
      type: !_OutputBase
        output: FldOutpFieldModParam
    fields:
    - !_OutputField
      modifiers: [!_ModifierTypeParam {by: mod, modifierKind: !_ModifierKind Param}]
      name: field
      type: !_OutputBase
        output: FldOutpFieldModParam
    name: OutpFieldModParam
    typeKind: !_TypeKind Output
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Basic
        typeName: String
      name: mod
  !_Identifier OutpFieldObj: !_TypeOutput
    allFields:
    - !_ObjectFor(_OutputField)
      name: field
      object: OutpFieldObj
      type: !_OutputBase
        output: FldOutpFieldObj
    fields:
    - !_OutputField
      name: field
      type: !_OutputBase
        output: FldOutpFieldObj
    name: OutpFieldObj
    typeKind: !_TypeKind Output
  !_Identifier OutpFieldParam: !_TypeOutput
    allFields:
    - !_ObjectFor(_OutputField)
      name: field
      object: OutpFieldParam
      parameters:
      - !_InputParam
        input: OutpFieldParam1
      - !_InputParam
        input: OutpFieldParam2
      type: !_DualBase
        dual: FldOutpFieldParam
    fields:
    - !_OutputField
      name: field
      parameters:
      - !_InputParam
        input: OutpFieldParam1
      - !_InputParam
        input: OutpFieldParam2
      type: !_DualBase
        dual: FldOutpFieldParam
    name: OutpFieldParam
    typeKind: !_TypeKind Output
  !_Identifier OutpFieldParam1: !_TypeInput
    name: OutpFieldParam1
    typeKind: !_TypeKind Input
  !_Identifier OutpFieldParam2: !_TypeInput
    name: OutpFieldParam2
    typeKind: !_TypeKind Input
  !_Identifier OutpFieldSmpl: !_TypeOutput
    allFields:
    - !_ObjectFor(_OutputField)
      name: field
      object: OutpFieldSmpl
      type: !_OutputBase
        output: Number
    fields:
    - !_OutputField
      name: field
      type: !_OutputBase
        output: Number
    name: OutpFieldSmpl
    typeKind: !_TypeKind Output
  !_Identifier OutpFieldTypeDescr: !_TypeOutput
    allFields:
    - !_ObjectFor(_OutputField)
      name: field
      object: OutpFieldTypeDescr
      type: !_OutputBase
        description: 'Test Descr'
        output: Number
    fields:
    - !_OutputField
      name: field
      type: !_OutputBase
        description: 'Test Descr'
        output: Number
    name: OutpFieldTypeDescr
    typeKind: !_TypeKind Output
  !_Identifier OutpFieldValue: !_TypeOutput
    allFields:
    - !_ObjectFor(_OutputField)
      field: field
      label: outpFieldValue
      object: OutpFieldValue
      typeKind: !_SimpleKind Enum
      typeName: EnumOutpFieldValue
    fields:
    - !_OutputEnum
      field: field
      label: outpFieldValue
      typeKind: !_SimpleKind Enum
      typeName: EnumOutpFieldValue
    name: OutpFieldValue
    typeKind: !_TypeKind Output
  !_Identifier OutpFieldValueDescr: !_TypeOutput
    allFields:
    - !_ObjectFor(_OutputField)
      description: 'Test Descr'
      field: field
      label: outpFieldValueDescr
      object: OutpFieldValueDescr
      typeKind: !_SimpleKind Enum
      typeName: EnumOutpFieldValueDescr
    fields:
    - !_OutputEnum
      description: 'Test Descr'
      field: field
      label: outpFieldValueDescr
      typeKind: !_SimpleKind Enum
      typeName: EnumOutpFieldValueDescr
    name: OutpFieldValueDescr
    typeKind: !_TypeKind Output
  !_Identifier OutpGnrcAlt: !_TypeOutput
    allAlternates:
    - !_ObjectFor(_OutputAlternate)
      object: OutpGnrcAlt
      type: !_OutputBase
        typeParam: type
    alternates:
    - !_OutputAlternate
      type: !_OutputBase
        typeParam: type
    name: OutpGnrcAlt
    typeKind: !_TypeKind Output
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Basic
        typeName: String
      name: type
  !_Identifier OutpGnrcAltArg: !_TypeOutput
    allAlternates:
    - !_ObjectFor(_OutputAlternate)
      object: OutpGnrcAltArg
      type: !_OutputBase
        output: RefOutpGnrcAltArg
        typeArgs:
        - !_OutputArg
          typeParam: type
    alternates:
    - !_OutputAlternate
      type: !_OutputBase
        output: RefOutpGnrcAltArg
        typeArgs:
        - !_OutputArg
          typeParam: type
    name: OutpGnrcAltArg
    typeKind: !_TypeKind Output
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Basic
        typeName: String
      name: type
  !_Identifier OutpGnrcAltArgDescr: !_TypeOutput
    allAlternates:
    - !_ObjectFor(_OutputAlternate)
      object: OutpGnrcAltArgDescr
      type: !_OutputBase
        output: RefOutpGnrcAltArgDescr
        typeArgs:
        - !_OutputArg
          description: 'Test Descr'
          typeParam: type
    alternates:
    - !_OutputAlternate
      type: !_OutputBase
        output: RefOutpGnrcAltArgDescr
        typeArgs:
        - !_OutputArg
          description: 'Test Descr'
          typeParam: type
    name: OutpGnrcAltArgDescr
    typeKind: !_TypeKind Output
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Basic
        typeName: String
      name: type
  !_Identifier OutpGnrcAltDual: !_TypeOutput
    allAlternates:
    - !_ObjectFor(_OutputAlternate)
      object: OutpGnrcAltDual
      type: !_OutputBase
        output: RefOutpGnrcAltDual
        typeArgs:
        - !_DualArg
          dual: AltOutpGnrcAltDual
    alternates:
    - !_OutputAlternate
      type: !_OutputBase
        output: RefOutpGnrcAltDual
        typeArgs:
        - !_DualArg
          dual: AltOutpGnrcAltDual
    name: OutpGnrcAltDual
    typeKind: !_TypeKind Output
  !_Identifier OutpGnrcAltParam: !_TypeOutput
    allAlternates:
    - !_ObjectFor(_OutputAlternate)
      object: OutpGnrcAltParam
      type: !_OutputBase
        output: RefOutpGnrcAltParam
        typeArgs:
        - !_OutputArg
          output: AltOutpGnrcAltParam
    alternates:
    - !_OutputAlternate
      type: !_OutputBase
        output: RefOutpGnrcAltParam
        typeArgs:
        - !_OutputArg
          output: AltOutpGnrcAltParam
    name: OutpGnrcAltParam
    typeKind: !_TypeKind Output
  !_Identifier OutpGnrcAltSmpl: !_TypeOutput
    allAlternates:
    - !_ObjectFor(_OutputAlternate)
      object: OutpGnrcAltSmpl
      type: !_OutputBase
        output: RefOutpGnrcAltSmpl
        typeArgs:
        - !_OutputArg
          output: String
    alternates:
    - !_OutputAlternate
      type: !_OutputBase
        output: RefOutpGnrcAltSmpl
        typeArgs:
        - !_OutputArg
          output: String
    name: OutpGnrcAltSmpl
    typeKind: !_TypeKind Output
  !_Identifier OutpGnrcDescr: !_TypeOutput
    allFields:
    - !_ObjectFor(_OutputField)
      name: field
      object: OutpGnrcDescr
      type: !_OutputBase
        typeParam: type
    fields:
    - !_OutputField
      name: field
      type: !_OutputBase
        typeParam: type
    name: OutpGnrcDescr
    typeKind: !_TypeKind Output
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Basic
        typeName: String
      description: 'Test Descr'
      name: type
  !_Identifier OutpGnrcEnum: !_TypeOutput
    allAlternates:
    - !_ObjectFor(_OutputAlternate)
      object: OutpGnrcEnum
      type: !_OutputBase
        output: RefOutpGnrcEnum
        typeArgs:
        - !_OutputArg
          label: outpGnrcEnum
          typeKind: !_SimpleKind Enum
          typeName: EnumOutpGnrcEnum
    alternates:
    - !_OutputAlternate
      type: !_OutputBase
        output: RefOutpGnrcEnum
        typeArgs:
        - !_OutputArg
          label: outpGnrcEnum
          typeKind: !_SimpleKind Enum
          typeName: EnumOutpGnrcEnum
    name: OutpGnrcEnum
    typeKind: !_TypeKind Output
  !_Identifier OutpGnrcField: !_TypeOutput
    allFields:
    - !_ObjectFor(_OutputField)
      name: field
      object: OutpGnrcField
      type: !_OutputBase
        typeParam: type
    fields:
    - !_OutputField
      name: field
      type: !_OutputBase
        typeParam: type
    name: OutpGnrcField
    typeKind: !_TypeKind Output
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Basic
        typeName: String
      name: type
  !_Identifier OutpGnrcFieldArg: !_TypeOutput
    allFields:
    - !_ObjectFor(_OutputField)
      name: field
      object: OutpGnrcFieldArg
      type: !_OutputBase
        output: RefOutpGnrcFieldArg
        typeArgs:
        - !_OutputArg
          typeParam: type
    fields:
    - !_OutputField
      name: field
      type: !_OutputBase
        output: RefOutpGnrcFieldArg
        typeArgs:
        - !_OutputArg
          typeParam: type
    name: OutpGnrcFieldArg
    typeKind: !_TypeKind Output
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Basic
        typeName: String
      name: type
  !_Identifier OutpGnrcFieldDual: !_TypeOutput
    allFields:
    - !_ObjectFor(_OutputField)
      name: field
      object: OutpGnrcFieldDual
      type: !_OutputBase
        output: RefOutpGnrcFieldDual
        typeArgs:
        - !_DualArg
          dual: AltOutpGnrcFieldDual
    fields:
    - !_OutputField
      name: field
      type: !_OutputBase
        output: RefOutpGnrcFieldDual
        typeArgs:
        - !_DualArg
          dual: AltOutpGnrcFieldDual
    name: OutpGnrcFieldDual
    typeKind: !_TypeKind Output
  !_Identifier OutpGnrcFieldParam: !_TypeOutput
    allFields:
    - !_ObjectFor(_OutputField)
      name: field
      object: OutpGnrcFieldParam
      type: !_OutputBase
        output: RefOutpGnrcFieldParam
        typeArgs:
        - !_OutputArg
          output: AltOutpGnrcFieldParam
    fields:
    - !_OutputField
      name: field
      type: !_OutputBase
        output: RefOutpGnrcFieldParam
        typeArgs:
        - !_OutputArg
          output: AltOutpGnrcFieldParam
    name: OutpGnrcFieldParam
    typeKind: !_TypeKind Output
  !_Identifier OutpGnrcPrnt: !_TypeOutput
    name: OutpGnrcPrnt
    parent: !_OutputBase
      typeParam: type
    typeKind: !_TypeKind Output
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Basic
        typeName: String
      name: type
  !_Identifier OutpGnrcPrntArg: !_TypeOutput
    allAlternates:
    - !_ObjectFor(_OutputAlternate)
      object: RefOutpGnrcPrntArg
      type: !_OutputBase
        typeParam: ref
    name: OutpGnrcPrntArg
    parent: !_OutputBase
      output: RefOutpGnrcPrntArg
      typeArgs:
      - !_OutputArg
        typeParam: type
    typeKind: !_TypeKind Output
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Basic
        typeName: String
      name: type
  !_Identifier OutpGnrcPrntDual: !_TypeOutput
    allAlternates:
    - !_ObjectFor(_OutputAlternate)
      object: RefOutpGnrcPrntDual
      type: !_DualBase
        dual: AltOutpGnrcPrntDual
    name: OutpGnrcPrntDual
    parent: !_OutputBase
      output: RefOutpGnrcPrntDual
      typeArgs:
      - !_DualArg
        dual: AltOutpGnrcPrntDual
    typeKind: !_TypeKind Output
  !_Identifier OutpGnrcPrntDualPrnt: !_TypeOutput
    name: OutpGnrcPrntDualPrnt
    parent: !_OutputBase
      output: RefOutpGnrcPrntDualPrnt
      typeArgs:
      - !_DualArg
        dual: AltOutpGnrcPrntDualPrnt
    typeKind: !_TypeKind Output
  !_Identifier OutpGnrcPrntEnumChild: !_TypeOutput
    allFields:
    - !_ObjectFor(_OutputField)
      name: field
      object: FieldOutpGnrcPrntEnumChild
      type: !_OutputBase
        output: ParentGnrcPrntEnumChild
    name: OutpGnrcPrntEnumChild
    parent: !_OutputBase
      output: FieldOutpGnrcPrntEnumChild
      typeArgs:
      - !_OutputArg
        output: ParentGnrcPrntEnumChild
    typeKind: !_TypeKind Output
  !_Identifier OutpGnrcPrntEnumDom: !_TypeOutput
    allFields:
    - !_ObjectFor(_OutputField)
      name: field
      object: FieldOutpGnrcPrntEnumDom
      type: !_OutputBase
        output: DomGnrcPrntEnumDom
    name: OutpGnrcPrntEnumDom
    parent: !_OutputBase
      output: FieldOutpGnrcPrntEnumDom
      typeArgs:
      - !_OutputArg
        output: DomGnrcPrntEnumDom
    typeKind: !_TypeKind Output
  !_Identifier OutpGnrcPrntEnumPrnt: !_TypeOutput
    allFields:
    - !_ObjectFor(_OutputField)
      name: field
      object: FieldOutpGnrcPrntEnumPrnt
      type: !_OutputBase
        output: EnumGnrcPrntEnumPrnt
    name: OutpGnrcPrntEnumPrnt
    parent: !_OutputBase
      output: FieldOutpGnrcPrntEnumPrnt
      typeArgs:
      - !_OutputArg
        output: EnumGnrcPrntEnumPrnt
    typeKind: !_TypeKind Output
  !_Identifier OutpGnrcPrntParam: !_TypeOutput
    allAlternates:
    - !_ObjectFor(_OutputAlternate)
      object: RefOutpGnrcPrntParam
      type: !_OutputBase
        output: AltOutpGnrcPrntParam
    name: OutpGnrcPrntParam
    parent: !_OutputBase
      output: RefOutpGnrcPrntParam
      typeArgs:
      - !_OutputArg
        output: AltOutpGnrcPrntParam
    typeKind: !_TypeKind Output
  !_Identifier OutpGnrcPrntParamPrnt: !_TypeOutput
    allAlternates:
    - !_ObjectFor(_OutputAlternate)
      object: AltOutpGnrcPrntParamPrnt
      type: !_OutputBase
        output: String
    allFields:
    - !_ObjectFor(_OutputField)
      name: alt
      object: AltOutpGnrcPrntParamPrnt
      type: !_OutputBase
        output: Number
    name: OutpGnrcPrntParamPrnt
    parent: !_OutputBase
      output: RefOutpGnrcPrntParamPrnt
      typeArgs:
      - !_OutputArg
        output: AltOutpGnrcPrntParamPrnt
    typeKind: !_TypeKind Output
  !_Identifier OutpGnrcPrntSmplEnum: !_TypeOutput
    allFields:
    - !_ObjectFor(_OutputField)
      name: field
      object: FieldOutpGnrcPrntSmplEnum
      type: !_OutputBase
        output: EnumGnrcPrntSmplEnum
    name: OutpGnrcPrntSmplEnum
    parent: !_OutputBase
      output: FieldOutpGnrcPrntSmplEnum
      typeArgs:
      - !_OutputArg
        output: EnumGnrcPrntSmplEnum
    typeKind: !_TypeKind Output
  !_Identifier OutpGnrcPrntStrDom: !_TypeOutput
    allFields:
    - !_ObjectFor(_OutputField)
      name: field
      object: FieldOutpGnrcPrntStrDom
      type: !_OutputBase
        output: DomGnrcPrntStrDom
    name: OutpGnrcPrntStrDom
    parent: !_OutputBase
      output: FieldOutpGnrcPrntStrDom
      typeArgs:
      - !_OutputArg
        output: DomGnrcPrntStrDom
    typeKind: !_TypeKind Output
  !_Identifier OutpGnrcValue: !_TypeOutput
    allAlternates:
    - !_ObjectFor(_OutputAlternate)
      object: OutpGnrcValue
      type: !_OutputBase
        output: RefOutpGnrcValue
        typeArgs:
        - !_OutputArg
          output: outpGnrcValue
    alternates:
    - !_OutputAlternate
      type: !_OutputBase
        output: RefOutpGnrcValue
        typeArgs:
        - !_OutputArg
          output: outpGnrcValue
    name: OutpGnrcValue
    typeKind: !_TypeKind Output
  !_Identifier OutpObj: !_TypeOutput
    name: OutpObj
    typeKind: !_TypeKind Output
  !_Identifier OutpObjAlias: !_TypeOutput
    aliases: [Outp1, Outp2]
    name: OutpObjAlias
    typeKind: !_TypeKind Output
  !_Identifier OutpObjAlt: !_TypeOutput
    allAlternates:
    - !_ObjectFor(_OutputAlternate)
      object: OutpObjAlt
      type: !_OutputBase
        output: OutpObjAltType
    alternates:
    - !_OutputAlternate
      type: !_OutputBase
        output: OutpObjAltType
    name: OutpObjAlt
    typeKind: !_TypeKind Output
  !_Identifier OutpObjAltType: !_TypeOutput
    name: OutpObjAltType
    typeKind: !_TypeKind Output
  !_Identifier OutpObjCnst: !_TypeOutput
    allFields:
    - !_ObjectFor(_OutputField)
      name: field
      object: OutpObjCnst
      type: !_OutputBase
        typeParam: type
    - !_ObjectFor(_OutputField)
      name: str
      object: OutpObjCnst
      type: !_OutputBase
        typeParam: type
    fields:
    - !_OutputField
      name: field
      type: !_OutputBase
        typeParam: type
    - !_OutputField
      name: str
      type: !_OutputBase
        typeParam: type
    name: OutpObjCnst
    typeKind: !_TypeKind Output
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Basic
        typeName: String
      name: type
  !_Identifier OutpObjField: !_TypeOutput
    allFields:
    - !_ObjectFor(_OutputField)
      name: field
      object: OutpObjField
      type: !_OutputBase
        output: FldOutpObjField
    fields:
    - !_OutputField
      name: field
      type: !_OutputBase
        output: FldOutpObjField
    name: OutpObjField
    typeKind: !_TypeKind Output
  !_Identifier OutpObjFieldAlias: !_TypeOutput
    allFields:
    - !_ObjectFor(_OutputField)
      aliases: [field1, field2]
      name: field
      object: OutpObjFieldAlias
      type: !_OutputBase
        output: FldOutpObjFieldAlias
    fields:
    - !_OutputField
      aliases: [field1, field2]
      name: field
      type: !_OutputBase
        output: FldOutpObjFieldAlias
    name: OutpObjFieldAlias
    typeKind: !_TypeKind Output
  !_Identifier OutpObjFieldTypeAlias: !_TypeOutput
    allFields:
    - !_ObjectFor(_OutputField)
      name: field
      object: OutpObjFieldTypeAlias
      type: !_OutputBase
        output: String
    fields:
    - !_OutputField
      name: field
      type: !_OutputBase
        output: String
    name: OutpObjFieldTypeAlias
    typeKind: !_TypeKind Output
  !_Identifier OutpObjParam: !_TypeOutput
    allFields:
    - !_ObjectFor(_OutputField)
      name: test
      object: OutpObjParam
      type: !_OutputBase
        typeParam: test
    - !_ObjectFor(_OutputField)
      name: type
      object: OutpObjParam
      type: !_OutputBase
        typeParam: type
    fields:
    - !_OutputField
      name: test
      type: !_OutputBase
        typeParam: test
    - !_OutputField
      name: type
      type: !_OutputBase
        typeParam: type
    name: OutpObjParam
    typeKind: !_TypeKind Output
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Basic
        typeName: String
      name: test
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Basic
        typeName: String
      name: type
  !_Identifier OutpObjParamCnst: !_TypeOutput
    allFields:
    - !_ObjectFor(_OutputField)
      name: test
      object: OutpObjParamCnst
      type: !_OutputBase
        typeParam: test
    - !_ObjectFor(_OutputField)
      name: type
      object: OutpObjParamCnst
      type: !_OutputBase
        typeParam: test
    fields:
    - !_OutputField
      name: test
      type: !_OutputBase
        typeParam: test
    - !_OutputField
      name: type
      type: !_OutputBase
        typeParam: test
    name: OutpObjParamCnst
    typeKind: !_TypeKind Output
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Basic
        typeName: String
      name: test
  !_Identifier OutpObjParamDup: !_TypeOutput
    allFields:
    - !_ObjectFor(_OutputField)
      name: test
      object: OutpObjParamDup
      type: !_OutputBase
        typeParam: test
    - !_ObjectFor(_OutputField)
      name: type
      object: OutpObjParamDup
      type: !_OutputBase
        typeParam: test
    fields:
    - !_OutputField
      name: test
      type: !_OutputBase
        typeParam: test
    - !_OutputField
      name: type
      type: !_OutputBase
        typeParam: test
    name: OutpObjParamDup
    typeKind: !_TypeKind Output
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Basic
        typeName: String
      name: test
  !_Identifier OutpObjPrnt: !_TypeOutput
    name: OutpObjPrnt
    parent: !_OutputBase
      output: RefOutpObjPrnt
    typeKind: !_TypeKind Output
  !_Identifier OutpParam: !_TypeOutput
    allFields:
    - !_ObjectFor(_OutputField)
      name: field
      object: OutpParam
      parameters:
      - !_InputParam
        input: InOutpParam
      type: !_DualBase
        dual: FldOutpParam
    fields:
    - !_OutputField
      name: field
      parameters:
      - !_InputParam
        input: InOutpParam
      type: !_DualBase
        dual: FldOutpParam
    name: OutpParam
    typeKind: !_TypeKind Output
  !_Identifier OutpParamDescr: !_TypeOutput
    allFields:
    - !_ObjectFor(_OutputField)
      name: field
      object: OutpParamDescr
      parameters:
      - !_InputParam
        description: 'Test Descr'
        input: InOutpParamDescr
      type: !_DualBase
        dual: FldOutpParamDescr
    fields:
    - !_OutputField
      name: field
      parameters:
      - !_InputParam
        description: 'Test Descr'
        input: InOutpParamDescr
      type: !_DualBase
        dual: FldOutpParamDescr
    name: OutpParamDescr
    typeKind: !_TypeKind Output
  !_Identifier OutpParamModDmn: !_TypeOutput
    allFields:
    - !_ObjectFor(_OutputField)
      name: field
      object: OutpParamModDmn
      parameters:
      - !_InputParam
        input: InOutpParamModDmn
        modifiers: [!_ModifierDictionary {by: DomOutpParamModDmn,
            modifierKind: !_ModifierKind Dict, typeKind: !_SimpleKind Domain}]
      type: !_OutputBase
        output: DomOutpParamModDmn
    fields:
    - !_OutputField
      name: field
      parameters:
      - !_InputParam
        input: InOutpParamModDmn
        modifiers: [!_ModifierDictionary {by: DomOutpParamModDmn,
            modifierKind: !_ModifierKind Dict, typeKind: !_SimpleKind Domain}]
      type: !_OutputBase
        output: DomOutpParamModDmn
    name: OutpParamModDmn
    typeKind: !_TypeKind Output
  !_Identifier OutpParamModParam: !_TypeOutput
    allFields:
    - !_ObjectFor(_OutputField)
      name: field
      object: OutpParamModParam
      parameters:
      - !_InputParam
        input: InOutpParamModParam
        modifiers: [!_ModifierTypeParam {by: mod, modifierKind: !_ModifierKind Param}]
      type: !_OutputBase
        output: DomOutpParamModParam
    fields:
    - !_OutputField
      name: field
      parameters:
      - !_InputParam
        input: InOutpParamModParam
        modifiers: [!_ModifierTypeParam {by: mod, modifierKind: !_ModifierKind Param}]
      type: !_OutputBase
        output: DomOutpParamModParam
    name: OutpParamModParam
    typeKind: !_TypeKind Output
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Basic
        typeName: String
      name: mod
  !_Identifier OutpParamTypeDescr: !_TypeOutput
    allFields:
    - !_ObjectFor(_OutputField)
      name: field
      object: OutpParamTypeDescr
      parameters:
      - !_InputParam
        input: InOutpParamTypeDescr
      type: !_DualBase
        description: 'Test Descr'
        dual: FldOutpParamTypeDescr
    fields:
    - !_OutputField
      name: field
      parameters:
      - !_InputParam
        input: InOutpParamTypeDescr
      type: !_DualBase
        description: 'Test Descr'
        dual: FldOutpParamTypeDescr
    name: OutpParamTypeDescr
    typeKind: !_TypeKind Output
  !_Identifier OutpPrnt: !_TypeOutput
    allAlternates:
    - !_ObjectFor(_OutputAlternate)
      object: RefOutpPrnt
      type: !_OutputBase
        output: String
    allFields:
    - !_ObjectFor(_OutputField)
      name: parent
      object: RefOutpPrnt
      type: !_OutputBase
        output: Number
    name: OutpPrnt
    parent: !_OutputBase
      output: RefOutpPrnt
    typeKind: !_TypeKind Output
  !_Identifier OutpPrntAlt: !_TypeOutput
    allAlternates:
    - !_ObjectFor(_OutputAlternate)
      object: RefOutpPrntAlt
      type: !_OutputBase
        output: String
    - !_ObjectFor(_OutputAlternate)
      object: OutpPrntAlt
      type: !_OutputBase
        output: Number
    allFields:
    - !_ObjectFor(_OutputField)
      name: parent
      object: RefOutpPrntAlt
      type: !_OutputBase
        output: Number
    alternates:
    - !_OutputAlternate
      type: !_OutputBase
        output: Number
    name: OutpPrntAlt
    parent: !_OutputBase
      output: RefOutpPrntAlt
    typeKind: !_TypeKind Output
  !_Identifier OutpPrntDescr: !_TypeOutput
    allAlternates:
    - !_ObjectFor(_OutputAlternate)
      object: RefOutpPrntDescr
      type: !_OutputBase
        output: String
    allFields:
    - !_ObjectFor(_OutputField)
      name: parent
      object: RefOutpPrntDescr
      type: !_OutputBase
        output: Number
    name: OutpPrntDescr
    parent: !_OutputBase
      description: 'Test Descr'
      output: RefOutpPrntDescr
    typeKind: !_TypeKind Output
  !_Identifier OutpPrntDual: !_TypeOutput
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: RefOutpPrntDual
      type: !_DualBase
        dual: String
    allFields:
    - !_ObjectFor(_DualField)
      name: parent
      object: RefOutpPrntDual
      type: !_DualBase
        dual: Number
    name: OutpPrntDual
    parent: !_DualBase
      dual: RefOutpPrntDual
    typeKind: !_TypeKind Output
  !_Identifier OutpPrntField: !_TypeOutput
    allAlternates:
    - !_ObjectFor(_OutputAlternate)
      object: RefOutpPrntField
      type: !_OutputBase
        output: String
    allFields:
    - !_ObjectFor(_OutputField)
      name: parent
      object: RefOutpPrntField
      type: !_OutputBase
        output: Number
    - !_ObjectFor(_OutputField)
      name: field
      object: OutpPrntField
      type: !_OutputBase
        output: Number
    fields:
    - !_OutputField
      name: field
      type: !_OutputBase
        output: Number
    name: OutpPrntField
    parent: !_OutputBase
      output: RefOutpPrntField
    typeKind: !_TypeKind Output
  !_Identifier OutpPrntGnrc: !_TypeOutput
    allAlternates:
    - !_ObjectFor(_OutputAlternate)
      object: OutpPrntGnrc
      type: !_OutputBase
        output: RefOutpPrntGnrc
        typeArgs:
        - !_OutputArg
          label: prnt_outpPrntGnrc
          typeKind: !_SimpleKind Enum
          typeName: EnumOutpPrntGnrc
    alternates:
    - !_OutputAlternate
      type: !_OutputBase
        output: RefOutpPrntGnrc
        typeArgs:
        - !_OutputArg
          label: prnt_outpPrntGnrc
          typeKind: !_SimpleKind Enum
          typeName: EnumOutpPrntGnrc
    name: OutpPrntGnrc
    typeKind: !_TypeKind Output
  !_Identifier OutpPrntParam: !_TypeOutput
    allFields:
    - !_ObjectFor(_OutputField)
      name: field
      object: PrntOutpPrntParam
      parameters:
      - !_InputParam
        input: PrntOutpPrntParamIn
      type: !_DualBase
        dual: FldOutpPrntParam
    - !_ObjectFor(_OutputField)
      name: field
      object: OutpPrntParam
      parameters:
      - !_InputParam
        input: InOutpPrntParam
      type: !_DualBase
        dual: FldOutpPrntParam
    fields:
    - !_OutputField
      name: field
      parameters:
      - !_InputParam
        input: InOutpPrntParam
      type: !_DualBase
        dual: FldOutpPrntParam
    name: OutpPrntParam
    parent: !_OutputBase
      output: PrntOutpPrntParam
    typeKind: !_TypeKind Output
  !_Identifier OutpPrntParamDiff: !_TypeOutput
    allAlternates:
    - !_ObjectFor(_OutputAlternate)
      object: RefOutpPrntParamDiff
      type: !_OutputBase
        typeParam: b
    allFields:
    - !_ObjectFor(_OutputField)
      name: field
      object: OutpPrntParamDiff
      type: !_OutputBase
        typeParam: a
    fields:
    - !_OutputField
      name: field
      type: !_OutputBase
        typeParam: a
    name: OutpPrntParamDiff
    parent: !_OutputBase
      output: RefOutpPrntParamDiff
      typeArgs:
      - !_OutputArg
        typeParam: a
    typeKind: !_TypeKind Output
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Basic
        typeName: String
      name: a
  !_Identifier OutpPrntParamSame: !_TypeOutput
    allAlternates:
    - !_ObjectFor(_OutputAlternate)
      object: RefOutpPrntParamSame
      type: !_OutputBase
        typeParam: a
    allFields:
    - !_ObjectFor(_OutputField)
      name: field
      object: OutpPrntParamSame
      type: !_OutputBase
        typeParam: a
    fields:
    - !_OutputField
      name: field
      type: !_OutputBase
        typeParam: a
    name: OutpPrntParamSame
    parent: !_OutputBase
      output: RefOutpPrntParamSame
      typeArgs:
      - !_OutputArg
        typeParam: a
    typeKind: !_TypeKind Output
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Basic
        typeName: String
      name: a
  !_Identifier ParentGnrcPrntEnumChild: !_TypeEnum
    allItems:
    - !_EnumLabel
      enum: ParentGnrcPrntEnumChild
      name: gnrcPrntEnumChildParent
    items:
    - !_Aliased
      name: gnrcPrntEnumChildParent
    name: ParentGnrcPrntEnumChild
    typeKind: !_TypeKind Enum
  !_Identifier ParentGnrcPrntEnumPrnt: !_TypeEnum
    allItems:
    - !_EnumLabel
      enum: ParentGnrcPrntEnumPrnt
      name: gnrcPrntEnumPrntParent
    items:
    - !_Aliased
      name: gnrcPrntEnumPrntParent
    name: ParentGnrcPrntEnumPrnt
    typeKind: !_TypeKind Enum
  !_Identifier ParentOutpCnstEnumPrnt: !_TypeEnum
    allItems:
    - !_EnumLabel
      enum: ParentOutpCnstEnumPrnt
      name: parentOutpCnstEnumPrnt
    items:
    - !_Aliased
      name: parentOutpCnstEnumPrnt
    name: ParentOutpCnstEnumPrnt
    typeKind: !_TypeKind Enum
  !_Identifier ParentOutpCnstPrntEnum: !_TypeEnum
    allItems:
    - !_EnumLabel
      enum: ParentOutpCnstPrntEnum
      name: parentOutpCnstPrntEnum
    items:
    - !_Aliased
      name: parentOutpCnstPrntEnum
    name: ParentOutpCnstPrntEnum
    typeKind: !_TypeKind Enum
  !_Identifier PrntDmnBoolPrnt: !_DomainBoolean
    allItems:
    - !_DomainItem(_DomainTrueFalse)
      domain: PrntDmnBoolPrnt
      exclude: false
      value: true
    domainKind: !_DomainKind Boolean
    items:
    - !_DomainTrueFalse
      exclude: false
      value: true
    name: PrntDmnBoolPrnt
    typeKind: !_TypeKind Domain
  !_Identifier PrntDmnEnumAllPrnt: !_TypeEnum
    allItems:
    - !_EnumLabel
      enum: PrntDmnEnumAllPrnt
      name: prnt_dmnEnumAllPrnt
    items:
    - !_Aliased
      name: prnt_dmnEnumAllPrnt
    name: PrntDmnEnumAllPrnt
    typeKind: !_TypeKind Enum
  !_Identifier PrntDmnEnumPrnt: !_DomainEnum
    allItems:
    - !_DomainItem(_DomainLabel)
      domain: PrntDmnEnumPrnt
      exclude: false
      value: !_EnumValue
        label: prnt_dmnEnumPrnt
        typeKind: !_SimpleKind Enum
        typeName: EnumDmnEnumPrnt
    domainKind: !_DomainKind Enum
    items:
    - !_DomainLabel
      exclude: false
      value: !_EnumValue
        label: prnt_dmnEnumPrnt
        typeKind: !_SimpleKind Enum
        typeName: EnumDmnEnumPrnt
    name: PrntDmnEnumPrnt
    typeKind: !_TypeKind Domain
  !_Identifier PrntDmnEnumUnqPrnt: !_TypeEnum
    allItems:
    - !_EnumLabel
      enum: PrntDmnEnumUnqPrnt
      name: dmnEnumUnqPrnt
    - !_EnumLabel
      enum: PrntDmnEnumUnqPrnt
      name: prnt_dmnEnumUnqPrnt
    items:
    - !_Aliased
      name: dmnEnumUnqPrnt
    - !_Aliased
      name: prnt_dmnEnumUnqPrnt
    name: PrntDmnEnumUnqPrnt
    typeKind: !_TypeKind Enum
  !_Identifier PrntDmnEnumValuePrnt: !_TypeEnum
    allItems:
    - !_EnumLabel
      enum: PrntDmnEnumValuePrnt
      name: prnt_dmnEnumValuePrnt
    items:
    - !_Aliased
      name: prnt_dmnEnumValuePrnt
    name: PrntDmnEnumValuePrnt
    typeKind: !_TypeKind Enum
  !_Identifier PrntDmnNmbrPrnt: !_DomainNumber
    allItems:
    - !_DomainItem(_DomainRange)
      domain: PrntDmnNmbrPrnt
      exclude: false
      to: 2
    domainKind: !_DomainKind Number
    items:
    - !_DomainRange
      exclude: false
      to: 2
    name: PrntDmnNmbrPrnt
    typeKind: !_TypeKind Domain
  !_Identifier PrntDmnStrPrnt: !_DomainString
    allItems:
    - !_DomainItem(_DomainRegex)
      domain: PrntDmnStrPrnt
      exclude: false
      pattern: b+
    domainKind: !_DomainKind String
    items:
    - !_DomainRegex
      exclude: false
      pattern: b+
    name: PrntDmnStrPrnt
    typeKind: !_TypeKind Domain
  !_Identifier PrntDualCnstAltDual: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: PrntDualCnstAltDual
      type: !_DualBase
        dual: String
    alternates:
    - !_DualAlternate
      type: !_DualBase
        dual: String
    name: PrntDualCnstAltDual
    typeKind: !_TypeKind Dual
  !_Identifier PrntDualCnstAltObj: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: PrntDualCnstAltObj
      type: !_DualBase
        dual: String
    alternates:
    - !_DualAlternate
      type: !_DualBase
        dual: String
    name: PrntDualCnstAltObj
    typeKind: !_TypeKind Dual
  !_Identifier PrntDualCnstFieldDual: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: PrntDualCnstFieldDual
      type: !_DualBase
        dual: String
    alternates:
    - !_DualAlternate
      type: !_DualBase
        dual: String
    name: PrntDualCnstFieldDual
    typeKind: !_TypeKind Dual
  !_Identifier PrntDualCnstFieldObj: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: PrntDualCnstFieldObj
      type: !_DualBase
        dual: String
    alternates:
    - !_DualAlternate
      type: !_DualBase
        dual: String
    name: PrntDualCnstFieldObj
    typeKind: !_TypeKind Dual
  !_Identifier PrntDualCnstPrntDualPrnt: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: PrntDualCnstPrntDualPrnt
      type: !_DualBase
        dual: String
    alternates:
    - !_DualAlternate
      type: !_DualBase
        dual: String
    name: PrntDualCnstPrntDualPrnt
    typeKind: !_TypeKind Dual
  !_Identifier PrntDualCnstPrntObjPrnt: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: PrntDualCnstPrntObjPrnt
      type: !_DualBase
        dual: String
    alternates:
    - !_DualAlternate
      type: !_DualBase
        dual: String
    name: PrntDualCnstPrntObjPrnt
    typeKind: !_TypeKind Dual
  !_Identifier PrntEnumPrnt: !_TypeEnum
    allItems:
    - !_EnumLabel
      enum: PrntEnumPrnt
      name: prnt_enumPrnt
    items:
    - !_Aliased
      name: prnt_enumPrnt
    name: PrntEnumPrnt
    typeKind: !_TypeKind Enum
  !_Identifier PrntEnumPrntAlias: !_TypeEnum
    allItems:
    - !_EnumLabel
      enum: PrntEnumPrntAlias
      name: prnt_enumPrntAlias
    items:
    - !_Aliased
      name: prnt_enumPrntAlias
    name: PrntEnumPrntAlias
    typeKind: !_TypeKind Enum
  !_Identifier PrntEnumPrntDup: !_TypeEnum
    allItems:
    - !_EnumLabel
      aliases: [enumPrntDup]
      enum: PrntEnumPrntDup
      name: prnt_enumPrntDup
    items:
    - !_Aliased
      aliases: [enumPrntDup]
      name: prnt_enumPrntDup
    name: PrntEnumPrntDup
    typeKind: !_TypeKind Enum
  !_Identifier PrntEnumSamePrnt: !_TypeEnum
    allItems:
    - !_EnumLabel
      enum: PrntEnumSamePrnt
      name: prnt_enumSamePrnt
    items:
    - !_Aliased
      name: prnt_enumSamePrnt
    name: PrntEnumSamePrnt
    typeKind: !_TypeKind Enum
  !_Identifier PrntInpCnstAltDual: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: PrntInpCnstAltDual
      type: !_DualBase
        dual: String
    alternates:
    - !_DualAlternate
      type: !_DualBase
        dual: String
    name: PrntInpCnstAltDual
    typeKind: !_TypeKind Dual
  !_Identifier PrntInpCnstAltObj: !_TypeInput
    allAlternates:
    - !_ObjectFor(_InputAlternate)
      object: PrntInpCnstAltObj
      type: !_InputBase
        input: String
    alternates:
    - !_InputAlternate
      type: !_InputBase
        input: String
    name: PrntInpCnstAltObj
    typeKind: !_TypeKind Input
  !_Identifier PrntInpCnstFieldDual: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: PrntInpCnstFieldDual
      type: !_DualBase
        dual: String
    alternates:
    - !_DualAlternate
      type: !_DualBase
        dual: String
    name: PrntInpCnstFieldDual
    typeKind: !_TypeKind Dual
  !_Identifier PrntInpCnstFieldObj: !_TypeInput
    allAlternates:
    - !_ObjectFor(_InputAlternate)
      object: PrntInpCnstFieldObj
      type: !_InputBase
        input: String
    alternates:
    - !_InputAlternate
      type: !_InputBase
        input: String
    name: PrntInpCnstFieldObj
    typeKind: !_TypeKind Input
  !_Identifier PrntInpCnstPrntDualPrnt: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: PrntInpCnstPrntDualPrnt
      type: !_DualBase
        dual: String
    alternates:
    - !_DualAlternate
      type: !_DualBase
        dual: String
    name: PrntInpCnstPrntDualPrnt
    typeKind: !_TypeKind Dual
  !_Identifier PrntInpCnstPrntObjPrnt: !_TypeInput
    allAlternates:
    - !_ObjectFor(_InputAlternate)
      object: PrntInpCnstPrntObjPrnt
      type: !_InputBase
        input: String
    alternates:
    - !_InputAlternate
      type: !_InputBase
        input: String
    name: PrntInpCnstPrntObjPrnt
    typeKind: !_TypeKind Input
  !_Identifier PrntOutpCnstAltDual: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: PrntOutpCnstAltDual
      type: !_DualBase
        dual: String
    alternates:
    - !_DualAlternate
      type: !_DualBase
        dual: String
    name: PrntOutpCnstAltDual
    typeKind: !_TypeKind Dual
  !_Identifier PrntOutpCnstAltObj: !_TypeOutput
    allAlternates:
    - !_ObjectFor(_OutputAlternate)
      object: PrntOutpCnstAltObj
      type: !_OutputBase
        output: String
    alternates:
    - !_OutputAlternate
      type: !_OutputBase
        output: String
    name: PrntOutpCnstAltObj
    typeKind: !_TypeKind Output
  !_Identifier PrntOutpCnstFieldDual: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: PrntOutpCnstFieldDual
      type: !_DualBase
        dual: String
    alternates:
    - !_DualAlternate
      type: !_DualBase
        dual: String
    name: PrntOutpCnstFieldDual
    typeKind: !_TypeKind Dual
  !_Identifier PrntOutpCnstFieldObj: !_TypeOutput
    allAlternates:
    - !_ObjectFor(_OutputAlternate)
      object: PrntOutpCnstFieldObj
      type: !_OutputBase
        output: String
    alternates:
    - !_OutputAlternate
      type: !_OutputBase
        output: String
    name: PrntOutpCnstFieldObj
    typeKind: !_TypeKind Output
  !_Identifier PrntOutpCnstPrntDualPrnt: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: PrntOutpCnstPrntDualPrnt
      type: !_DualBase
        dual: String
    alternates:
    - !_DualAlternate
      type: !_DualBase
        dual: String
    name: PrntOutpCnstPrntDualPrnt
    typeKind: !_TypeKind Dual
  !_Identifier PrntOutpCnstPrntObjPrnt: !_TypeOutput
    allAlternates:
    - !_ObjectFor(_OutputAlternate)
      object: PrntOutpCnstPrntObjPrnt
      type: !_OutputBase
        output: String
    alternates:
    - !_OutputAlternate
      type: !_OutputBase
        output: String
    name: PrntOutpCnstPrntObjPrnt
    typeKind: !_TypeKind Output
  !_Identifier PrntOutpFieldEnumPrnt: !_TypeEnum
    allItems:
    - !_EnumLabel
      enum: PrntOutpFieldEnumPrnt
      name: prnt_outpFieldEnumPrnt
    items:
    - !_Aliased
      name: prnt_outpFieldEnumPrnt
    name: PrntOutpFieldEnumPrnt
    typeKind: !_TypeKind Enum
  !_Identifier PrntOutpPrntGnrc: !_TypeEnum
    allItems:
    - !_EnumLabel
      enum: PrntOutpPrntGnrc
      name: prnt_outpPrntGnrc
    items:
    - !_Aliased
      name: prnt_outpPrntGnrc
    name: PrntOutpPrntGnrc
    typeKind: !_TypeKind Enum
  !_Identifier PrntOutpPrntParam: !_TypeOutput
    allFields:
    - !_ObjectFor(_OutputField)
      name: field
      object: PrntOutpPrntParam
      parameters:
      - !_InputParam
        input: PrntOutpPrntParamIn
      type: !_DualBase
        dual: FldOutpPrntParam
    fields:
    - !_OutputField
      name: field
      parameters:
      - !_InputParam
        input: PrntOutpPrntParamIn
      type: !_DualBase
        dual: FldOutpPrntParam
    name: PrntOutpPrntParam
    typeKind: !_TypeKind Output
  !_Identifier PrntOutpPrntParamIn: !_TypeInput
    allAlternates:
    - !_ObjectFor(_InputAlternate)
      object: PrntOutpPrntParamIn
      type: !_InputBase
        input: String
    allFields:
    - !_ObjectFor(_InputField)
      name: parent
      object: PrntOutpPrntParamIn
      type: !_InputBase
        input: Number
    alternates:
    - !_InputAlternate
      type: !_InputBase
        input: String
    fields:
    - !_InputField
      name: parent
      type: !_InputBase
        input: Number
    name: PrntOutpPrntParamIn
    typeKind: !_TypeKind Input
  !_Identifier PrntUnionPrnt: !_TypeUnion
    allItems:
    - !_UnionMember
      name: Number
      union: PrntUnionPrnt
    items:
    - !_Aliased
      name: Number
    name: PrntUnionPrnt
    typeKind: !_TypeKind Union
  !_Identifier PrntUnionPrntDup: !_TypeUnion
    allItems:
    - !_UnionMember
      name: Number
      union: PrntUnionPrntDup
    items:
    - !_Aliased
      name: Number
    name: PrntUnionPrntDup
    typeKind: !_TypeKind Union
  !_Identifier PrntUnionSamePrnt: !_TypeUnion
    allItems:
    - !_UnionMember
      name: String
      union: PrntUnionSamePrnt
    items:
    - !_Aliased
      name: String
    name: PrntUnionSamePrnt
    typeKind: !_TypeKind Union
  !_Identifier RefDualCnstAltDmn: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: RefDualCnstAltDmn
      type: !_DualBase
        typeParam: ref
    alternates:
    - !_DualAlternate
      type: !_DualBase
        typeParam: ref
    name: RefDualCnstAltDmn
    typeKind: !_TypeKind Dual
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Basic
        typeName: String
      name: ref
  !_Identifier RefDualCnstAltDual: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: RefDualCnstAltDual
      type: !_DualBase
        typeParam: ref
    alternates:
    - !_DualAlternate
      type: !_DualBase
        typeParam: ref
    name: RefDualCnstAltDual
    typeKind: !_TypeKind Dual
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Dual
        typeName: PrntDualCnstAltDual
      name: ref
  !_Identifier RefDualCnstAltObj: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: RefDualCnstAltObj
      type: !_DualBase
        typeParam: ref
    alternates:
    - !_DualAlternate
      type: !_DualBase
        typeParam: ref
    name: RefDualCnstAltObj
    typeKind: !_TypeKind Dual
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Dual
        typeName: PrntDualCnstAltObj
      name: ref
  !_Identifier RefDualCnstFieldDmn: !_TypeDual
    allFields:
    - !_ObjectFor(_DualField)
      name: field
      object: RefDualCnstFieldDmn
      type: !_DualBase
        typeParam: ref
    fields:
    - !_DualField
      name: field
      type: !_DualBase
        typeParam: ref
    name: RefDualCnstFieldDmn
    typeKind: !_TypeKind Dual
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Basic
        typeName: String
      name: ref
  !_Identifier RefDualCnstFieldDual: !_TypeDual
    allFields:
    - !_ObjectFor(_DualField)
      name: field
      object: RefDualCnstFieldDual
      type: !_DualBase
        typeParam: ref
    fields:
    - !_DualField
      name: field
      type: !_DualBase
        typeParam: ref
    name: RefDualCnstFieldDual
    typeKind: !_TypeKind Dual
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Dual
        typeName: PrntDualCnstFieldDual
      name: ref
  !_Identifier RefDualCnstFieldObj: !_TypeDual
    allFields:
    - !_ObjectFor(_DualField)
      name: field
      object: RefDualCnstFieldObj
      type: !_DualBase
        typeParam: ref
    fields:
    - !_DualField
      name: field
      type: !_DualBase
        typeParam: ref
    name: RefDualCnstFieldObj
    typeKind: !_TypeKind Dual
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Dual
        typeName: PrntDualCnstFieldObj
      name: ref
  !_Identifier RefDualCnstPrntDualPrnt: !_TypeDual
    name: RefDualCnstPrntDualPrnt
    parent: !_DualBase
      typeParam: ref
    typeKind: !_TypeKind Dual
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Dual
        typeName: PrntDualCnstPrntDualPrnt
      name: ref
  !_Identifier RefDualCnstPrntObjPrnt: !_TypeDual
    name: RefDualCnstPrntObjPrnt
    parent: !_DualBase
      typeParam: ref
    typeKind: !_TypeKind Dual
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Dual
        typeName: PrntDualCnstPrntObjPrnt
      name: ref
  !_Identifier RefDualGnrcAltArg: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: RefDualGnrcAltArg
      type: !_DualBase
        typeParam: ref
    alternates:
    - !_DualAlternate
      type: !_DualBase
        typeParam: ref
    name: RefDualGnrcAltArg
    typeKind: !_TypeKind Dual
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Basic
        typeName: String
      name: ref
  !_Identifier RefDualGnrcAltArgDescr: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: RefDualGnrcAltArgDescr
      type: !_DualBase
        typeParam: ref
    alternates:
    - !_DualAlternate
      type: !_DualBase
        typeParam: ref
    name: RefDualGnrcAltArgDescr
    typeKind: !_TypeKind Dual
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Basic
        typeName: String
      name: ref
  !_Identifier RefDualGnrcAltDual: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: RefDualGnrcAltDual
      type: !_DualBase
        typeParam: ref
    alternates:
    - !_DualAlternate
      type: !_DualBase
        typeParam: ref
    name: RefDualGnrcAltDual
    typeKind: !_TypeKind Dual
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Internal
        typeName: _Dual
      name: ref
  !_Identifier RefDualGnrcAltModParam: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      collections:
      - !_ModifierTypeParam
        by: mod
        modifierKind: !_ModifierKind Param
      object: RefDualGnrcAltModParam
      type: !_DualBase
        typeParam: ref
    alternates:
    - !_DualAlternate
      collections:
      - !_ModifierTypeParam
        by: mod
        modifierKind: !_ModifierKind Param
      type: !_DualBase
        typeParam: ref
    name: RefDualGnrcAltModParam
    typeKind: !_TypeKind Dual
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Basic
        typeName: String
      name: ref
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Basic
        typeName: String
      name: mod
  !_Identifier RefDualGnrcAltModStr: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      collections:
      - !_ModifierDictionary
        by: '*'
        modifierKind: !_ModifierKind Dict
        typeKind: !_SimpleKind Basic
      object: RefDualGnrcAltModStr
      type: !_DualBase
        typeParam: ref
    alternates:
    - !_DualAlternate
      collections:
      - !_ModifierDictionary
        by: '*'
        modifierKind: !_ModifierKind Dict
        typeKind: !_SimpleKind Basic
      type: !_DualBase
        typeParam: ref
    name: RefDualGnrcAltModStr
    typeKind: !_TypeKind Dual
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Basic
        typeName: String
      name: ref
  !_Identifier RefDualGnrcAltParam: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: RefDualGnrcAltParam
      type: !_DualBase
        typeParam: ref
    alternates:
    - !_DualAlternate
      type: !_DualBase
        typeParam: ref
    name: RefDualGnrcAltParam
    typeKind: !_TypeKind Dual
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Internal
        typeName: _Dual
      name: ref
  !_Identifier RefDualGnrcAltSmpl: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: RefDualGnrcAltSmpl
      type: !_DualBase
        typeParam: ref
    alternates:
    - !_DualAlternate
      type: !_DualBase
        typeParam: ref
    name: RefDualGnrcAltSmpl
    typeKind: !_TypeKind Dual
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Basic
        typeName: String
      name: ref
  !_Identifier RefDualGnrcFieldArg: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: RefDualGnrcFieldArg
      type: !_DualBase
        typeParam: ref
    alternates:
    - !_DualAlternate
      type: !_DualBase
        typeParam: ref
    name: RefDualGnrcFieldArg
    typeKind: !_TypeKind Dual
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Basic
        typeName: String
      name: ref
  !_Identifier RefDualGnrcFieldDual: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: RefDualGnrcFieldDual
      type: !_DualBase
        typeParam: ref
    alternates:
    - !_DualAlternate
      type: !_DualBase
        typeParam: ref
    name: RefDualGnrcFieldDual
    typeKind: !_TypeKind Dual
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Internal
        typeName: _Dual
      name: ref
  !_Identifier RefDualGnrcFieldParam: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: RefDualGnrcFieldParam
      type: !_DualBase
        typeParam: ref
    alternates:
    - !_DualAlternate
      type: !_DualBase
        typeParam: ref
    name: RefDualGnrcFieldParam
    typeKind: !_TypeKind Dual
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Internal
        typeName: _Dual
      name: ref
  !_Identifier RefDualGnrcPrntArg: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: RefDualGnrcPrntArg
      type: !_DualBase
        typeParam: ref
    alternates:
    - !_DualAlternate
      type: !_DualBase
        typeParam: ref
    name: RefDualGnrcPrntArg
    typeKind: !_TypeKind Dual
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Basic
        typeName: String
      name: ref
  !_Identifier RefDualGnrcPrntDual: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: RefDualGnrcPrntDual
      type: !_DualBase
        typeParam: ref
    alternates:
    - !_DualAlternate
      type: !_DualBase
        typeParam: ref
    name: RefDualGnrcPrntDual
    typeKind: !_TypeKind Dual
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Internal
        typeName: _Dual
      name: ref
  !_Identifier RefDualGnrcPrntDualPrnt: !_TypeDual
    name: RefDualGnrcPrntDualPrnt
    parent: !_DualBase
      typeParam: ref
    typeKind: !_TypeKind Dual
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Internal
        typeName: _Dual
      name: ref
  !_Identifier RefDualGnrcPrntParam: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: RefDualGnrcPrntParam
      type: !_DualBase
        typeParam: ref
    alternates:
    - !_DualAlternate
      type: !_DualBase
        typeParam: ref
    name: RefDualGnrcPrntParam
    typeKind: !_TypeKind Dual
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Internal
        typeName: _Dual
      name: ref
  !_Identifier RefDualGnrcPrntParamPrnt: !_TypeDual
    name: RefDualGnrcPrntParamPrnt
    parent: !_DualBase
      typeParam: ref
    typeKind: !_TypeKind Dual
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Internal
        typeName: _Dual
      name: ref
  !_Identifier RefDualObjPrnt: !_TypeDual
    name: RefDualObjPrnt
    typeKind: !_TypeKind Dual
  !_Identifier RefDualPrnt: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: RefDualPrnt
      type: !_DualBase
        dual: String
    allFields:
    - !_ObjectFor(_DualField)
      name: parent
      object: RefDualPrnt
      type: !_DualBase
        dual: Number
    alternates:
    - !_DualAlternate
      type: !_DualBase
        dual: String
    fields:
    - !_DualField
      name: parent
      type: !_DualBase
        dual: Number
    name: RefDualPrnt
    typeKind: !_TypeKind Dual
  !_Identifier RefDualPrntAlt: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: RefDualPrntAlt
      type: !_DualBase
        dual: String
    allFields:
    - !_ObjectFor(_DualField)
      name: parent
      object: RefDualPrntAlt
      type: !_DualBase
        dual: Number
    alternates:
    - !_DualAlternate
      type: !_DualBase
        dual: String
    fields:
    - !_DualField
      name: parent
      type: !_DualBase
        dual: Number
    name: RefDualPrntAlt
    typeKind: !_TypeKind Dual
  !_Identifier RefDualPrntDescr: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: RefDualPrntDescr
      type: !_DualBase
        dual: String
    allFields:
    - !_ObjectFor(_DualField)
      name: parent
      object: RefDualPrntDescr
      type: !_DualBase
        dual: Number
    alternates:
    - !_DualAlternate
      type: !_DualBase
        dual: String
    fields:
    - !_DualField
      name: parent
      type: !_DualBase
        dual: Number
    name: RefDualPrntDescr
    typeKind: !_TypeKind Dual
  !_Identifier RefDualPrntDual: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: RefDualPrntDual
      type: !_DualBase
        dual: String
    allFields:
    - !_ObjectFor(_DualField)
      name: parent
      object: RefDualPrntDual
      type: !_DualBase
        dual: Number
    alternates:
    - !_DualAlternate
      type: !_DualBase
        dual: String
    fields:
    - !_DualField
      name: parent
      type: !_DualBase
        dual: Number
    name: RefDualPrntDual
    typeKind: !_TypeKind Dual
  !_Identifier RefDualPrntField: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: RefDualPrntField
      type: !_DualBase
        dual: String
    allFields:
    - !_ObjectFor(_DualField)
      name: parent
      object: RefDualPrntField
      type: !_DualBase
        dual: Number
    alternates:
    - !_DualAlternate
      type: !_DualBase
        dual: String
    fields:
    - !_DualField
      name: parent
      type: !_DualBase
        dual: Number
    name: RefDualPrntField
    typeKind: !_TypeKind Dual
  !_Identifier RefDualPrntParamDiff: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: RefDualPrntParamDiff
      type: !_DualBase
        typeParam: b
    alternates:
    - !_DualAlternate
      type: !_DualBase
        typeParam: b
    name: RefDualPrntParamDiff
    typeKind: !_TypeKind Dual
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Basic
        typeName: String
      name: b
  !_Identifier RefDualPrntParamSame: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: RefDualPrntParamSame
      type: !_DualBase
        typeParam: a
    alternates:
    - !_DualAlternate
      type: !_DualBase
        typeParam: a
    name: RefDualPrntParamSame
    typeKind: !_TypeKind Dual
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Basic
        typeName: String
      name: a
  !_Identifier RefInpCnstAltDmn: !_TypeInput
    allAlternates:
    - !_ObjectFor(_InputAlternate)
      object: RefInpCnstAltDmn
      type: !_InputBase
        typeParam: ref
    alternates:
    - !_InputAlternate
      type: !_InputBase
        typeParam: ref
    name: RefInpCnstAltDmn
    typeKind: !_TypeKind Input
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Basic
        typeName: String
      name: ref
  !_Identifier RefInpCnstAltDual: !_TypeInput
    allAlternates:
    - !_ObjectFor(_InputAlternate)
      object: RefInpCnstAltDual
      type: !_InputBase
        typeParam: ref
    alternates:
    - !_InputAlternate
      type: !_InputBase
        typeParam: ref
    name: RefInpCnstAltDual
    typeKind: !_TypeKind Input
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Dual
        typeName: PrntInpCnstAltDual
      name: ref
  !_Identifier RefInpCnstAltObj: !_TypeInput
    allAlternates:
    - !_ObjectFor(_InputAlternate)
      object: RefInpCnstAltObj
      type: !_InputBase
        typeParam: ref
    alternates:
    - !_InputAlternate
      type: !_InputBase
        typeParam: ref
    name: RefInpCnstAltObj
    typeKind: !_TypeKind Input
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Input
        typeName: PrntInpCnstAltObj
      name: ref
  !_Identifier RefInpCnstFieldDmn: !_TypeInput
    allFields:
    - !_ObjectFor(_InputField)
      name: field
      object: RefInpCnstFieldDmn
      type: !_InputBase
        typeParam: ref
    fields:
    - !_InputField
      name: field
      type: !_InputBase
        typeParam: ref
    name: RefInpCnstFieldDmn
    typeKind: !_TypeKind Input
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Basic
        typeName: String
      name: ref
  !_Identifier RefInpCnstFieldDual: !_TypeInput
    allFields:
    - !_ObjectFor(_InputField)
      name: field
      object: RefInpCnstFieldDual
      type: !_InputBase
        typeParam: ref
    fields:
    - !_InputField
      name: field
      type: !_InputBase
        typeParam: ref
    name: RefInpCnstFieldDual
    typeKind: !_TypeKind Input
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Dual
        typeName: PrntInpCnstFieldDual
      name: ref
  !_Identifier RefInpCnstFieldObj: !_TypeInput
    allFields:
    - !_ObjectFor(_InputField)
      name: field
      object: RefInpCnstFieldObj
      type: !_InputBase
        typeParam: ref
    fields:
    - !_InputField
      name: field
      type: !_InputBase
        typeParam: ref
    name: RefInpCnstFieldObj
    typeKind: !_TypeKind Input
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Input
        typeName: PrntInpCnstFieldObj
      name: ref
  !_Identifier RefInpCnstPrntDualPrnt: !_TypeInput
    name: RefInpCnstPrntDualPrnt
    parent: !_InputBase
      typeParam: ref
    typeKind: !_TypeKind Input
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Dual
        typeName: PrntInpCnstPrntDualPrnt
      name: ref
  !_Identifier RefInpCnstPrntObjPrnt: !_TypeInput
    name: RefInpCnstPrntObjPrnt
    parent: !_InputBase
      typeParam: ref
    typeKind: !_TypeKind Input
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Input
        typeName: PrntInpCnstPrntObjPrnt
      name: ref
  !_Identifier RefInpGnrcAltArg: !_TypeInput
    allAlternates:
    - !_ObjectFor(_InputAlternate)
      object: RefInpGnrcAltArg
      type: !_InputBase
        typeParam: ref
    alternates:
    - !_InputAlternate
      type: !_InputBase
        typeParam: ref
    name: RefInpGnrcAltArg
    typeKind: !_TypeKind Input
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Basic
        typeName: String
      name: ref
  !_Identifier RefInpGnrcAltArgDescr: !_TypeInput
    allAlternates:
    - !_ObjectFor(_InputAlternate)
      object: RefInpGnrcAltArgDescr
      type: !_InputBase
        typeParam: ref
    alternates:
    - !_InputAlternate
      type: !_InputBase
        typeParam: ref
    name: RefInpGnrcAltArgDescr
    typeKind: !_TypeKind Input
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Basic
        typeName: String
      name: ref
  !_Identifier RefInpGnrcAltDual: !_TypeInput
    allAlternates:
    - !_ObjectFor(_InputAlternate)
      object: RefInpGnrcAltDual
      type: !_InputBase
        typeParam: ref
    alternates:
    - !_InputAlternate
      type: !_InputBase
        typeParam: ref
    name: RefInpGnrcAltDual
    typeKind: !_TypeKind Input
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Internal
        typeName: _Dual
      name: ref
  !_Identifier RefInpGnrcAltModParam: !_TypeInput
    allAlternates:
    - !_ObjectFor(_InputAlternate)
      collections:
      - !_ModifierTypeParam
        by: mod
        modifierKind: !_ModifierKind Param
      object: RefInpGnrcAltModParam
      type: !_InputBase
        typeParam: ref
    alternates:
    - !_InputAlternate
      collections:
      - !_ModifierTypeParam
        by: mod
        modifierKind: !_ModifierKind Param
      type: !_InputBase
        typeParam: ref
    name: RefInpGnrcAltModParam
    typeKind: !_TypeKind Input
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Basic
        typeName: String
      name: ref
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Basic
        typeName: String
      name: mod
  !_Identifier RefInpGnrcAltModStr: !_TypeInput
    allAlternates:
    - !_ObjectFor(_InputAlternate)
      collections:
      - !_ModifierDictionary
        by: '*'
        modifierKind: !_ModifierKind Dict
        typeKind: !_SimpleKind Basic
      object: RefInpGnrcAltModStr
      type: !_InputBase
        typeParam: ref
    alternates:
    - !_InputAlternate
      collections:
      - !_ModifierDictionary
        by: '*'
        modifierKind: !_ModifierKind Dict
        typeKind: !_SimpleKind Basic
      type: !_InputBase
        typeParam: ref
    name: RefInpGnrcAltModStr
    typeKind: !_TypeKind Input
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Basic
        typeName: String
      name: ref
  !_Identifier RefInpGnrcAltParam: !_TypeInput
    allAlternates:
    - !_ObjectFor(_InputAlternate)
      object: RefInpGnrcAltParam
      type: !_InputBase
        typeParam: ref
    alternates:
    - !_InputAlternate
      type: !_InputBase
        typeParam: ref
    name: RefInpGnrcAltParam
    typeKind: !_TypeKind Input
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Internal
        typeName: _Input
      name: ref
  !_Identifier RefInpGnrcAltSmpl: !_TypeInput
    allAlternates:
    - !_ObjectFor(_InputAlternate)
      object: RefInpGnrcAltSmpl
      type: !_InputBase
        typeParam: ref
    alternates:
    - !_InputAlternate
      type: !_InputBase
        typeParam: ref
    name: RefInpGnrcAltSmpl
    typeKind: !_TypeKind Input
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Basic
        typeName: String
      name: ref
  !_Identifier RefInpGnrcFieldArg: !_TypeInput
    allAlternates:
    - !_ObjectFor(_InputAlternate)
      object: RefInpGnrcFieldArg
      type: !_InputBase
        typeParam: ref
    alternates:
    - !_InputAlternate
      type: !_InputBase
        typeParam: ref
    name: RefInpGnrcFieldArg
    typeKind: !_TypeKind Input
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Basic
        typeName: String
      name: ref
  !_Identifier RefInpGnrcFieldDual: !_TypeInput
    allAlternates:
    - !_ObjectFor(_InputAlternate)
      object: RefInpGnrcFieldDual
      type: !_InputBase
        typeParam: ref
    alternates:
    - !_InputAlternate
      type: !_InputBase
        typeParam: ref
    name: RefInpGnrcFieldDual
    typeKind: !_TypeKind Input
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Internal
        typeName: _Dual
      name: ref
  !_Identifier RefInpGnrcFieldParam: !_TypeInput
    allAlternates:
    - !_ObjectFor(_InputAlternate)
      object: RefInpGnrcFieldParam
      type: !_InputBase
        typeParam: ref
    alternates:
    - !_InputAlternate
      type: !_InputBase
        typeParam: ref
    name: RefInpGnrcFieldParam
    typeKind: !_TypeKind Input
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Internal
        typeName: _Input
      name: ref
  !_Identifier RefInpGnrcPrntArg: !_TypeInput
    allAlternates:
    - !_ObjectFor(_InputAlternate)
      object: RefInpGnrcPrntArg
      type: !_InputBase
        typeParam: ref
    alternates:
    - !_InputAlternate
      type: !_InputBase
        typeParam: ref
    name: RefInpGnrcPrntArg
    typeKind: !_TypeKind Input
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Basic
        typeName: String
      name: ref
  !_Identifier RefInpGnrcPrntDual: !_TypeInput
    allAlternates:
    - !_ObjectFor(_InputAlternate)
      object: RefInpGnrcPrntDual
      type: !_InputBase
        typeParam: ref
    alternates:
    - !_InputAlternate
      type: !_InputBase
        typeParam: ref
    name: RefInpGnrcPrntDual
    typeKind: !_TypeKind Input
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Internal
        typeName: _Dual
      name: ref
  !_Identifier RefInpGnrcPrntDualPrnt: !_TypeInput
    name: RefInpGnrcPrntDualPrnt
    parent: !_InputBase
      typeParam: ref
    typeKind: !_TypeKind Input
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Internal
        typeName: _Dual
      name: ref
  !_Identifier RefInpGnrcPrntParam: !_TypeInput
    allAlternates:
    - !_ObjectFor(_InputAlternate)
      object: RefInpGnrcPrntParam
      type: !_InputBase
        typeParam: ref
    alternates:
    - !_InputAlternate
      type: !_InputBase
        typeParam: ref
    name: RefInpGnrcPrntParam
    typeKind: !_TypeKind Input
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Internal
        typeName: _Input
      name: ref
  !_Identifier RefInpGnrcPrntParamPrnt: !_TypeInput
    name: RefInpGnrcPrntParamPrnt
    parent: !_InputBase
      typeParam: ref
    typeKind: !_TypeKind Input
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Internal
        typeName: _Input
      name: ref
  !_Identifier RefInpObjPrnt: !_TypeInput
    name: RefInpObjPrnt
    typeKind: !_TypeKind Input
  !_Identifier RefInpPrnt: !_TypeInput
    allAlternates:
    - !_ObjectFor(_InputAlternate)
      object: RefInpPrnt
      type: !_InputBase
        input: String
    allFields:
    - !_ObjectFor(_InputField)
      name: parent
      object: RefInpPrnt
      type: !_InputBase
        input: Number
    alternates:
    - !_InputAlternate
      type: !_InputBase
        input: String
    fields:
    - !_InputField
      name: parent
      type: !_InputBase
        input: Number
    name: RefInpPrnt
    typeKind: !_TypeKind Input
  !_Identifier RefInpPrntAlt: !_TypeInput
    allAlternates:
    - !_ObjectFor(_InputAlternate)
      object: RefInpPrntAlt
      type: !_InputBase
        input: String
    allFields:
    - !_ObjectFor(_InputField)
      name: parent
      object: RefInpPrntAlt
      type: !_InputBase
        input: Number
    alternates:
    - !_InputAlternate
      type: !_InputBase
        input: String
    fields:
    - !_InputField
      name: parent
      type: !_InputBase
        input: Number
    name: RefInpPrntAlt
    typeKind: !_TypeKind Input
  !_Identifier RefInpPrntDescr: !_TypeInput
    allAlternates:
    - !_ObjectFor(_InputAlternate)
      object: RefInpPrntDescr
      type: !_InputBase
        input: String
    allFields:
    - !_ObjectFor(_InputField)
      name: parent
      object: RefInpPrntDescr
      type: !_InputBase
        input: Number
    alternates:
    - !_InputAlternate
      type: !_InputBase
        input: String
    fields:
    - !_InputField
      name: parent
      type: !_InputBase
        input: Number
    name: RefInpPrntDescr
    typeKind: !_TypeKind Input
  !_Identifier RefInpPrntDual: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: RefInpPrntDual
      type: !_DualBase
        dual: String
    allFields:
    - !_ObjectFor(_DualField)
      name: parent
      object: RefInpPrntDual
      type: !_DualBase
        dual: Number
    alternates:
    - !_DualAlternate
      type: !_DualBase
        dual: String
    fields:
    - !_DualField
      name: parent
      type: !_DualBase
        dual: Number
    name: RefInpPrntDual
    typeKind: !_TypeKind Dual
  !_Identifier RefInpPrntField: !_TypeInput
    allAlternates:
    - !_ObjectFor(_InputAlternate)
      object: RefInpPrntField
      type: !_InputBase
        input: String
    allFields:
    - !_ObjectFor(_InputField)
      name: parent
      object: RefInpPrntField
      type: !_InputBase
        input: Number
    alternates:
    - !_InputAlternate
      type: !_InputBase
        input: String
    fields:
    - !_InputField
      name: parent
      type: !_InputBase
        input: Number
    name: RefInpPrntField
    typeKind: !_TypeKind Input
  !_Identifier RefInpPrntParamDiff: !_TypeInput
    allAlternates:
    - !_ObjectFor(_InputAlternate)
      object: RefInpPrntParamDiff
      type: !_InputBase
        typeParam: b
    alternates:
    - !_InputAlternate
      type: !_InputBase
        typeParam: b
    name: RefInpPrntParamDiff
    typeKind: !_TypeKind Input
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Basic
        typeName: String
      name: b
  !_Identifier RefInpPrntParamSame: !_TypeInput
    allAlternates:
    - !_ObjectFor(_InputAlternate)
      object: RefInpPrntParamSame
      type: !_InputBase
        typeParam: a
    alternates:
    - !_InputAlternate
      type: !_InputBase
        typeParam: a
    name: RefInpPrntParamSame
    typeKind: !_TypeKind Input
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Basic
        typeName: String
      name: a
  !_Identifier RefOutpCnstAltDmn: !_TypeOutput
    allAlternates:
    - !_ObjectFor(_OutputAlternate)
      object: RefOutpCnstAltDmn
      type: !_OutputBase
        typeParam: ref
    alternates:
    - !_OutputAlternate
      type: !_OutputBase
        typeParam: ref
    name: RefOutpCnstAltDmn
    typeKind: !_TypeKind Output
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Basic
        typeName: String
      name: ref
  !_Identifier RefOutpCnstAltDual: !_TypeOutput
    allAlternates:
    - !_ObjectFor(_OutputAlternate)
      object: RefOutpCnstAltDual
      type: !_OutputBase
        typeParam: ref
    alternates:
    - !_OutputAlternate
      type: !_OutputBase
        typeParam: ref
    name: RefOutpCnstAltDual
    typeKind: !_TypeKind Output
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Dual
        typeName: PrntOutpCnstAltDual
      name: ref
  !_Identifier RefOutpCnstAltObj: !_TypeOutput
    allAlternates:
    - !_ObjectFor(_OutputAlternate)
      object: RefOutpCnstAltObj
      type: !_OutputBase
        typeParam: ref
    alternates:
    - !_OutputAlternate
      type: !_OutputBase
        typeParam: ref
    name: RefOutpCnstAltObj
    typeKind: !_TypeKind Output
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Output
        typeName: PrntOutpCnstAltObj
      name: ref
  !_Identifier RefOutpCnstDomEnum: !_TypeOutput
    allFields:
    - !_ObjectFor(_OutputField)
      name: field
      object: RefOutpCnstDomEnum
      type: !_OutputBase
        typeParam: type
    fields:
    - !_OutputField
      name: field
      type: !_OutputBase
        typeParam: type
    name: RefOutpCnstDomEnum
    typeKind: !_TypeKind Output
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Domain
        typeName: JustOutpCnstDomEnum
      name: type
  !_Identifier RefOutpCnstEnum: !_TypeOutput
    allFields:
    - !_ObjectFor(_OutputField)
      name: field
      object: RefOutpCnstEnum
      type: !_OutputBase
        typeParam: type
    fields:
    - !_OutputField
      name: field
      type: !_OutputBase
        typeParam: type
    name: RefOutpCnstEnum
    typeKind: !_TypeKind Output
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Enum
        typeName: EnumOutpCnstEnum
      name: type
  !_Identifier RefOutpCnstEnumPrnt: !_TypeOutput
    allFields:
    - !_ObjectFor(_OutputField)
      name: field
      object: RefOutpCnstEnumPrnt
      type: !_OutputBase
        typeParam: type
    fields:
    - !_OutputField
      name: field
      type: !_OutputBase
        typeParam: type
    name: RefOutpCnstEnumPrnt
    typeKind: !_TypeKind Output
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Enum
        typeName: ParentOutpCnstEnumPrnt
      name: type
  !_Identifier RefOutpCnstFieldDmn: !_TypeOutput
    allFields:
    - !_ObjectFor(_OutputField)
      name: field
      object: RefOutpCnstFieldDmn
      type: !_OutputBase
        typeParam: ref
    fields:
    - !_OutputField
      name: field
      type: !_OutputBase
        typeParam: ref
    name: RefOutpCnstFieldDmn
    typeKind: !_TypeKind Output
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Basic
        typeName: String
      name: ref
  !_Identifier RefOutpCnstFieldDual: !_TypeOutput
    allFields:
    - !_ObjectFor(_OutputField)
      name: field
      object: RefOutpCnstFieldDual
      type: !_OutputBase
        typeParam: ref
    fields:
    - !_OutputField
      name: field
      type: !_OutputBase
        typeParam: ref
    name: RefOutpCnstFieldDual
    typeKind: !_TypeKind Output
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Dual
        typeName: PrntOutpCnstFieldDual
      name: ref
  !_Identifier RefOutpCnstFieldObj: !_TypeOutput
    allFields:
    - !_ObjectFor(_OutputField)
      name: field
      object: RefOutpCnstFieldObj
      type: !_OutputBase
        typeParam: ref
    fields:
    - !_OutputField
      name: field
      type: !_OutputBase
        typeParam: ref
    name: RefOutpCnstFieldObj
    typeKind: !_TypeKind Output
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Output
        typeName: PrntOutpCnstFieldObj
      name: ref
  !_Identifier RefOutpCnstPrntDualPrnt: !_TypeOutput
    name: RefOutpCnstPrntDualPrnt
    parent: !_OutputBase
      typeParam: ref
    typeKind: !_TypeKind Output
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Dual
        typeName: PrntOutpCnstPrntDualPrnt
      name: ref
  !_Identifier RefOutpCnstPrntEnum: !_TypeOutput
    allFields:
    - !_ObjectFor(_OutputField)
      name: field
      object: RefOutpCnstPrntEnum
      type: !_OutputBase
        typeParam: type
    fields:
    - !_OutputField
      name: field
      type: !_OutputBase
        typeParam: type
    name: RefOutpCnstPrntEnum
    typeKind: !_TypeKind Output
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Enum
        typeName: EnumOutpCnstPrntEnum
      name: type
  !_Identifier RefOutpCnstPrntObjPrnt: !_TypeOutput
    name: RefOutpCnstPrntObjPrnt
    parent: !_OutputBase
      typeParam: ref
    typeKind: !_TypeKind Output
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Output
        typeName: PrntOutpCnstPrntObjPrnt
      name: ref
  !_Identifier RefOutpGnrcAltArg: !_TypeOutput
    allAlternates:
    - !_ObjectFor(_OutputAlternate)
      object: RefOutpGnrcAltArg
      type: !_OutputBase
        typeParam: ref
    alternates:
    - !_OutputAlternate
      type: !_OutputBase
        typeParam: ref
    name: RefOutpGnrcAltArg
    typeKind: !_TypeKind Output
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Basic
        typeName: String
      name: ref
  !_Identifier RefOutpGnrcAltArgDescr: !_TypeOutput
    allAlternates:
    - !_ObjectFor(_OutputAlternate)
      object: RefOutpGnrcAltArgDescr
      type: !_OutputBase
        typeParam: ref
    alternates:
    - !_OutputAlternate
      type: !_OutputBase
        typeParam: ref
    name: RefOutpGnrcAltArgDescr
    typeKind: !_TypeKind Output
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Basic
        typeName: String
      name: ref
  !_Identifier RefOutpGnrcAltDual: !_TypeOutput
    allAlternates:
    - !_ObjectFor(_OutputAlternate)
      object: RefOutpGnrcAltDual
      type: !_OutputBase
        typeParam: ref
    alternates:
    - !_OutputAlternate
      type: !_OutputBase
        typeParam: ref
    name: RefOutpGnrcAltDual
    typeKind: !_TypeKind Output
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Internal
        typeName: _Dual
      name: ref
  !_Identifier RefOutpGnrcAltModParam: !_TypeOutput
    allAlternates:
    - !_ObjectFor(_OutputAlternate)
      collections:
      - !_ModifierTypeParam
        by: mod
        modifierKind: !_ModifierKind Param
      object: RefOutpGnrcAltModParam
      type: !_OutputBase
        typeParam: ref
    alternates:
    - !_OutputAlternate
      collections:
      - !_ModifierTypeParam
        by: mod
        modifierKind: !_ModifierKind Param
      type: !_OutputBase
        typeParam: ref
    name: RefOutpGnrcAltModParam
    typeKind: !_TypeKind Output
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Basic
        typeName: String
      name: ref
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Basic
        typeName: String
      name: mod
  !_Identifier RefOutpGnrcAltModStr: !_TypeOutput
    allAlternates:
    - !_ObjectFor(_OutputAlternate)
      collections:
      - !_ModifierDictionary
        by: '*'
        modifierKind: !_ModifierKind Dict
        typeKind: !_SimpleKind Basic
      object: RefOutpGnrcAltModStr
      type: !_OutputBase
        typeParam: ref
    alternates:
    - !_OutputAlternate
      collections:
      - !_ModifierDictionary
        by: '*'
        modifierKind: !_ModifierKind Dict
        typeKind: !_SimpleKind Basic
      type: !_OutputBase
        typeParam: ref
    name: RefOutpGnrcAltModStr
    typeKind: !_TypeKind Output
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Basic
        typeName: String
      name: ref
  !_Identifier RefOutpGnrcAltParam: !_TypeOutput
    allAlternates:
    - !_ObjectFor(_OutputAlternate)
      object: RefOutpGnrcAltParam
      type: !_OutputBase
        typeParam: ref
    alternates:
    - !_OutputAlternate
      type: !_OutputBase
        typeParam: ref
    name: RefOutpGnrcAltParam
    typeKind: !_TypeKind Output
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Internal
        typeName: _Output
      name: ref
  !_Identifier RefOutpGnrcAltSmpl: !_TypeOutput
    allAlternates:
    - !_ObjectFor(_OutputAlternate)
      object: RefOutpGnrcAltSmpl
      type: !_OutputBase
        typeParam: ref
    alternates:
    - !_OutputAlternate
      type: !_OutputBase
        typeParam: ref
    name: RefOutpGnrcAltSmpl
    typeKind: !_TypeKind Output
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Basic
        typeName: String
      name: ref
  !_Identifier RefOutpGnrcEnum: !_TypeOutput
    allFields:
    - !_ObjectFor(_OutputField)
      name: field
      object: RefOutpGnrcEnum
      type: !_OutputBase
        typeParam: type
    fields:
    - !_OutputField
      name: field
      type: !_OutputBase
        typeParam: type
    name: RefOutpGnrcEnum
    typeKind: !_TypeKind Output
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Internal
        typeName: _Enum
      name: type
  !_Identifier RefOutpGnrcFieldArg: !_TypeOutput
    allAlternates:
    - !_ObjectFor(_OutputAlternate)
      object: RefOutpGnrcFieldArg
      type: !_OutputBase
        typeParam: ref
    alternates:
    - !_OutputAlternate
      type: !_OutputBase
        typeParam: ref
    name: RefOutpGnrcFieldArg
    typeKind: !_TypeKind Output
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Basic
        typeName: String
      name: ref
  !_Identifier RefOutpGnrcFieldDual: !_TypeOutput
    allAlternates:
    - !_ObjectFor(_OutputAlternate)
      object: RefOutpGnrcFieldDual
      type: !_OutputBase
        typeParam: ref
    alternates:
    - !_OutputAlternate
      type: !_OutputBase
        typeParam: ref
    name: RefOutpGnrcFieldDual
    typeKind: !_TypeKind Output
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Internal
        typeName: _Dual
      name: ref
  !_Identifier RefOutpGnrcFieldParam: !_TypeOutput
    allAlternates:
    - !_ObjectFor(_OutputAlternate)
      object: RefOutpGnrcFieldParam
      type: !_OutputBase
        typeParam: ref
    alternates:
    - !_OutputAlternate
      type: !_OutputBase
        typeParam: ref
    name: RefOutpGnrcFieldParam
    typeKind: !_TypeKind Output
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Internal
        typeName: _Output
      name: ref
  !_Identifier RefOutpGnrcPrntArg: !_TypeOutput
    allAlternates:
    - !_ObjectFor(_OutputAlternate)
      object: RefOutpGnrcPrntArg
      type: !_OutputBase
        typeParam: ref
    alternates:
    - !_OutputAlternate
      type: !_OutputBase
        typeParam: ref
    name: RefOutpGnrcPrntArg
    typeKind: !_TypeKind Output
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Basic
        typeName: String
      name: ref
  !_Identifier RefOutpGnrcPrntDual: !_TypeOutput
    allAlternates:
    - !_ObjectFor(_OutputAlternate)
      object: RefOutpGnrcPrntDual
      type: !_OutputBase
        typeParam: ref
    alternates:
    - !_OutputAlternate
      type: !_OutputBase
        typeParam: ref
    name: RefOutpGnrcPrntDual
    typeKind: !_TypeKind Output
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Internal
        typeName: _Dual
      name: ref
  !_Identifier RefOutpGnrcPrntDualPrnt: !_TypeOutput
    name: RefOutpGnrcPrntDualPrnt
    parent: !_OutputBase
      typeParam: ref
    typeKind: !_TypeKind Output
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Internal
        typeName: _Dual
      name: ref
  !_Identifier RefOutpGnrcPrntParam: !_TypeOutput
    allAlternates:
    - !_ObjectFor(_OutputAlternate)
      object: RefOutpGnrcPrntParam
      type: !_OutputBase
        typeParam: ref
    alternates:
    - !_OutputAlternate
      type: !_OutputBase
        typeParam: ref
    name: RefOutpGnrcPrntParam
    typeKind: !_TypeKind Output
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Internal
        typeName: _Output
      name: ref
  !_Identifier RefOutpGnrcPrntParamPrnt: !_TypeOutput
    name: RefOutpGnrcPrntParamPrnt
    parent: !_OutputBase
      typeParam: ref
    typeKind: !_TypeKind Output
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Internal
        typeName: _Output
      name: ref
  !_Identifier RefOutpGnrcValue: !_TypeOutput
    allFields:
    - !_ObjectFor(_OutputField)
      name: field
      object: RefOutpGnrcValue
      type: !_OutputBase
        typeParam: type
    fields:
    - !_OutputField
      name: field
      type: !_OutputBase
        typeParam: type
    name: RefOutpGnrcValue
    typeKind: !_TypeKind Output
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Internal
        typeName: _Enum
      name: type
  !_Identifier RefOutpObjPrnt: !_TypeOutput
    name: RefOutpObjPrnt
    typeKind: !_TypeKind Output
  !_Identifier RefOutpPrnt: !_TypeOutput
    allAlternates:
    - !_ObjectFor(_OutputAlternate)
      object: RefOutpPrnt
      type: !_OutputBase
        output: String
    allFields:
    - !_ObjectFor(_OutputField)
      name: parent
      object: RefOutpPrnt
      type: !_OutputBase
        output: Number
    alternates:
    - !_OutputAlternate
      type: !_OutputBase
        output: String
    fields:
    - !_OutputField
      name: parent
      type: !_OutputBase
        output: Number
    name: RefOutpPrnt
    typeKind: !_TypeKind Output
  !_Identifier RefOutpPrntAlt: !_TypeOutput
    allAlternates:
    - !_ObjectFor(_OutputAlternate)
      object: RefOutpPrntAlt
      type: !_OutputBase
        output: String
    allFields:
    - !_ObjectFor(_OutputField)
      name: parent
      object: RefOutpPrntAlt
      type: !_OutputBase
        output: Number
    alternates:
    - !_OutputAlternate
      type: !_OutputBase
        output: String
    fields:
    - !_OutputField
      name: parent
      type: !_OutputBase
        output: Number
    name: RefOutpPrntAlt
    typeKind: !_TypeKind Output
  !_Identifier RefOutpPrntDescr: !_TypeOutput
    allAlternates:
    - !_ObjectFor(_OutputAlternate)
      object: RefOutpPrntDescr
      type: !_OutputBase
        output: String
    allFields:
    - !_ObjectFor(_OutputField)
      name: parent
      object: RefOutpPrntDescr
      type: !_OutputBase
        output: Number
    alternates:
    - !_OutputAlternate
      type: !_OutputBase
        output: String
    fields:
    - !_OutputField
      name: parent
      type: !_OutputBase
        output: Number
    name: RefOutpPrntDescr
    typeKind: !_TypeKind Output
  !_Identifier RefOutpPrntDual: !_TypeDual
    allAlternates:
    - !_ObjectFor(_DualAlternate)
      object: RefOutpPrntDual
      type: !_DualBase
        dual: String
    allFields:
    - !_ObjectFor(_DualField)
      name: parent
      object: RefOutpPrntDual
      type: !_DualBase
        dual: Number
    alternates:
    - !_DualAlternate
      type: !_DualBase
        dual: String
    fields:
    - !_DualField
      name: parent
      type: !_DualBase
        dual: Number
    name: RefOutpPrntDual
    typeKind: !_TypeKind Dual
  !_Identifier RefOutpPrntField: !_TypeOutput
    allAlternates:
    - !_ObjectFor(_OutputAlternate)
      object: RefOutpPrntField
      type: !_OutputBase
        output: String
    allFields:
    - !_ObjectFor(_OutputField)
      name: parent
      object: RefOutpPrntField
      type: !_OutputBase
        output: Number
    alternates:
    - !_OutputAlternate
      type: !_OutputBase
        output: String
    fields:
    - !_OutputField
      name: parent
      type: !_OutputBase
        output: Number
    name: RefOutpPrntField
    typeKind: !_TypeKind Output
  !_Identifier RefOutpPrntGnrc: !_TypeOutput
    allFields:
    - !_ObjectFor(_OutputField)
      name: field
      object: RefOutpPrntGnrc
      type: !_OutputBase
        typeParam: type
    fields:
    - !_OutputField
      name: field
      type: !_OutputBase
        typeParam: type
    name: RefOutpPrntGnrc
    typeKind: !_TypeKind Output
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Enum
        typeName: PrntOutpPrntGnrc
      name: type
  !_Identifier RefOutpPrntParamDiff: !_TypeOutput
    allAlternates:
    - !_ObjectFor(_OutputAlternate)
      object: RefOutpPrntParamDiff
      type: !_OutputBase
        typeParam: b
    alternates:
    - !_OutputAlternate
      type: !_OutputBase
        typeParam: b
    name: RefOutpPrntParamDiff
    typeKind: !_TypeKind Output
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Basic
        typeName: String
      name: b
  !_Identifier RefOutpPrntParamSame: !_TypeOutput
    allAlternates:
    - !_ObjectFor(_OutputAlternate)
      object: RefOutpPrntParamSame
      type: !_OutputBase
        typeParam: a
    alternates:
    - !_OutputAlternate
      type: !_OutputBase
        typeParam: a
    name: RefOutpPrntParamSame
    typeKind: !_TypeKind Output
    typeParams:
    - !_TypeParam
      constraint: !_TypeRef(_TypeKind)
        typeKind: !_TypeKind Basic
        typeName: String
      name: a
  !_Identifier UnionAlias: !_TypeUnion
    aliases: [UnA1, UnA2]
    allItems:
    - !_UnionMember
      name: Boolean
      union: UnionAlias
    - !_UnionMember
      name: Number
      union: UnionAlias
    items:
    - !_Aliased
      name: Boolean
    - !_Aliased
      name: Number
    name: UnionAlias
    typeKind: !_TypeKind Union
  !_Identifier UnionDescr: !_TypeUnion
    allItems:
    - !_UnionMember
      description: 'Union Descr'
      name: Number
      union: UnionDescr
    items:
    - !_Aliased
      description: 'Union Descr'
      name: Number
    name: UnionDescr
    typeKind: !_TypeKind Union
  !_Identifier UnionDiff: !_TypeUnion
    allItems:
    - !_UnionMember
      name: Boolean
      union: UnionDiff
    - !_UnionMember
      name: Number
      union: UnionDiff
    items:
    - !_Aliased
      name: Boolean
    - !_Aliased
      name: Number
    name: UnionDiff
    typeKind: !_TypeKind Union
  !_Identifier UnionPrnt: !_TypeUnion
    allItems:
    - !_UnionMember
      name: Number
      union: PrntUnionPrnt
    - !_UnionMember
      name: String
      union: UnionPrnt
    items:
    - !_Aliased
      name: String
    name: UnionPrnt
    parent: !_TypeRef(_SimpleKind)
      typeKind: !_SimpleKind Union
      typeName: PrntUnionPrnt
    typeKind: !_TypeKind Union
  !_Identifier UnionPrntDup: !_TypeUnion
    allItems:
    - !_UnionMember
      name: Number
      union: PrntUnionPrntDup
    - !_UnionMember
      name: Number
      union: UnionPrntDup
    items:
    - !_Aliased
      name: Number
    name: UnionPrntDup
    parent: !_TypeRef(_SimpleKind)
      typeKind: !_SimpleKind Union
      typeName: PrntUnionPrntDup
    typeKind: !_TypeKind Union
  !_Identifier UnionSame: !_TypeUnion
    allItems:
    - !_UnionMember
      name: Boolean
      union: UnionSame
    items:
    - !_Aliased
      name: Boolean
    name: UnionSame
    typeKind: !_TypeKind Union
  !_Identifier UnionSamePrnt: !_TypeUnion
    allItems:
    - !_UnionMember
      name: String
      union: PrntUnionSamePrnt
    - !_UnionMember
      name: Boolean
      union: UnionSamePrnt
    items:
    - !_Aliased
      name: Boolean
    name: UnionSamePrnt
    parent: !_TypeRef(_SimpleKind)
      typeKind: !_SimpleKind Union
      typeName: PrntUnionSamePrnt
    typeKind: !_TypeKind Union