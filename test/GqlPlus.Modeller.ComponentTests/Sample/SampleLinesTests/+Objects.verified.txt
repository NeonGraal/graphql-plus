!_Schema
types: !_Map_Type
  !_Identifier AltDualAlt: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        dual: String
        object: AltDualAlt
    allFields:
      - !_ObjectFor(_DualField)
        name: alt
        object: AltDualAlt
        type: !_DualBase
          dual: Number
    alternates:
      - !_DualAlternate
        dual: String
    fields:
      - !_DualField
        name: alt
        type: !_DualBase
          dual: Number
    name: AltDualAlt
    typeKind: !_TypeKind Dual
  !_Identifier AltDualAltModBool: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        dual: String
        object: AltDualAltModBool
    allFields:
      - !_ObjectFor(_DualField)
        name: alt
        object: AltDualAltModBool
        type: !_DualBase
          dual: Number
    alternates:
      - !_DualAlternate
        dual: String
    fields:
      - !_DualField
        name: alt
        type: !_DualBase
          dual: Number
    name: AltDualAltModBool
    typeKind: !_TypeKind Dual
  !_Identifier AltDualAltModParam: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        dual: String
        object: AltDualAltModParam
    allFields:
      - !_ObjectFor(_DualField)
        name: alt
        object: AltDualAltModParam
        type: !_DualBase
          dual: Number
    alternates:
      - !_DualAlternate
        dual: String
    fields:
      - !_DualField
        name: alt
        type: !_DualBase
          dual: Number
    name: AltDualAltModParam
    typeKind: !_TypeKind Dual
  !_Identifier AltDualGnrcAltDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        dual: String
        object: AltDualGnrcAltDual
    allFields:
      - !_ObjectFor(_DualField)
        name: alt
        object: AltDualGnrcAltDual
        type: !_DualBase
          dual: Number
    alternates:
      - !_DualAlternate
        dual: String
    fields:
      - !_DualField
        name: alt
        type: !_DualBase
          dual: Number
    name: AltDualGnrcAltDual
    typeKind: !_TypeKind Dual
  !_Identifier AltDualGnrcAltParam: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        dual: String
        object: AltDualGnrcAltParam
    allFields:
      - !_ObjectFor(_DualField)
        name: alt
        object: AltDualGnrcAltParam
        type: !_DualBase
          dual: Number
    alternates:
      - !_DualAlternate
        dual: String
    fields:
      - !_DualField
        name: alt
        type: !_DualBase
          dual: Number
    name: AltDualGnrcAltParam
    typeKind: !_TypeKind Dual
  !_Identifier AltDualGnrcFieldDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        dual: String
        object: AltDualGnrcFieldDual
    allFields:
      - !_ObjectFor(_DualField)
        name: alt
        object: AltDualGnrcFieldDual
        type: !_DualBase
          dual: Number
    alternates:
      - !_DualAlternate
        dual: String
    fields:
      - !_DualField
        name: alt
        type: !_DualBase
          dual: Number
    name: AltDualGnrcFieldDual
    typeKind: !_TypeKind Dual
  !_Identifier AltDualGnrcFieldParam: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        dual: String
        object: AltDualGnrcFieldParam
    allFields:
      - !_ObjectFor(_DualField)
        name: alt
        object: AltDualGnrcFieldParam
        type: !_DualBase
          dual: Number
    alternates:
      - !_DualAlternate
        dual: String
    fields:
      - !_DualField
        name: alt
        type: !_DualBase
          dual: Number
    name: AltDualGnrcFieldParam
    typeKind: !_TypeKind Dual
  !_Identifier AltDualGnrcPrntDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        dual: String
        object: AltDualGnrcPrntDual
    allFields:
      - !_ObjectFor(_DualField)
        name: alt
        object: AltDualGnrcPrntDual
        type: !_DualBase
          dual: Number
    alternates:
      - !_DualAlternate
        dual: String
    fields:
      - !_DualField
        name: alt
        type: !_DualBase
          dual: Number
    name: AltDualGnrcPrntDual
    typeKind: !_TypeKind Dual
  !_Identifier AltDualGnrcPrntDualPrnt: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        dual: String
        object: AltDualGnrcPrntDualPrnt
    allFields:
      - !_ObjectFor(_DualField)
        name: alt
        object: AltDualGnrcPrntDualPrnt
        type: !_DualBase
          dual: Number
    alternates:
      - !_DualAlternate
        dual: String
    fields:
      - !_DualField
        name: alt
        type: !_DualBase
          dual: Number
    name: AltDualGnrcPrntDualPrnt
    typeKind: !_TypeKind Dual
  !_Identifier AltDualGnrcPrntParam: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        dual: String
        object: AltDualGnrcPrntParam
    allFields:
      - !_ObjectFor(_DualField)
        name: alt
        object: AltDualGnrcPrntParam
        type: !_DualBase
          dual: Number
    alternates:
      - !_DualAlternate
        dual: String
    fields:
      - !_DualField
        name: alt
        type: !_DualBase
          dual: Number
    name: AltDualGnrcPrntParam
    typeKind: !_TypeKind Dual
  !_Identifier AltDualGnrcPrntParamPrnt: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        dual: String
        object: AltDualGnrcPrntParamPrnt
    allFields:
      - !_ObjectFor(_DualField)
        name: alt
        object: AltDualGnrcPrntParamPrnt
        type: !_DualBase
          dual: Number
    alternates:
      - !_DualAlternate
        dual: String
    fields:
      - !_DualField
        name: alt
        type: !_DualBase
          dual: Number
    name: AltDualGnrcPrntParamPrnt
    typeKind: !_TypeKind Dual
  !_Identifier AltInpAlt: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        input: String
        object: AltInpAlt
    allFields:
      - !_ObjectFor(_InputField)
        name: alt
        object: AltInpAlt
        type: !_InputBase
          input: Number
    alternates:
      - !_InputAlternate
        input: String
    fields:
      - !_InputField
        name: alt
        type: !_InputBase
          input: Number
    name: AltInpAlt
    typeKind: !_TypeKind Input
  !_Identifier AltInpAltModBool: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        input: String
        object: AltInpAltModBool
    allFields:
      - !_ObjectFor(_InputField)
        name: alt
        object: AltInpAltModBool
        type: !_InputBase
          input: Number
    alternates:
      - !_InputAlternate
        input: String
    fields:
      - !_InputField
        name: alt
        type: !_InputBase
          input: Number
    name: AltInpAltModBool
    typeKind: !_TypeKind Input
  !_Identifier AltInpAltModParam: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        input: String
        object: AltInpAltModParam
    allFields:
      - !_ObjectFor(_InputField)
        name: alt
        object: AltInpAltModParam
        type: !_InputBase
          input: Number
    alternates:
      - !_InputAlternate
        input: String
    fields:
      - !_InputField
        name: alt
        type: !_InputBase
          input: Number
    name: AltInpAltModParam
    typeKind: !_TypeKind Input
  !_Identifier AltInpGnrcAltDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        dual: String
        object: AltInpGnrcAltDual
    allFields:
      - !_ObjectFor(_DualField)
        name: alt
        object: AltInpGnrcAltDual
        type: !_DualBase
          dual: Number
    alternates:
      - !_DualAlternate
        dual: String
    fields:
      - !_DualField
        name: alt
        type: !_DualBase
          dual: Number
    name: AltInpGnrcAltDual
    typeKind: !_TypeKind Dual
  !_Identifier AltInpGnrcAltParam: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        input: String
        object: AltInpGnrcAltParam
    allFields:
      - !_ObjectFor(_InputField)
        name: alt
        object: AltInpGnrcAltParam
        type: !_InputBase
          input: Number
    alternates:
      - !_InputAlternate
        input: String
    fields:
      - !_InputField
        name: alt
        type: !_InputBase
          input: Number
    name: AltInpGnrcAltParam
    typeKind: !_TypeKind Input
  !_Identifier AltInpGnrcFieldDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        dual: String
        object: AltInpGnrcFieldDual
    allFields:
      - !_ObjectFor(_DualField)
        name: alt
        object: AltInpGnrcFieldDual
        type: !_DualBase
          dual: Number
    alternates:
      - !_DualAlternate
        dual: String
    fields:
      - !_DualField
        name: alt
        type: !_DualBase
          dual: Number
    name: AltInpGnrcFieldDual
    typeKind: !_TypeKind Dual
  !_Identifier AltInpGnrcFieldParam: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        input: String
        object: AltInpGnrcFieldParam
    allFields:
      - !_ObjectFor(_InputField)
        name: alt
        object: AltInpGnrcFieldParam
        type: !_InputBase
          input: Number
    alternates:
      - !_InputAlternate
        input: String
    fields:
      - !_InputField
        name: alt
        type: !_InputBase
          input: Number
    name: AltInpGnrcFieldParam
    typeKind: !_TypeKind Input
  !_Identifier AltInpGnrcPrntDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        dual: String
        object: AltInpGnrcPrntDual
    allFields:
      - !_ObjectFor(_DualField)
        name: alt
        object: AltInpGnrcPrntDual
        type: !_DualBase
          dual: Number
    alternates:
      - !_DualAlternate
        dual: String
    fields:
      - !_DualField
        name: alt
        type: !_DualBase
          dual: Number
    name: AltInpGnrcPrntDual
    typeKind: !_TypeKind Dual
  !_Identifier AltInpGnrcPrntDualPrnt: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        dual: String
        object: AltInpGnrcPrntDualPrnt
    allFields:
      - !_ObjectFor(_DualField)
        name: alt
        object: AltInpGnrcPrntDualPrnt
        type: !_DualBase
          dual: Number
    alternates:
      - !_DualAlternate
        dual: String
    fields:
      - !_DualField
        name: alt
        type: !_DualBase
          dual: Number
    name: AltInpGnrcPrntDualPrnt
    typeKind: !_TypeKind Dual
  !_Identifier AltInpGnrcPrntParam: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        input: String
        object: AltInpGnrcPrntParam
    allFields:
      - !_ObjectFor(_InputField)
        name: alt
        object: AltInpGnrcPrntParam
        type: !_InputBase
          input: Number
    alternates:
      - !_InputAlternate
        input: String
    fields:
      - !_InputField
        name: alt
        type: !_InputBase
          input: Number
    name: AltInpGnrcPrntParam
    typeKind: !_TypeKind Input
  !_Identifier AltInpGnrcPrntParamPrnt: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        input: String
        object: AltInpGnrcPrntParamPrnt
    allFields:
      - !_ObjectFor(_InputField)
        name: alt
        object: AltInpGnrcPrntParamPrnt
        type: !_InputBase
          input: Number
    alternates:
      - !_InputAlternate
        input: String
    fields:
      - !_InputField
        name: alt
        type: !_InputBase
          input: Number
    name: AltInpGnrcPrntParamPrnt
    typeKind: !_TypeKind Input
  !_Identifier AltOutpAlt: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: AltOutpAlt
        output: String
    allFields:
      - !_ObjectFor(_OutputField)
        name: alt
        object: AltOutpAlt
        type: !_OutputBase
          output: Number
    alternates:
      - !_OutputAlternate
        output: String
    fields:
      - !_OutputField
        name: alt
        type: !_OutputBase
          output: Number
    name: AltOutpAlt
    typeKind: !_TypeKind Output
  !_Identifier AltOutpAltModBool: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: AltOutpAltModBool
        output: String
    allFields:
      - !_ObjectFor(_OutputField)
        name: alt
        object: AltOutpAltModBool
        type: !_OutputBase
          output: Number
    alternates:
      - !_OutputAlternate
        output: String
    fields:
      - !_OutputField
        name: alt
        type: !_OutputBase
          output: Number
    name: AltOutpAltModBool
    typeKind: !_TypeKind Output
  !_Identifier AltOutpAltModParam: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: AltOutpAltModParam
        output: String
    allFields:
      - !_ObjectFor(_OutputField)
        name: alt
        object: AltOutpAltModParam
        type: !_OutputBase
          output: Number
    alternates:
      - !_OutputAlternate
        output: String
    fields:
      - !_OutputField
        name: alt
        type: !_OutputBase
          output: Number
    name: AltOutpAltModParam
    typeKind: !_TypeKind Output
  !_Identifier AltOutpGnrcAltDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        dual: String
        object: AltOutpGnrcAltDual
    allFields:
      - !_ObjectFor(_DualField)
        name: alt
        object: AltOutpGnrcAltDual
        type: !_DualBase
          dual: Number
    alternates:
      - !_DualAlternate
        dual: String
    fields:
      - !_DualField
        name: alt
        type: !_DualBase
          dual: Number
    name: AltOutpGnrcAltDual
    typeKind: !_TypeKind Dual
  !_Identifier AltOutpGnrcAltParam: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: AltOutpGnrcAltParam
        output: String
    allFields:
      - !_ObjectFor(_OutputField)
        name: alt
        object: AltOutpGnrcAltParam
        type: !_OutputBase
          output: Number
    alternates:
      - !_OutputAlternate
        output: String
    fields:
      - !_OutputField
        name: alt
        type: !_OutputBase
          output: Number
    name: AltOutpGnrcAltParam
    typeKind: !_TypeKind Output
  !_Identifier AltOutpGnrcFieldDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        dual: String
        object: AltOutpGnrcFieldDual
    allFields:
      - !_ObjectFor(_DualField)
        name: alt
        object: AltOutpGnrcFieldDual
        type: !_DualBase
          dual: Number
    alternates:
      - !_DualAlternate
        dual: String
    fields:
      - !_DualField
        name: alt
        type: !_DualBase
          dual: Number
    name: AltOutpGnrcFieldDual
    typeKind: !_TypeKind Dual
  !_Identifier AltOutpGnrcFieldParam: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: AltOutpGnrcFieldParam
        output: String
    allFields:
      - !_ObjectFor(_OutputField)
        name: alt
        object: AltOutpGnrcFieldParam
        type: !_OutputBase
          output: Number
    alternates:
      - !_OutputAlternate
        output: String
    fields:
      - !_OutputField
        name: alt
        type: !_OutputBase
          output: Number
    name: AltOutpGnrcFieldParam
    typeKind: !_TypeKind Output
  !_Identifier AltOutpGnrcPrntDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        dual: String
        object: AltOutpGnrcPrntDual
    allFields:
      - !_ObjectFor(_DualField)
        name: alt
        object: AltOutpGnrcPrntDual
        type: !_DualBase
          dual: Number
    alternates:
      - !_DualAlternate
        dual: String
    fields:
      - !_DualField
        name: alt
        type: !_DualBase
          dual: Number
    name: AltOutpGnrcPrntDual
    typeKind: !_TypeKind Dual
  !_Identifier AltOutpGnrcPrntDualPrnt: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        dual: String
        object: AltOutpGnrcPrntDualPrnt
    allFields:
      - !_ObjectFor(_DualField)
        name: alt
        object: AltOutpGnrcPrntDualPrnt
        type: !_DualBase
          dual: Number
    alternates:
      - !_DualAlternate
        dual: String
    fields:
      - !_DualField
        name: alt
        type: !_DualBase
          dual: Number
    name: AltOutpGnrcPrntDualPrnt
    typeKind: !_TypeKind Dual
  !_Identifier AltOutpGnrcPrntParam: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: AltOutpGnrcPrntParam
        output: String
    allFields:
      - !_ObjectFor(_OutputField)
        name: alt
        object: AltOutpGnrcPrntParam
        type: !_OutputBase
          output: Number
    alternates:
      - !_OutputAlternate
        output: String
    fields:
      - !_OutputField
        name: alt
        type: !_OutputBase
          output: Number
    name: AltOutpGnrcPrntParam
    typeKind: !_TypeKind Output
  !_Identifier AltOutpGnrcPrntParamPrnt: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: AltOutpGnrcPrntParamPrnt
        output: String
    allFields:
      - !_ObjectFor(_OutputField)
        name: alt
        object: AltOutpGnrcPrntParamPrnt
        type: !_OutputBase
          output: Number
    alternates:
      - !_OutputAlternate
        output: String
    fields:
      - !_OutputField
        name: alt
        type: !_OutputBase
          output: Number
    name: AltOutpGnrcPrntParamPrnt
    typeKind: !_TypeKind Output
  !_Identifier DomOutpParamModDmn: !_DomainNumber
    allItems:
      - !_DomainItem(_DomainRange)
        domain: DomOutpParamModDmn
        exclude: false
        from: 1
        to: 10
    domainKind: !_DomainKind Number
    items:
      - !_DomainRange
        exclude: false
        from: 1
        to: 10
    name: DomOutpParamModDmn
    typeKind: !_TypeKind Domain
  !_Identifier DomOutpParamModParam: !_DomainNumber
    allItems:
      - !_DomainItem(_DomainRange)
        domain: DomOutpParamModParam
        exclude: false
        from: 1
        to: 10
    domainKind: !_DomainKind Number
    items:
      - !_DomainRange
        exclude: false
        from: 1
        to: 10
    name: DomOutpParamModParam
    typeKind: !_TypeKind Domain
  !_Identifier DualAlt: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        dual: AltDualAlt
        object: DualAlt
    alternates:
      - !_DualAlternate
        dual: AltDualAlt
    name: DualAlt
    typeKind: !_TypeKind Dual
  !_Identifier DualAltDescr: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        description: 'Test Descr'
        dual: String
        object: DualAltDescr
    alternates:
      - !_DualAlternate
        description: 'Test Descr'
        dual: String
    name: DualAltDescr
    typeKind: !_TypeKind Dual
  !_Identifier DualAltDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        dual: DualDualAltDual
        object: DualAltDual
    alternates:
      - !_DualAlternate
        dual: DualDualAltDual
    name: DualAltDual
    typeKind: !_TypeKind Dual
  !_Identifier DualAltModBool: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        collections:
          - !_ModifierDictionary
            by: ^
            modifierKind: !_ModifierKind Dict
            typeKind: !_SimpleKind Basic
        dual: AltDualAltModBool
        object: DualAltModBool
    alternates:
      - !_DualAlternate
        collections:
          - !_ModifierDictionary
            by: ^
            modifierKind: !_ModifierKind Dict
            typeKind: !_SimpleKind Basic
        dual: AltDualAltModBool
    name: DualAltModBool
    typeKind: !_TypeKind Dual
  !_Identifier DualAltModParam: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        collections:
          - !_ModifierTypeParam
            by: mod
            modifierKind: !_ModifierKind Param
        dual: AltDualAltModParam
        object: DualAltModParam
    alternates:
      - !_DualAlternate
        collections:
          - !_ModifierTypeParam
            by: mod
            modifierKind: !_ModifierKind Param
        dual: AltDualAltModParam
    name: DualAltModParam
    typeKind: !_TypeKind Dual
    typeParams:
      - !_Named
        name: mod
  !_Identifier DualAltSmpl: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        dual: String
        object: DualAltSmpl
    alternates:
      - !_DualAlternate
        dual: String
    name: DualAltSmpl
    typeKind: !_TypeKind Dual
  !_Identifier DualDualAltDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        dual: String
        object: DualDualAltDual
    allFields:
      - !_ObjectFor(_DualField)
        name: alt
        object: DualDualAltDual
        type: !_DualBase
          dual: Number
    alternates:
      - !_DualAlternate
        dual: String
    fields:
      - !_DualField
        name: alt
        type: !_DualBase
          dual: Number
    name: DualDualAltDual
    typeKind: !_TypeKind Dual
  !_Identifier DualField: !_TypeDual
    allFields:
      - !_ObjectFor(_DualField)
        name: field
        object: DualField
        type: !_DualBase
          dual: '*'
    fields:
      - !_DualField
        name: field
        type: !_DualBase
          dual: '*'
    name: DualField
    typeKind: !_TypeKind Dual
  !_Identifier DualFieldDescr: !_TypeDual
    allFields:
      - !_ObjectFor(_DualField)
        description: 'Test Descr'
        name: field
        object: DualFieldDescr
        type: !_DualBase
          dual: '*'
    fields:
      - !_DualField
        description: 'Test Descr'
        name: field
        type: !_DualBase
          dual: '*'
    name: DualFieldDescr
    typeKind: !_TypeKind Dual
  !_Identifier DualFieldDual: !_TypeDual
    allFields:
      - !_ObjectFor(_DualField)
        name: field
        object: DualFieldDual
        type: !_DualBase
          dual: FldDualFieldDual
    fields:
      - !_DualField
        name: field
        type: !_DualBase
          dual: FldDualFieldDual
    name: DualFieldDual
    typeKind: !_TypeKind Dual
  !_Identifier DualFieldModEnum: !_TypeDual
    allFields:
      - !_ObjectFor(_DualField)
        modifiers: [!_ModifierDictionary{by:EnumDualFieldModEnum,modifierKind:!_ModifierKind Dict,typeKind:!_SimpleKind Enum}]
        name: field
        object: DualFieldModEnum
        type: !_DualBase
          dual: '*'
    fields:
      - !_DualField
        modifiers: [!_ModifierDictionary{by:EnumDualFieldModEnum,modifierKind:!_ModifierKind Dict,typeKind:!_SimpleKind Enum}]
        name: field
        type: !_DualBase
          dual: '*'
    name: DualFieldModEnum
    typeKind: !_TypeKind Dual
  !_Identifier DualFieldModParam: !_TypeDual
    allFields:
      - !_ObjectFor(_DualField)
        modifiers: [!_ModifierTypeParam{by:mod,modifierKind:!_ModifierKind Param}]
        name: field
        object: DualFieldModParam
        type: !_DualBase
          dual: FldDualFieldModParam
    fields:
      - !_DualField
        modifiers: [!_ModifierTypeParam{by:mod,modifierKind:!_ModifierKind Param}]
        name: field
        type: !_DualBase
          dual: FldDualFieldModParam
    name: DualFieldModParam
    typeKind: !_TypeKind Dual
    typeParams:
      - !_Named
        name: mod
  !_Identifier DualFieldObj: !_TypeDual
    allFields:
      - !_ObjectFor(_DualField)
        name: field
        object: DualFieldObj
        type: !_DualBase
          dual: FldDualFieldObj
    fields:
      - !_DualField
        name: field
        type: !_DualBase
          dual: FldDualFieldObj
    name: DualFieldObj
    typeKind: !_TypeKind Dual
  !_Identifier DualFieldSmpl: !_TypeDual
    allFields:
      - !_ObjectFor(_DualField)
        name: field
        object: DualFieldSmpl
        type: !_DualBase
          dual: Number
    fields:
      - !_DualField
        name: field
        type: !_DualBase
          dual: Number
    name: DualFieldSmpl
    typeKind: !_TypeKind Dual
  !_Identifier DualFieldTypeDescr: !_TypeDual
    allFields:
      - !_ObjectFor(_DualField)
        name: field
        object: DualFieldTypeDescr
        type: !_DualBase
          description: 'Test Descr'
          dual: Number
    fields:
      - !_DualField
        name: field
        type: !_DualBase
          description: 'Test Descr'
          dual: Number
    name: DualFieldTypeDescr
    typeKind: !_TypeKind Dual
  !_Identifier DualGnrcAlt: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: DualGnrcAlt
        typeParam: type
    alternates:
      - !_DualAlternate
        typeParam: type
    name: DualGnrcAlt
    typeKind: !_TypeKind Dual
    typeParams:
      - !_Named
        name: type
  !_Identifier DualGnrcAltArg: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        dual: RefDualGnrcAltArg
        object: DualGnrcAltArg
        typeArgs:
          - !_DualArg
            typeParam: type
    alternates:
      - !_DualAlternate
        dual: RefDualGnrcAltArg
        typeArgs:
          - !_DualArg
            typeParam: type
    name: DualGnrcAltArg
    typeKind: !_TypeKind Dual
    typeParams:
      - !_Named
        name: type
  !_Identifier DualGnrcAltArgDescr: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        dual: RefDualGnrcAltArgDescr
        object: DualGnrcAltArgDescr
        typeArgs:
          - !_DualArg
            description: 'Test Descr'
            typeParam: type
    alternates:
      - !_DualAlternate
        dual: RefDualGnrcAltArgDescr
        typeArgs:
          - !_DualArg
            description: 'Test Descr'
            typeParam: type
    name: DualGnrcAltArgDescr
    typeKind: !_TypeKind Dual
    typeParams:
      - !_Named
        name: type
  !_Identifier DualGnrcAltDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        dual: RefDualGnrcAltDual
        object: DualGnrcAltDual
        typeArgs:
          - !_DualArg
            dual: AltDualGnrcAltDual
    alternates:
      - !_DualAlternate
        dual: RefDualGnrcAltDual
        typeArgs:
          - !_DualArg
            dual: AltDualGnrcAltDual
    name: DualGnrcAltDual
    typeKind: !_TypeKind Dual
  !_Identifier DualGnrcAltParam: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        dual: RefDualGnrcAltParam
        object: DualGnrcAltParam
        typeArgs:
          - !_DualArg
            dual: AltDualGnrcAltParam
    alternates:
      - !_DualAlternate
        dual: RefDualGnrcAltParam
        typeArgs:
          - !_DualArg
            dual: AltDualGnrcAltParam
    name: DualGnrcAltParam
    typeKind: !_TypeKind Dual
  !_Identifier DualGnrcAltSmpl: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        dual: RefDualGnrcAltSmpl
        object: DualGnrcAltSmpl
        typeArgs:
          - !_DualArg
            dual: String
    alternates:
      - !_DualAlternate
        dual: RefDualGnrcAltSmpl
        typeArgs:
          - !_DualArg
            dual: String
    name: DualGnrcAltSmpl
    typeKind: !_TypeKind Dual
  !_Identifier DualGnrcDescr: !_TypeDual
    allFields:
      - !_ObjectFor(_DualField)
        name: field
        object: DualGnrcDescr
        type: !_DualBase
          typeParam: type
    fields:
      - !_DualField
        name: field
        type: !_DualBase
          typeParam: type
    name: DualGnrcDescr
    typeKind: !_TypeKind Dual
    typeParams:
      - !_Named
        description: 'Test Descr'
        name: type
  !_Identifier DualGnrcDual: !_TypeDual
    allFields:
      - !_ObjectFor(_DualField)
        name: field
        object: DualGnrcDual
        type: !_DualBase
          dual: DualGnrcDualRef
          typeArgs:
            - !_DualArg
              dual: DualGnrcDualAlt
    fields:
      - !_DualField
        name: field
        type: !_DualBase
          dual: DualGnrcDualRef
          typeArgs:
            - !_DualArg
              dual: DualGnrcDualAlt
    name: DualGnrcDual
    typeKind: !_TypeKind Dual
  !_Identifier DualGnrcDualAlt: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        dual: String
        object: DualGnrcDualAlt
    allFields:
      - !_ObjectFor(_DualField)
        name: alt
        object: DualGnrcDualAlt
        type: !_DualBase
          dual: Number
    alternates:
      - !_DualAlternate
        dual: String
    fields:
      - !_DualField
        name: alt
        type: !_DualBase
          dual: Number
    name: DualGnrcDualAlt
    typeKind: !_TypeKind Dual
  !_Identifier DualGnrcDualRef: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: DualGnrcDualRef
        typeParam: ref
    alternates:
      - !_DualAlternate
        typeParam: ref
    name: DualGnrcDualRef
    typeKind: !_TypeKind Dual
    typeParams:
      - !_Named
        name: ref
  !_Identifier DualGnrcField: !_TypeDual
    allFields:
      - !_ObjectFor(_DualField)
        name: field
        object: DualGnrcField
        type: !_DualBase
          typeParam: type
    fields:
      - !_DualField
        name: field
        type: !_DualBase
          typeParam: type
    name: DualGnrcField
    typeKind: !_TypeKind Dual
    typeParams:
      - !_Named
        name: type
  !_Identifier DualGnrcFieldArg: !_TypeDual
    allFields:
      - !_ObjectFor(_DualField)
        name: field
        object: DualGnrcFieldArg
        type: !_DualBase
          dual: RefDualGnrcFieldArg
          typeArgs:
            - !_DualArg
              typeParam: type
    fields:
      - !_DualField
        name: field
        type: !_DualBase
          dual: RefDualGnrcFieldArg
          typeArgs:
            - !_DualArg
              typeParam: type
    name: DualGnrcFieldArg
    typeKind: !_TypeKind Dual
    typeParams:
      - !_Named
        name: type
  !_Identifier DualGnrcFieldDual: !_TypeDual
    allFields:
      - !_ObjectFor(_DualField)
        name: field
        object: DualGnrcFieldDual
        type: !_DualBase
          dual: RefDualGnrcFieldDual
          typeArgs:
            - !_DualArg
              dual: AltDualGnrcFieldDual
    fields:
      - !_DualField
        name: field
        type: !_DualBase
          dual: RefDualGnrcFieldDual
          typeArgs:
            - !_DualArg
              dual: AltDualGnrcFieldDual
    name: DualGnrcFieldDual
    typeKind: !_TypeKind Dual
  !_Identifier DualGnrcFieldParam: !_TypeDual
    allFields:
      - !_ObjectFor(_DualField)
        name: field
        object: DualGnrcFieldParam
        type: !_DualBase
          dual: RefDualGnrcFieldParam
          typeArgs:
            - !_DualArg
              dual: AltDualGnrcFieldParam
    fields:
      - !_DualField
        name: field
        type: !_DualBase
          dual: RefDualGnrcFieldParam
          typeArgs:
            - !_DualArg
              dual: AltDualGnrcFieldParam
    name: DualGnrcFieldParam
    typeKind: !_TypeKind Dual
  !_Identifier DualGnrcParam: !_TypeDual
    allFields:
      - !_ObjectFor(_DualField)
        name: field
        object: DualGnrcParam
        type: !_DualBase
          dual: DualGnrcParamRef
          typeArgs:
            - !_DualArg
              dual: DualGnrcParamAlt
    fields:
      - !_DualField
        name: field
        type: !_DualBase
          dual: DualGnrcParamRef
          typeArgs:
            - !_DualArg
              dual: DualGnrcParamAlt
    name: DualGnrcParam
    typeKind: !_TypeKind Dual
  !_Identifier DualGnrcParamAlt: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        dual: String
        object: DualGnrcParamAlt
    allFields:
      - !_ObjectFor(_DualField)
        name: alt
        object: DualGnrcParamAlt
        type: !_DualBase
          dual: Number
    alternates:
      - !_DualAlternate
        dual: String
    fields:
      - !_DualField
        name: alt
        type: !_DualBase
          dual: Number
    name: DualGnrcParamAlt
    typeKind: !_TypeKind Dual
  !_Identifier DualGnrcParamRef: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: DualGnrcParamRef
        typeParam: ref
    alternates:
      - !_DualAlternate
        typeParam: ref
    name: DualGnrcParamRef
    typeKind: !_TypeKind Dual
    typeParams:
      - !_Named
        name: ref
  !_Identifier DualGnrcPrnt: !_TypeDual
    name: DualGnrcPrnt
    parent: !_DualBase
      typeParam: type
    typeKind: !_TypeKind Dual
    typeParams:
      - !_Named
        name: type
  !_Identifier DualGnrcPrntArg: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: RefDualGnrcPrntArg
        typeParam: ref
    name: DualGnrcPrntArg
    parent: !_DualBase
      dual: RefDualGnrcPrntArg
      typeArgs:
        - !_DualArg
          typeParam: type
    typeKind: !_TypeKind Dual
    typeParams:
      - !_Named
        name: type
  !_Identifier DualGnrcPrntDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: RefDualGnrcPrntDual
        typeParam: ref
    name: DualGnrcPrntDual
    parent: !_DualBase
      dual: RefDualGnrcPrntDual
      typeArgs:
        - !_DualArg
          dual: AltDualGnrcPrntDual
    typeKind: !_TypeKind Dual
  !_Identifier DualGnrcPrntDualPrnt: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        dual: String
        object: AltDualGnrcPrntDualPrnt
    allFields:
      - !_ObjectFor(_DualField)
        name: alt
        object: AltDualGnrcPrntDualPrnt
        type: !_DualBase
          dual: Number
    name: DualGnrcPrntDualPrnt
    parent: !_DualBase
      dual: RefDualGnrcPrntDualPrnt
      typeArgs:
        - !_DualArg
          dual: AltDualGnrcPrntDualPrnt
    typeKind: !_TypeKind Dual
  !_Identifier DualGnrcPrntParam: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: RefDualGnrcPrntParam
        typeParam: ref
    name: DualGnrcPrntParam
    parent: !_DualBase
      dual: RefDualGnrcPrntParam
      typeArgs:
        - !_DualArg
          dual: AltDualGnrcPrntParam
    typeKind: !_TypeKind Dual
  !_Identifier DualGnrcPrntParamPrnt: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        dual: String
        object: AltDualGnrcPrntParamPrnt
    allFields:
      - !_ObjectFor(_DualField)
        name: alt
        object: AltDualGnrcPrntParamPrnt
        type: !_DualBase
          dual: Number
    name: DualGnrcPrntParamPrnt
    parent: !_DualBase
      dual: RefDualGnrcPrntParamPrnt
      typeArgs:
        - !_DualArg
          dual: AltDualGnrcPrntParamPrnt
    typeKind: !_TypeKind Dual
  !_Identifier DualPrnt: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        dual: String
        object: RefDualPrnt
    allFields:
      - !_ObjectFor(_DualField)
        name: parent
        object: RefDualPrnt
        type: !_DualBase
          dual: Number
    name: DualPrnt
    parent: !_DualBase
      dual: RefDualPrnt
    typeKind: !_TypeKind Dual
  !_Identifier DualPrntAlt: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        dual: String
        object: RefDualPrntAlt
      - !_ObjectFor(_DualAlternate)
        dual: Number
        object: DualPrntAlt
    allFields:
      - !_ObjectFor(_DualField)
        name: parent
        object: RefDualPrntAlt
        type: !_DualBase
          dual: Number
    alternates:
      - !_DualAlternate
        dual: Number
    name: DualPrntAlt
    parent: !_DualBase
      dual: RefDualPrntAlt
    typeKind: !_TypeKind Dual
  !_Identifier DualPrntDescr: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        dual: String
        object: RefDualPrntDescr
    allFields:
      - !_ObjectFor(_DualField)
        name: parent
        object: RefDualPrntDescr
        type: !_DualBase
          dual: Number
    name: DualPrntDescr
    parent: !_DualBase
      description: 'Test Descr'
      dual: RefDualPrntDescr
    typeKind: !_TypeKind Dual
  !_Identifier DualPrntDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        dual: String
        object: RefDualPrntDual
    allFields:
      - !_ObjectFor(_DualField)
        name: parent
        object: RefDualPrntDual
        type: !_DualBase
          dual: Number
    name: DualPrntDual
    parent: !_DualBase
      dual: RefDualPrntDual
    typeKind: !_TypeKind Dual
  !_Identifier DualPrntField: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        dual: String
        object: RefDualPrntField
    allFields:
      - !_ObjectFor(_DualField)
        name: parent
        object: RefDualPrntField
        type: !_DualBase
          dual: Number
      - !_ObjectFor(_DualField)
        name: field
        object: DualPrntField
        type: !_DualBase
          dual: Number
    fields:
      - !_DualField
        name: field
        type: !_DualBase
          dual: Number
    name: DualPrntField
    parent: !_DualBase
      dual: RefDualPrntField
    typeKind: !_TypeKind Dual
  !_Identifier DualPrntParamDiff: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: RefDualPrntParamDiff
        typeParam: b
    allFields:
      - !_ObjectFor(_DualField)
        name: field
        object: DualPrntParamDiff
        type: !_DualBase
          typeParam: a
    fields:
      - !_DualField
        name: field
        type: !_DualBase
          typeParam: a
    name: DualPrntParamDiff
    parent: !_DualBase
      dual: RefDualPrntParamDiff
      typeArgs:
        - !_DualArg
          typeParam: a
    typeKind: !_TypeKind Dual
    typeParams:
      - !_Named
        name: a
  !_Identifier DualPrntParamSame: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: RefDualPrntParamSame
        typeParam: a
    allFields:
      - !_ObjectFor(_DualField)
        name: field
        object: DualPrntParamSame
        type: !_DualBase
          typeParam: a
    fields:
      - !_DualField
        name: field
        type: !_DualBase
          typeParam: a
    name: DualPrntParamSame
    parent: !_DualBase
      dual: RefDualPrntParamSame
      typeArgs:
        - !_DualArg
          typeParam: a
    typeKind: !_TypeKind Dual
    typeParams:
      - !_Named
        name: a
  !_Identifier EnumDualFieldModEnum: !_TypeEnum
    allItems:
      - !_EnumLabel
        enum: EnumDualFieldModEnum
        name: value
    items:
      - !_Aliased
        name: value
    name: EnumDualFieldModEnum
    typeKind: !_TypeKind Enum
  !_Identifier EnumInpFieldEnum: !_TypeEnum
    allItems:
      - !_EnumLabel
        enum: EnumInpFieldEnum
        name: inpFieldEnum
    items:
      - !_Aliased
        name: inpFieldEnum
    name: EnumInpFieldEnum
    typeKind: !_TypeKind Enum
  !_Identifier EnumInpFieldModEnum: !_TypeEnum
    allItems:
      - !_EnumLabel
        enum: EnumInpFieldModEnum
        name: value
    items:
      - !_Aliased
        name: value
    name: EnumInpFieldModEnum
    typeKind: !_TypeKind Enum
  !_Identifier EnumOutpFieldEnum: !_TypeEnum
    allItems:
      - !_EnumLabel
        enum: EnumOutpFieldEnum
        name: outpFieldEnum
    items:
      - !_Aliased
        name: outpFieldEnum
    name: EnumOutpFieldEnum
    typeKind: !_TypeKind Enum
  !_Identifier EnumOutpFieldEnumPrnt: !_TypeEnum
    allItems:
      - !_EnumLabel
        enum: PrntOutpFieldEnumPrnt
        name: prnt_outpFieldEnumPrnt
      - !_EnumLabel
        enum: EnumOutpFieldEnumPrnt
        name: outpFieldEnumPrnt
    items:
      - !_Aliased
        name: outpFieldEnumPrnt
    name: EnumOutpFieldEnumPrnt
    parent: !_TypeRef(_SimpleKind)
      name: PrntOutpFieldEnumPrnt
      typeKind: !_SimpleKind Enum
    typeKind: !_TypeKind Enum
  !_Identifier EnumOutpFieldModEnum: !_TypeEnum
    allItems:
      - !_EnumLabel
        enum: EnumOutpFieldModEnum
        name: value
    items:
      - !_Aliased
        name: value
    name: EnumOutpFieldModEnum
    typeKind: !_TypeKind Enum
  !_Identifier EnumOutpFieldValue: !_TypeEnum
    allItems:
      - !_EnumLabel
        enum: EnumOutpFieldValue
        name: outpFieldValue
    items:
      - !_Aliased
        name: outpFieldValue
    name: EnumOutpFieldValue
    typeKind: !_TypeKind Enum
  !_Identifier EnumOutpFieldValueDescr: !_TypeEnum
    allItems:
      - !_EnumLabel
        enum: EnumOutpFieldValueDescr
        name: outpFieldValueDescr
    items:
      - !_Aliased
        name: outpFieldValueDescr
    name: EnumOutpFieldValueDescr
    typeKind: !_TypeKind Enum
  !_Identifier EnumOutpGnrcEnum: !_TypeEnum
    allItems:
      - !_EnumLabel
        enum: EnumOutpGnrcEnum
        name: outpGnrcEnum
    items:
      - !_Aliased
        name: outpGnrcEnum
    name: EnumOutpGnrcEnum
    typeKind: !_TypeKind Enum
  !_Identifier EnumOutpGnrcValue: !_TypeEnum
    allItems:
      - !_EnumLabel
        enum: EnumOutpGnrcValue
        name: outpGnrcValue
    items:
      - !_Aliased
        name: outpGnrcValue
    name: EnumOutpGnrcValue
    typeKind: !_TypeKind Enum
  !_Identifier EnumOutpPrntGnrc: !_TypeEnum
    allItems:
      - !_EnumLabel
        enum: PrntOutpPrntGnrc
        name: prnt_outpPrntGnrc
      - !_EnumLabel
        enum: EnumOutpPrntGnrc
        name: outpPrntGnrc
    items:
      - !_Aliased
        name: outpPrntGnrc
    name: EnumOutpPrntGnrc
    parent: !_TypeRef(_SimpleKind)
      name: PrntOutpPrntGnrc
      typeKind: !_SimpleKind Enum
    typeKind: !_TypeKind Enum
  !_Identifier FldDualFieldDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        dual: String
        object: FldDualFieldDual
    allFields:
      - !_ObjectFor(_DualField)
        name: field
        object: FldDualFieldDual
        type: !_DualBase
          dual: Number
    alternates:
      - !_DualAlternate
        dual: String
    fields:
      - !_DualField
        name: field
        type: !_DualBase
          dual: Number
    name: FldDualFieldDual
    typeKind: !_TypeKind Dual
  !_Identifier FldDualFieldModParam: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        dual: String
        object: FldDualFieldModParam
    allFields:
      - !_ObjectFor(_DualField)
        name: field
        object: FldDualFieldModParam
        type: !_DualBase
          dual: Number
    alternates:
      - !_DualAlternate
        dual: String
    fields:
      - !_DualField
        name: field
        type: !_DualBase
          dual: Number
    name: FldDualFieldModParam
    typeKind: !_TypeKind Dual
  !_Identifier FldDualFieldObj: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        dual: String
        object: FldDualFieldObj
    allFields:
      - !_ObjectFor(_DualField)
        name: field
        object: FldDualFieldObj
        type: !_DualBase
          dual: Number
    alternates:
      - !_DualAlternate
        dual: String
    fields:
      - !_DualField
        name: field
        type: !_DualBase
          dual: Number
    name: FldDualFieldObj
    typeKind: !_TypeKind Dual
  !_Identifier FldInpFieldDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        dual: String
        object: FldInpFieldDual
    allFields:
      - !_ObjectFor(_DualField)
        name: field
        object: FldInpFieldDual
        type: !_DualBase
          dual: Number
    alternates:
      - !_DualAlternate
        dual: String
    fields:
      - !_DualField
        name: field
        type: !_DualBase
          dual: Number
    name: FldInpFieldDual
    typeKind: !_TypeKind Dual
  !_Identifier FldInpFieldModParam: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        input: String
        object: FldInpFieldModParam
    allFields:
      - !_ObjectFor(_InputField)
        name: field
        object: FldInpFieldModParam
        type: !_InputBase
          input: Number
    alternates:
      - !_InputAlternate
        input: String
    fields:
      - !_InputField
        name: field
        type: !_InputBase
          input: Number
    name: FldInpFieldModParam
    typeKind: !_TypeKind Input
  !_Identifier FldInpFieldNull: !_TypeDual
    name: FldInpFieldNull
    typeKind: !_TypeKind Dual
  !_Identifier FldInpFieldObj: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        input: String
        object: FldInpFieldObj
    allFields:
      - !_ObjectFor(_InputField)
        name: field
        object: FldInpFieldObj
        type: !_InputBase
          input: Number
    alternates:
      - !_InputAlternate
        input: String
    fields:
      - !_InputField
        name: field
        type: !_InputBase
          input: Number
    name: FldInpFieldObj
    typeKind: !_TypeKind Input
  !_Identifier FldOutpDescrParam: !_TypeDual
    name: FldOutpDescrParam
    typeKind: !_TypeKind Dual
  !_Identifier FldOutpFieldDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        dual: String
        object: FldOutpFieldDual
    allFields:
      - !_ObjectFor(_DualField)
        name: field
        object: FldOutpFieldDual
        type: !_DualBase
          dual: Number
    alternates:
      - !_DualAlternate
        dual: String
    fields:
      - !_DualField
        name: field
        type: !_DualBase
          dual: Number
    name: FldOutpFieldDual
    typeKind: !_TypeKind Dual
  !_Identifier FldOutpFieldModParam: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: FldOutpFieldModParam
        output: String
    allFields:
      - !_ObjectFor(_OutputField)
        name: field
        object: FldOutpFieldModParam
        type: !_OutputBase
          output: Number
    alternates:
      - !_OutputAlternate
        output: String
    fields:
      - !_OutputField
        name: field
        type: !_OutputBase
          output: Number
    name: FldOutpFieldModParam
    typeKind: !_TypeKind Output
  !_Identifier FldOutpFieldObj: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: FldOutpFieldObj
        output: String
    allFields:
      - !_ObjectFor(_OutputField)
        name: field
        object: FldOutpFieldObj
        type: !_OutputBase
          output: Number
    alternates:
      - !_OutputAlternate
        output: String
    fields:
      - !_OutputField
        name: field
        type: !_OutputBase
          output: Number
    name: FldOutpFieldObj
    typeKind: !_TypeKind Output
  !_Identifier FldOutpParam: !_TypeDual
    name: FldOutpParam
    typeKind: !_TypeKind Dual
  !_Identifier FldOutpParamDescr: !_TypeDual
    name: FldOutpParamDescr
    typeKind: !_TypeKind Dual
  !_Identifier FldOutpParamTypeDescr: !_TypeDual
    name: FldOutpParamTypeDescr
    typeKind: !_TypeKind Dual
  !_Identifier FldOutpPrntParam: !_TypeDual
    name: FldOutpPrntParam
    typeKind: !_TypeKind Dual
  !_Identifier InOutpDescrParam: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        input: String
        object: InOutpDescrParam
    allFields:
      - !_ObjectFor(_InputField)
        name: param
        object: InOutpDescrParam
        type: !_InputBase
          input: Number
    alternates:
      - !_InputAlternate
        input: String
    fields:
      - !_InputField
        name: param
        type: !_InputBase
          input: Number
    name: InOutpDescrParam
    typeKind: !_TypeKind Input
  !_Identifier InOutpParam: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        input: String
        object: InOutpParam
    allFields:
      - !_ObjectFor(_InputField)
        name: param
        object: InOutpParam
        type: !_InputBase
          input: Number
    alternates:
      - !_InputAlternate
        input: String
    fields:
      - !_InputField
        name: param
        type: !_InputBase
          input: Number
    name: InOutpParam
    typeKind: !_TypeKind Input
  !_Identifier InOutpParamDescr: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        input: String
        object: InOutpParamDescr
    allFields:
      - !_ObjectFor(_InputField)
        name: param
        object: InOutpParamDescr
        type: !_InputBase
          input: Number
    alternates:
      - !_InputAlternate
        input: String
    fields:
      - !_InputField
        name: param
        type: !_InputBase
          input: Number
    name: InOutpParamDescr
    typeKind: !_TypeKind Input
  !_Identifier InOutpParamModDmn: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        input: String
        object: InOutpParamModDmn
    allFields:
      - !_ObjectFor(_InputField)
        name: param
        object: InOutpParamModDmn
        type: !_InputBase
          input: Number
    alternates:
      - !_InputAlternate
        input: String
    fields:
      - !_InputField
        name: param
        type: !_InputBase
          input: Number
    name: InOutpParamModDmn
    typeKind: !_TypeKind Input
  !_Identifier InOutpParamModParam: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        input: String
        object: InOutpParamModParam
    allFields:
      - !_ObjectFor(_InputField)
        name: param
        object: InOutpParamModParam
        type: !_InputBase
          input: Number
    alternates:
      - !_InputAlternate
        input: String
    fields:
      - !_InputField
        name: param
        type: !_InputBase
          input: Number
    name: InOutpParamModParam
    typeKind: !_TypeKind Input
  !_Identifier InOutpParamTypeDescr: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        input: String
        object: InOutpParamTypeDescr
    allFields:
      - !_ObjectFor(_InputField)
        name: param
        object: InOutpParamTypeDescr
        type: !_InputBase
          input: Number
    alternates:
      - !_InputAlternate
        input: String
    fields:
      - !_InputField
        name: param
        type: !_InputBase
          input: Number
    name: InOutpParamTypeDescr
    typeKind: !_TypeKind Input
  !_Identifier InOutpPrntParam: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        input: String
        object: InOutpPrntParam
    allFields:
      - !_ObjectFor(_InputField)
        name: param
        object: InOutpPrntParam
        type: !_InputBase
          input: Number
    alternates:
      - !_InputAlternate
        input: String
    fields:
      - !_InputField
        name: param
        type: !_InputBase
          input: Number
    name: InOutpPrntParam
    typeKind: !_TypeKind Input
  !_Identifier InpAlt: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        input: AltInpAlt
        object: InpAlt
    alternates:
      - !_InputAlternate
        input: AltInpAlt
    name: InpAlt
    typeKind: !_TypeKind Input
  !_Identifier InpAltDescr: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        description: 'Test Descr'
        input: String
        object: InpAltDescr
    alternates:
      - !_InputAlternate
        description: 'Test Descr'
        input: String
    name: InpAltDescr
    typeKind: !_TypeKind Input
  !_Identifier InpAltDual: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        dual: InpDualAltDual
        object: InpAltDual
    alternates:
      - !_DualAlternate
        dual: InpDualAltDual
    name: InpAltDual
    typeKind: !_TypeKind Input
  !_Identifier InpAltModBool: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        collections:
          - !_ModifierDictionary
            by: ^
            modifierKind: !_ModifierKind Dict
            typeKind: !_SimpleKind Basic
        input: AltInpAltModBool
        object: InpAltModBool
    alternates:
      - !_InputAlternate
        collections:
          - !_ModifierDictionary
            by: ^
            modifierKind: !_ModifierKind Dict
            typeKind: !_SimpleKind Basic
        input: AltInpAltModBool
    name: InpAltModBool
    typeKind: !_TypeKind Input
  !_Identifier InpAltModParam: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        collections:
          - !_ModifierTypeParam
            by: mod
            modifierKind: !_ModifierKind Param
        input: AltInpAltModParam
        object: InpAltModParam
    alternates:
      - !_InputAlternate
        collections:
          - !_ModifierTypeParam
            by: mod
            modifierKind: !_ModifierKind Param
        input: AltInpAltModParam
    name: InpAltModParam
    typeKind: !_TypeKind Input
    typeParams:
      - !_Named
        name: mod
  !_Identifier InpAltSmpl: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        input: String
        object: InpAltSmpl
    alternates:
      - !_InputAlternate
        input: String
    name: InpAltSmpl
    typeKind: !_TypeKind Input
  !_Identifier InpDualAltDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        dual: String
        object: InpDualAltDual
    allFields:
      - !_ObjectFor(_DualField)
        name: alt
        object: InpDualAltDual
        type: !_DualBase
          dual: Number
    alternates:
      - !_DualAlternate
        dual: String
    fields:
      - !_DualField
        name: alt
        type: !_DualBase
          dual: Number
    name: InpDualAltDual
    typeKind: !_TypeKind Dual
  !_Identifier InpField: !_TypeInput
    allFields:
      - !_ObjectFor(_InputField)
        name: field
        object: InpField
        type: !_InputBase
          input: '*'
    fields:
      - !_InputField
        name: field
        type: !_InputBase
          input: '*'
    name: InpField
    typeKind: !_TypeKind Input
  !_Identifier InpFieldDescr: !_TypeInput
    allFields:
      - !_ObjectFor(_InputField)
        description: 'Test Descr'
        name: field
        object: InpFieldDescr
        type: !_InputBase
          input: '*'
    fields:
      - !_InputField
        description: 'Test Descr'
        name: field
        type: !_InputBase
          input: '*'
    name: InpFieldDescr
    typeKind: !_TypeKind Input
  !_Identifier InpFieldDescrNmbr: !_TypeInput
    allFields:
      - !_ObjectFor(_InputField)
        default: 0
        description: 'Test Descr'
        name: field
        object: InpFieldDescrNmbr
        type: !_InputBase
          input: Number
    fields:
      - !_InputField
        default: 0
        description: 'Test Descr'
        name: field
        type: !_InputBase
          input: Number
    name: InpFieldDescrNmbr
    typeKind: !_TypeKind Input
  !_Identifier InpFieldDual: !_TypeInput
    allFields:
      - !_ObjectFor(_InputField)
        name: field
        object: InpFieldDual
        type: !_DualBase
          dual: FldInpFieldDual
    fields:
      - !_InputField
        name: field
        type: !_DualBase
          dual: FldInpFieldDual
    name: InpFieldDual
    typeKind: !_TypeKind Input
  !_Identifier InpFieldEnum: !_TypeInput
    allFields:
      - !_ObjectFor(_InputField)
        default: inpFieldEnum
        name: field
        object: InpFieldEnum
        type: !_InputBase
          input: EnumInpFieldEnum
    fields:
      - !_InputField
        default: inpFieldEnum
        name: field
        type: !_InputBase
          input: EnumInpFieldEnum
    name: InpFieldEnum
    typeKind: !_TypeKind Input
  !_Identifier InpFieldModEnum: !_TypeInput
    allFields:
      - !_ObjectFor(_InputField)
        modifiers: [!_ModifierDictionary{by:EnumInpFieldModEnum,modifierKind:!_ModifierKind Dict,typeKind:!_SimpleKind Enum}]
        name: field
        object: InpFieldModEnum
        type: !_InputBase
          input: '*'
    fields:
      - !_InputField
        modifiers: [!_ModifierDictionary{by:EnumInpFieldModEnum,modifierKind:!_ModifierKind Dict,typeKind:!_SimpleKind Enum}]
        name: field
        type: !_InputBase
          input: '*'
    name: InpFieldModEnum
    typeKind: !_TypeKind Input
  !_Identifier InpFieldModParam: !_TypeInput
    allFields:
      - !_ObjectFor(_InputField)
        modifiers: [!_ModifierTypeParam{by:mod,modifierKind:!_ModifierKind Param}]
        name: field
        object: InpFieldModParam
        type: !_InputBase
          input: FldInpFieldModParam
    fields:
      - !_InputField
        modifiers: [!_ModifierTypeParam{by:mod,modifierKind:!_ModifierKind Param}]
        name: field
        type: !_InputBase
          input: FldInpFieldModParam
    name: InpFieldModParam
    typeKind: !_TypeKind Input
    typeParams:
      - !_Named
        name: mod
  !_Identifier InpFieldNmbr: !_TypeInput
    allFields:
      - !_ObjectFor(_InputField)
        default: 0
        name: field
        object: InpFieldNmbr
        type: !_InputBase
          input: Number
    fields:
      - !_InputField
        default: 0
        name: field
        type: !_InputBase
          input: Number
    name: InpFieldNmbr
    typeKind: !_TypeKind Input
  !_Identifier InpFieldNmbrDescr: !_TypeInput
    allFields:
      - !_ObjectFor(_InputField)
        default: 0
        name: field
        object: InpFieldNmbrDescr
        type: !_InputBase
          description: 'Test Descr'
          input: Number
    fields:
      - !_InputField
        default: 0
        name: field
        type: !_InputBase
          description: 'Test Descr'
          input: Number
    name: InpFieldNmbrDescr
    typeKind: !_TypeKind Input
  !_Identifier InpFieldNull: !_TypeInput
    allFields:
      - !_ObjectFor(_InputField)
        default: !Null null
        modifiers: [!_Modifier{modifierKind:!_ModifierKind Opt}]
        name: field
        object: InpFieldNull
        type: !_DualBase
          dual: FldInpFieldNull
    fields:
      - !_InputField
        default: !Null null
        modifiers: [!_Modifier{modifierKind:!_ModifierKind Opt}]
        name: field
        type: !_DualBase
          dual: FldInpFieldNull
    name: InpFieldNull
    typeKind: !_TypeKind Input
  !_Identifier InpFieldObj: !_TypeInput
    allFields:
      - !_ObjectFor(_InputField)
        name: field
        object: InpFieldObj
        type: !_InputBase
          input: FldInpFieldObj
    fields:
      - !_InputField
        name: field
        type: !_InputBase
          input: FldInpFieldObj
    name: InpFieldObj
    typeKind: !_TypeKind Input
  !_Identifier InpFieldSmpl: !_TypeInput
    allFields:
      - !_ObjectFor(_InputField)
        name: field
        object: InpFieldSmpl
        type: !_InputBase
          input: Number
    fields:
      - !_InputField
        name: field
        type: !_InputBase
          input: Number
    name: InpFieldSmpl
    typeKind: !_TypeKind Input
  !_Identifier InpFieldStr: !_TypeInput
    allFields:
      - !_ObjectFor(_InputField)
        name: field
        object: InpFieldStr
        type: !_InputBase
          input: String
    fields:
      - !_InputField
        name: field
        type: !_InputBase
          input: String
    name: InpFieldStr
    typeKind: !_TypeKind Input
  !_Identifier InpFieldTypeDescr: !_TypeInput
    allFields:
      - !_ObjectFor(_InputField)
        name: field
        object: InpFieldTypeDescr
        type: !_InputBase
          description: 'Test Descr'
          input: Number
    fields:
      - !_InputField
        name: field
        type: !_InputBase
          description: 'Test Descr'
          input: Number
    name: InpFieldTypeDescr
    typeKind: !_TypeKind Input
  !_Identifier InpGnrcAlt: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        object: InpGnrcAlt
        typeParam: type
    alternates:
      - !_InputAlternate
        typeParam: type
    name: InpGnrcAlt
    typeKind: !_TypeKind Input
    typeParams:
      - !_Named
        name: type
  !_Identifier InpGnrcAltArg: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        input: RefInpGnrcAltArg
        object: InpGnrcAltArg
        typeArgs:
          - !_InputArg
            typeParam: type
    alternates:
      - !_InputAlternate
        input: RefInpGnrcAltArg
        typeArgs:
          - !_InputArg
            typeParam: type
    name: InpGnrcAltArg
    typeKind: !_TypeKind Input
    typeParams:
      - !_Named
        name: type
  !_Identifier InpGnrcAltArgDescr: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        input: RefInpGnrcAltArgDescr
        object: InpGnrcAltArgDescr
        typeArgs:
          - !_InputArg
            description: 'Test Descr'
            typeParam: type
    alternates:
      - !_InputAlternate
        input: RefInpGnrcAltArgDescr
        typeArgs:
          - !_InputArg
            description: 'Test Descr'
            typeParam: type
    name: InpGnrcAltArgDescr
    typeKind: !_TypeKind Input
    typeParams:
      - !_Named
        name: type
  !_Identifier InpGnrcAltDual: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        input: RefInpGnrcAltDual
        object: InpGnrcAltDual
        typeArgs:
          - !_DualArg
            dual: AltInpGnrcAltDual
    alternates:
      - !_InputAlternate
        input: RefInpGnrcAltDual
        typeArgs:
          - !_DualArg
            dual: AltInpGnrcAltDual
    name: InpGnrcAltDual
    typeKind: !_TypeKind Input
  !_Identifier InpGnrcAltParam: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        input: RefInpGnrcAltParam
        object: InpGnrcAltParam
        typeArgs:
          - !_InputArg
            input: AltInpGnrcAltParam
    alternates:
      - !_InputAlternate
        input: RefInpGnrcAltParam
        typeArgs:
          - !_InputArg
            input: AltInpGnrcAltParam
    name: InpGnrcAltParam
    typeKind: !_TypeKind Input
  !_Identifier InpGnrcAltSmpl: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        input: RefInpGnrcAltSmpl
        object: InpGnrcAltSmpl
        typeArgs:
          - !_InputArg
            input: String
    alternates:
      - !_InputAlternate
        input: RefInpGnrcAltSmpl
        typeArgs:
          - !_InputArg
            input: String
    name: InpGnrcAltSmpl
    typeKind: !_TypeKind Input
  !_Identifier InpGnrcDescr: !_TypeInput
    allFields:
      - !_ObjectFor(_InputField)
        name: field
        object: InpGnrcDescr
        type: !_InputBase
          typeParam: type
    fields:
      - !_InputField
        name: field
        type: !_InputBase
          typeParam: type
    name: InpGnrcDescr
    typeKind: !_TypeKind Input
    typeParams:
      - !_Named
        description: 'Test Descr'
        name: type
  !_Identifier InpGnrcDual: !_TypeInput
    allFields:
      - !_ObjectFor(_InputField)
        name: field
        object: InpGnrcDual
        type: !_InputBase
          input: InpGnrcDualRef
          typeArgs:
            - !_DualArg
              dual: InpGnrcDualAlt
    fields:
      - !_InputField
        name: field
        type: !_InputBase
          input: InpGnrcDualRef
          typeArgs:
            - !_DualArg
              dual: InpGnrcDualAlt
    name: InpGnrcDual
    typeKind: !_TypeKind Input
  !_Identifier InpGnrcDualAlt: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        dual: String
        object: InpGnrcDualAlt
    allFields:
      - !_ObjectFor(_DualField)
        name: alt
        object: InpGnrcDualAlt
        type: !_DualBase
          dual: Number
    alternates:
      - !_DualAlternate
        dual: String
    fields:
      - !_DualField
        name: alt
        type: !_DualBase
          dual: Number
    name: InpGnrcDualAlt
    typeKind: !_TypeKind Dual
  !_Identifier InpGnrcDualRef: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        object: InpGnrcDualRef
        typeParam: ref
    alternates:
      - !_InputAlternate
        typeParam: ref
    name: InpGnrcDualRef
    typeKind: !_TypeKind Input
    typeParams:
      - !_Named
        name: ref
  !_Identifier InpGnrcField: !_TypeInput
    allFields:
      - !_ObjectFor(_InputField)
        name: field
        object: InpGnrcField
        type: !_InputBase
          typeParam: type
    fields:
      - !_InputField
        name: field
        type: !_InputBase
          typeParam: type
    name: InpGnrcField
    typeKind: !_TypeKind Input
    typeParams:
      - !_Named
        name: type
  !_Identifier InpGnrcFieldArg: !_TypeInput
    allFields:
      - !_ObjectFor(_InputField)
        name: field
        object: InpGnrcFieldArg
        type: !_InputBase
          input: RefInpGnrcFieldArg
          typeArgs:
            - !_InputArg
              typeParam: type
    fields:
      - !_InputField
        name: field
        type: !_InputBase
          input: RefInpGnrcFieldArg
          typeArgs:
            - !_InputArg
              typeParam: type
    name: InpGnrcFieldArg
    typeKind: !_TypeKind Input
    typeParams:
      - !_Named
        name: type
  !_Identifier InpGnrcFieldDual: !_TypeInput
    allFields:
      - !_ObjectFor(_InputField)
        name: field
        object: InpGnrcFieldDual
        type: !_InputBase
          input: RefInpGnrcFieldDual
          typeArgs:
            - !_DualArg
              dual: AltInpGnrcFieldDual
    fields:
      - !_InputField
        name: field
        type: !_InputBase
          input: RefInpGnrcFieldDual
          typeArgs:
            - !_DualArg
              dual: AltInpGnrcFieldDual
    name: InpGnrcFieldDual
    typeKind: !_TypeKind Input
  !_Identifier InpGnrcFieldParam: !_TypeInput
    allFields:
      - !_ObjectFor(_InputField)
        name: field
        object: InpGnrcFieldParam
        type: !_InputBase
          input: RefInpGnrcFieldParam
          typeArgs:
            - !_InputArg
              input: AltInpGnrcFieldParam
    fields:
      - !_InputField
        name: field
        type: !_InputBase
          input: RefInpGnrcFieldParam
          typeArgs:
            - !_InputArg
              input: AltInpGnrcFieldParam
    name: InpGnrcFieldParam
    typeKind: !_TypeKind Input
  !_Identifier InpGnrcParam: !_TypeInput
    allFields:
      - !_ObjectFor(_InputField)
        name: field
        object: InpGnrcParam
        type: !_InputBase
          input: InpGnrcParamRef
          typeArgs:
            - !_InputArg
              input: InpGnrcParamAlt
    fields:
      - !_InputField
        name: field
        type: !_InputBase
          input: InpGnrcParamRef
          typeArgs:
            - !_InputArg
              input: InpGnrcParamAlt
    name: InpGnrcParam
    typeKind: !_TypeKind Input
  !_Identifier InpGnrcParamAlt: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        input: String
        object: InpGnrcParamAlt
    allFields:
      - !_ObjectFor(_InputField)
        name: alt
        object: InpGnrcParamAlt
        type: !_InputBase
          input: Number
    alternates:
      - !_InputAlternate
        input: String
    fields:
      - !_InputField
        name: alt
        type: !_InputBase
          input: Number
    name: InpGnrcParamAlt
    typeKind: !_TypeKind Input
  !_Identifier InpGnrcParamRef: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        object: InpGnrcParamRef
        typeParam: ref
    alternates:
      - !_InputAlternate
        typeParam: ref
    name: InpGnrcParamRef
    typeKind: !_TypeKind Input
    typeParams:
      - !_Named
        name: ref
  !_Identifier InpGnrcPrnt: !_TypeInput
    name: InpGnrcPrnt
    parent: !_InputBase
      typeParam: type
    typeKind: !_TypeKind Input
    typeParams:
      - !_Named
        name: type
  !_Identifier InpGnrcPrntArg: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        object: RefInpGnrcPrntArg
        typeParam: ref
    name: InpGnrcPrntArg
    parent: !_InputBase
      input: RefInpGnrcPrntArg
      typeArgs:
        - !_InputArg
          typeParam: type
    typeKind: !_TypeKind Input
    typeParams:
      - !_Named
        name: type
  !_Identifier InpGnrcPrntDual: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        object: RefInpGnrcPrntDual
        typeParam: ref
    name: InpGnrcPrntDual
    parent: !_InputBase
      input: RefInpGnrcPrntDual
      typeArgs:
        - !_DualArg
          dual: AltInpGnrcPrntDual
    typeKind: !_TypeKind Input
  !_Identifier InpGnrcPrntDualPrnt: !_TypeInput
    name: InpGnrcPrntDualPrnt
    parent: !_InputBase
      input: RefInpGnrcPrntDualPrnt
      typeArgs:
        - !_DualArg
          dual: AltInpGnrcPrntDualPrnt
    typeKind: !_TypeKind Input
  !_Identifier InpGnrcPrntParam: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        object: RefInpGnrcPrntParam
        typeParam: ref
    name: InpGnrcPrntParam
    parent: !_InputBase
      input: RefInpGnrcPrntParam
      typeArgs:
        - !_InputArg
          input: AltInpGnrcPrntParam
    typeKind: !_TypeKind Input
  !_Identifier InpGnrcPrntParamPrnt: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        input: String
        object: AltInpGnrcPrntParamPrnt
    allFields:
      - !_ObjectFor(_InputField)
        name: alt
        object: AltInpGnrcPrntParamPrnt
        type: !_InputBase
          input: Number
    name: InpGnrcPrntParamPrnt
    parent: !_InputBase
      input: RefInpGnrcPrntParamPrnt
      typeArgs:
        - !_InputArg
          input: AltInpGnrcPrntParamPrnt
    typeKind: !_TypeKind Input
  !_Identifier InpPrnt: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        input: String
        object: RefInpPrnt
    allFields:
      - !_ObjectFor(_InputField)
        name: parent
        object: RefInpPrnt
        type: !_InputBase
          input: Number
    name: InpPrnt
    parent: !_InputBase
      input: RefInpPrnt
    typeKind: !_TypeKind Input
  !_Identifier InpPrntAlt: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        input: String
        object: RefInpPrntAlt
      - !_ObjectFor(_InputAlternate)
        input: Number
        object: InpPrntAlt
    allFields:
      - !_ObjectFor(_InputField)
        name: parent
        object: RefInpPrntAlt
        type: !_InputBase
          input: Number
    alternates:
      - !_InputAlternate
        input: Number
    name: InpPrntAlt
    parent: !_InputBase
      input: RefInpPrntAlt
    typeKind: !_TypeKind Input
  !_Identifier InpPrntDescr: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        input: String
        object: RefInpPrntDescr
    allFields:
      - !_ObjectFor(_InputField)
        name: parent
        object: RefInpPrntDescr
        type: !_InputBase
          input: Number
    name: InpPrntDescr
    parent: !_InputBase
      description: 'Test Descr'
      input: RefInpPrntDescr
    typeKind: !_TypeKind Input
  !_Identifier InpPrntDual: !_TypeInput
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        dual: String
        object: RefInpPrntDual
    allFields:
      - !_ObjectFor(_DualField)
        name: parent
        object: RefInpPrntDual
        type: !_DualBase
          dual: Number
    name: InpPrntDual
    parent: !_DualBase
      dual: RefInpPrntDual
    typeKind: !_TypeKind Input
  !_Identifier InpPrntField: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        input: String
        object: RefInpPrntField
    allFields:
      - !_ObjectFor(_InputField)
        name: parent
        object: RefInpPrntField
        type: !_InputBase
          input: Number
      - !_ObjectFor(_InputField)
        name: field
        object: InpPrntField
        type: !_InputBase
          input: Number
    fields:
      - !_InputField
        name: field
        type: !_InputBase
          input: Number
    name: InpPrntField
    parent: !_InputBase
      input: RefInpPrntField
    typeKind: !_TypeKind Input
  !_Identifier InpPrntParamDiff: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        object: RefInpPrntParamDiff
        typeParam: b
    allFields:
      - !_ObjectFor(_InputField)
        name: field
        object: InpPrntParamDiff
        type: !_InputBase
          typeParam: a
    fields:
      - !_InputField
        name: field
        type: !_InputBase
          typeParam: a
    name: InpPrntParamDiff
    parent: !_InputBase
      input: RefInpPrntParamDiff
      typeArgs:
        - !_InputArg
          typeParam: a
    typeKind: !_TypeKind Input
    typeParams:
      - !_Named
        name: a
  !_Identifier InpPrntParamSame: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        object: RefInpPrntParamSame
        typeParam: a
    allFields:
      - !_ObjectFor(_InputField)
        name: field
        object: InpPrntParamSame
        type: !_InputBase
          typeParam: a
    fields:
      - !_InputField
        name: field
        type: !_InputBase
          typeParam: a
    name: InpPrntParamSame
    parent: !_InputBase
      input: RefInpPrntParamSame
      typeArgs:
        - !_InputArg
          typeParam: a
    typeKind: !_TypeKind Input
    typeParams:
      - !_Named
        name: a
  !_Identifier OutpAlt: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: OutpAlt
        output: AltOutpAlt
    alternates:
      - !_OutputAlternate
        output: AltOutpAlt
    name: OutpAlt
    typeKind: !_TypeKind Output
  !_Identifier OutpAltDescr: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        description: 'Test Descr'
        object: OutpAltDescr
        output: String
    alternates:
      - !_OutputAlternate
        description: 'Test Descr'
        output: String
    name: OutpAltDescr
    typeKind: !_TypeKind Output
  !_Identifier OutpAltDual: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        dual: OutpDualAltDual
        object: OutpAltDual
    alternates:
      - !_DualAlternate
        dual: OutpDualAltDual
    name: OutpAltDual
    typeKind: !_TypeKind Output
  !_Identifier OutpAltModBool: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        collections:
          - !_ModifierDictionary
            by: ^
            modifierKind: !_ModifierKind Dict
            typeKind: !_SimpleKind Basic
        object: OutpAltModBool
        output: AltOutpAltModBool
    alternates:
      - !_OutputAlternate
        collections:
          - !_ModifierDictionary
            by: ^
            modifierKind: !_ModifierKind Dict
            typeKind: !_SimpleKind Basic
        output: AltOutpAltModBool
    name: OutpAltModBool
    typeKind: !_TypeKind Output
  !_Identifier OutpAltModParam: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        collections:
          - !_ModifierTypeParam
            by: mod
            modifierKind: !_ModifierKind Param
        object: OutpAltModParam
        output: AltOutpAltModParam
    alternates:
      - !_OutputAlternate
        collections:
          - !_ModifierTypeParam
            by: mod
            modifierKind: !_ModifierKind Param
        output: AltOutpAltModParam
    name: OutpAltModParam
    typeKind: !_TypeKind Output
    typeParams:
      - !_Named
        name: mod
  !_Identifier OutpAltSmpl: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: OutpAltSmpl
        output: String
    alternates:
      - !_OutputAlternate
        output: String
    name: OutpAltSmpl
    typeKind: !_TypeKind Output
  !_Identifier OutpDescrParam: !_TypeOutput
    allFields:
      - !_ObjectFor(_OutputField)
        description: 'Test Descr'
        name: field
        object: OutpDescrParam
        parameters:
          - !_InputParam
            input: InOutpDescrParam
        type: !_DualBase
          dual: FldOutpDescrParam
    fields:
      - !_OutputField
        description: 'Test Descr'
        name: field
        parameters:
          - !_InputParam
            input: InOutpDescrParam
        type: !_DualBase
          dual: FldOutpDescrParam
    name: OutpDescrParam
    typeKind: !_TypeKind Output
  !_Identifier OutpDualAltDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        dual: String
        object: OutpDualAltDual
    allFields:
      - !_ObjectFor(_DualField)
        name: alt
        object: OutpDualAltDual
        type: !_DualBase
          dual: Number
    alternates:
      - !_DualAlternate
        dual: String
    fields:
      - !_DualField
        name: alt
        type: !_DualBase
          dual: Number
    name: OutpDualAltDual
    typeKind: !_TypeKind Dual
  !_Identifier OutpField: !_TypeOutput
    allFields:
      - !_ObjectFor(_OutputField)
        name: field
        object: OutpField
        type: !_OutputBase
          output: '*'
    fields:
      - !_OutputField
        name: field
        type: !_OutputBase
          output: '*'
    name: OutpField
    typeKind: !_TypeKind Output
  !_Identifier OutpFieldDescr: !_TypeOutput
    allFields:
      - !_ObjectFor(_OutputField)
        description: 'Test Descr'
        name: field
        object: OutpFieldDescr
        type: !_OutputBase
          output: '*'
    fields:
      - !_OutputField
        description: 'Test Descr'
        name: field
        type: !_OutputBase
          output: '*'
    name: OutpFieldDescr
    typeKind: !_TypeKind Output
  !_Identifier OutpFieldDual: !_TypeOutput
    allFields:
      - !_ObjectFor(_OutputField)
        name: field
        object: OutpFieldDual
        type: !_DualBase
          dual: FldOutpFieldDual
    fields:
      - !_OutputField
        name: field
        type: !_DualBase
          dual: FldOutpFieldDual
    name: OutpFieldDual
    typeKind: !_TypeKind Output
  !_Identifier OutpFieldEnum: !_TypeOutput
    allFields:
      - !_ObjectFor(_OutputField)
        field: field
        label: outpFieldEnum
        name: EnumOutpFieldEnum
        object: OutpFieldEnum
        typeKind: !_SimpleKind Enum
    fields:
      - !_OutputEnum
        field: field
        label: outpFieldEnum
        name: EnumOutpFieldEnum
        typeKind: !_SimpleKind Enum
    name: OutpFieldEnum
    typeKind: !_TypeKind Output
  !_Identifier OutpFieldEnumPrnt: !_TypeOutput
    allFields:
      - !_ObjectFor(_OutputField)
        field: field
        label: prnt_outpFieldEnumPrnt
        name: EnumOutpFieldEnumPrnt
        object: OutpFieldEnumPrnt
        typeKind: !_SimpleKind Enum
    fields:
      - !_OutputEnum
        field: field
        label: prnt_outpFieldEnumPrnt
        name: EnumOutpFieldEnumPrnt
        typeKind: !_SimpleKind Enum
    name: OutpFieldEnumPrnt
    typeKind: !_TypeKind Output
  !_Identifier OutpFieldModEnum: !_TypeOutput
    allFields:
      - !_ObjectFor(_OutputField)
        modifiers: [!_ModifierDictionary{by:EnumOutpFieldModEnum,modifierKind:!_ModifierKind Dict,typeKind:!_SimpleKind Enum}]
        name: field
        object: OutpFieldModEnum
        type: !_OutputBase
          output: '*'
    fields:
      - !_OutputField
        modifiers: [!_ModifierDictionary{by:EnumOutpFieldModEnum,modifierKind:!_ModifierKind Dict,typeKind:!_SimpleKind Enum}]
        name: field
        type: !_OutputBase
          output: '*'
    name: OutpFieldModEnum
    typeKind: !_TypeKind Output
  !_Identifier OutpFieldModParam: !_TypeOutput
    allFields:
      - !_ObjectFor(_OutputField)
        modifiers: [!_ModifierTypeParam{by:mod,modifierKind:!_ModifierKind Param}]
        name: field
        object: OutpFieldModParam
        type: !_OutputBase
          output: FldOutpFieldModParam
    fields:
      - !_OutputField
        modifiers: [!_ModifierTypeParam{by:mod,modifierKind:!_ModifierKind Param}]
        name: field
        type: !_OutputBase
          output: FldOutpFieldModParam
    name: OutpFieldModParam
    typeKind: !_TypeKind Output
    typeParams:
      - !_Named
        name: mod
  !_Identifier OutpFieldObj: !_TypeOutput
    allFields:
      - !_ObjectFor(_OutputField)
        name: field
        object: OutpFieldObj
        type: !_OutputBase
          output: FldOutpFieldObj
    fields:
      - !_OutputField
        name: field
        type: !_OutputBase
          output: FldOutpFieldObj
    name: OutpFieldObj
    typeKind: !_TypeKind Output
  !_Identifier OutpFieldSmpl: !_TypeOutput
    allFields:
      - !_ObjectFor(_OutputField)
        name: field
        object: OutpFieldSmpl
        type: !_OutputBase
          output: Number
    fields:
      - !_OutputField
        name: field
        type: !_OutputBase
          output: Number
    name: OutpFieldSmpl
    typeKind: !_TypeKind Output
  !_Identifier OutpFieldTypeDescr: !_TypeOutput
    allFields:
      - !_ObjectFor(_OutputField)
        name: field
        object: OutpFieldTypeDescr
        type: !_OutputBase
          description: 'Test Descr'
          output: Number
    fields:
      - !_OutputField
        name: field
        type: !_OutputBase
          description: 'Test Descr'
          output: Number
    name: OutpFieldTypeDescr
    typeKind: !_TypeKind Output
  !_Identifier OutpFieldValue: !_TypeOutput
    allFields:
      - !_ObjectFor(_OutputField)
        field: EnumOutpFieldValue
        label: outpFieldValue
        object: OutpFieldValue
        typeKind: !_SimpleKind Enum
    fields:
      - !_OutputEnum
        field: EnumOutpFieldValue
        label: outpFieldValue
        typeKind: !_SimpleKind Enum
    name: OutpFieldValue
    typeKind: !_TypeKind Output
  !_Identifier OutpFieldValueDescr: !_TypeOutput
    allFields:
      - !_ObjectFor(_OutputField)
        description: 'Test Descr'
        field: EnumOutpFieldValueDescr
        label: outpFieldValueDescr
        object: OutpFieldValueDescr
        typeKind: !_SimpleKind Enum
    fields:
      - !_OutputEnum
        description: 'Test Descr'
        field: EnumOutpFieldValueDescr
        label: outpFieldValueDescr
        typeKind: !_SimpleKind Enum
    name: OutpFieldValueDescr
    typeKind: !_TypeKind Output
  !_Identifier OutpGnrcAlt: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: OutpGnrcAlt
        typeParam: type
    alternates:
      - !_OutputAlternate
        typeParam: type
    name: OutpGnrcAlt
    typeKind: !_TypeKind Output
    typeParams:
      - !_Named
        name: type
  !_Identifier OutpGnrcAltArg: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: OutpGnrcAltArg
        output: RefOutpGnrcAltArg
        typeArgs:
          - !_OutputArg
            typeParam: type
    alternates:
      - !_OutputAlternate
        output: RefOutpGnrcAltArg
        typeArgs:
          - !_OutputArg
            typeParam: type
    name: OutpGnrcAltArg
    typeKind: !_TypeKind Output
    typeParams:
      - !_Named
        name: type
  !_Identifier OutpGnrcAltArgDescr: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: OutpGnrcAltArgDescr
        output: RefOutpGnrcAltArgDescr
        typeArgs:
          - !_OutputArg
            description: 'Test Descr'
            typeParam: type
    alternates:
      - !_OutputAlternate
        output: RefOutpGnrcAltArgDescr
        typeArgs:
          - !_OutputArg
            description: 'Test Descr'
            typeParam: type
    name: OutpGnrcAltArgDescr
    typeKind: !_TypeKind Output
    typeParams:
      - !_Named
        name: type
  !_Identifier OutpGnrcAltDual: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: OutpGnrcAltDual
        output: RefOutpGnrcAltDual
        typeArgs:
          - !_DualArg
            dual: AltOutpGnrcAltDual
    alternates:
      - !_OutputAlternate
        output: RefOutpGnrcAltDual
        typeArgs:
          - !_DualArg
            dual: AltOutpGnrcAltDual
    name: OutpGnrcAltDual
    typeKind: !_TypeKind Output
  !_Identifier OutpGnrcAltParam: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: OutpGnrcAltParam
        output: RefOutpGnrcAltParam
        typeArgs:
          - !_OutputArg
            output: AltOutpGnrcAltParam
    alternates:
      - !_OutputAlternate
        output: RefOutpGnrcAltParam
        typeArgs:
          - !_OutputArg
            output: AltOutpGnrcAltParam
    name: OutpGnrcAltParam
    typeKind: !_TypeKind Output
  !_Identifier OutpGnrcAltSmpl: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: OutpGnrcAltSmpl
        output: RefOutpGnrcAltSmpl
        typeArgs:
          - !_OutputArg
            output: String
    alternates:
      - !_OutputAlternate
        output: RefOutpGnrcAltSmpl
        typeArgs:
          - !_OutputArg
            output: String
    name: OutpGnrcAltSmpl
    typeKind: !_TypeKind Output
  !_Identifier OutpGnrcDescr: !_TypeOutput
    allFields:
      - !_ObjectFor(_OutputField)
        name: field
        object: OutpGnrcDescr
        type: !_OutputBase
          typeParam: type
    fields:
      - !_OutputField
        name: field
        type: !_OutputBase
          typeParam: type
    name: OutpGnrcDescr
    typeKind: !_TypeKind Output
    typeParams:
      - !_Named
        description: 'Test Descr'
        name: type
  !_Identifier OutpGnrcDual: !_TypeOutput
    allFields:
      - !_ObjectFor(_OutputField)
        name: field
        object: OutpGnrcDual
        type: !_OutputBase
          output: OutpGnrcDualRef
          typeArgs:
            - !_DualArg
              dual: OutpGnrcDualAlt
    fields:
      - !_OutputField
        name: field
        type: !_OutputBase
          output: OutpGnrcDualRef
          typeArgs:
            - !_DualArg
              dual: OutpGnrcDualAlt
    name: OutpGnrcDual
    typeKind: !_TypeKind Output
  !_Identifier OutpGnrcDualAlt: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        dual: String
        object: OutpGnrcDualAlt
    allFields:
      - !_ObjectFor(_DualField)
        name: alt
        object: OutpGnrcDualAlt
        type: !_DualBase
          dual: Number
    alternates:
      - !_DualAlternate
        dual: String
    fields:
      - !_DualField
        name: alt
        type: !_DualBase
          dual: Number
    name: OutpGnrcDualAlt
    typeKind: !_TypeKind Dual
  !_Identifier OutpGnrcDualRef: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: OutpGnrcDualRef
        typeParam: ref
    alternates:
      - !_OutputAlternate
        typeParam: ref
    name: OutpGnrcDualRef
    typeKind: !_TypeKind Output
    typeParams:
      - !_Named
        name: ref
  !_Identifier OutpGnrcEnum: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: OutpGnrcEnum
        output: RefOutpGnrcEnum
        typeArgs:
          - !_OutputArg
            label: outpGnrcEnum
            name: EnumOutpGnrcEnum
            typeKind: !_SimpleKind Enum
    alternates:
      - !_OutputAlternate
        output: RefOutpGnrcEnum
        typeArgs:
          - !_OutputArg
            label: outpGnrcEnum
            name: EnumOutpGnrcEnum
            typeKind: !_SimpleKind Enum
    name: OutpGnrcEnum
    typeKind: !_TypeKind Output
  !_Identifier OutpGnrcField: !_TypeOutput
    allFields:
      - !_ObjectFor(_OutputField)
        name: field
        object: OutpGnrcField
        type: !_OutputBase
          typeParam: type
    fields:
      - !_OutputField
        name: field
        type: !_OutputBase
          typeParam: type
    name: OutpGnrcField
    typeKind: !_TypeKind Output
    typeParams:
      - !_Named
        name: type
  !_Identifier OutpGnrcFieldArg: !_TypeOutput
    allFields:
      - !_ObjectFor(_OutputField)
        name: field
        object: OutpGnrcFieldArg
        type: !_OutputBase
          output: RefOutpGnrcFieldArg
          typeArgs:
            - !_OutputArg
              typeParam: type
    fields:
      - !_OutputField
        name: field
        type: !_OutputBase
          output: RefOutpGnrcFieldArg
          typeArgs:
            - !_OutputArg
              typeParam: type
    name: OutpGnrcFieldArg
    typeKind: !_TypeKind Output
    typeParams:
      - !_Named
        name: type
  !_Identifier OutpGnrcFieldDual: !_TypeOutput
    allFields:
      - !_ObjectFor(_OutputField)
        name: field
        object: OutpGnrcFieldDual
        type: !_OutputBase
          output: RefOutpGnrcFieldDual
          typeArgs:
            - !_DualArg
              dual: AltOutpGnrcFieldDual
    fields:
      - !_OutputField
        name: field
        type: !_OutputBase
          output: RefOutpGnrcFieldDual
          typeArgs:
            - !_DualArg
              dual: AltOutpGnrcFieldDual
    name: OutpGnrcFieldDual
    typeKind: !_TypeKind Output
  !_Identifier OutpGnrcFieldParam: !_TypeOutput
    allFields:
      - !_ObjectFor(_OutputField)
        name: field
        object: OutpGnrcFieldParam
        type: !_OutputBase
          output: RefOutpGnrcFieldParam
          typeArgs:
            - !_OutputArg
              output: AltOutpGnrcFieldParam
    fields:
      - !_OutputField
        name: field
        type: !_OutputBase
          output: RefOutpGnrcFieldParam
          typeArgs:
            - !_OutputArg
              output: AltOutpGnrcFieldParam
    name: OutpGnrcFieldParam
    typeKind: !_TypeKind Output
  !_Identifier OutpGnrcParam: !_TypeOutput
    allFields:
      - !_ObjectFor(_OutputField)
        name: field
        object: OutpGnrcParam
        type: !_OutputBase
          output: OutpGnrcParamRef
          typeArgs:
            - !_OutputArg
              output: OutpGnrcParamAlt
    fields:
      - !_OutputField
        name: field
        type: !_OutputBase
          output: OutpGnrcParamRef
          typeArgs:
            - !_OutputArg
              output: OutpGnrcParamAlt
    name: OutpGnrcParam
    typeKind: !_TypeKind Output
  !_Identifier OutpGnrcParamAlt: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: OutpGnrcParamAlt
        output: String
    allFields:
      - !_ObjectFor(_OutputField)
        name: alt
        object: OutpGnrcParamAlt
        type: !_OutputBase
          output: Number
    alternates:
      - !_OutputAlternate
        output: String
    fields:
      - !_OutputField
        name: alt
        type: !_OutputBase
          output: Number
    name: OutpGnrcParamAlt
    typeKind: !_TypeKind Output
  !_Identifier OutpGnrcParamRef: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: OutpGnrcParamRef
        typeParam: ref
    alternates:
      - !_OutputAlternate
        typeParam: ref
    name: OutpGnrcParamRef
    typeKind: !_TypeKind Output
    typeParams:
      - !_Named
        name: ref
  !_Identifier OutpGnrcPrnt: !_TypeOutput
    name: OutpGnrcPrnt
    parent: !_OutputBase
      typeParam: type
    typeKind: !_TypeKind Output
    typeParams:
      - !_Named
        name: type
  !_Identifier OutpGnrcPrntArg: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: RefOutpGnrcPrntArg
        typeParam: ref
    name: OutpGnrcPrntArg
    parent: !_OutputBase
      output: RefOutpGnrcPrntArg
      typeArgs:
        - !_OutputArg
          typeParam: type
    typeKind: !_TypeKind Output
    typeParams:
      - !_Named
        name: type
  !_Identifier OutpGnrcPrntDual: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: RefOutpGnrcPrntDual
        typeParam: ref
    name: OutpGnrcPrntDual
    parent: !_OutputBase
      output: RefOutpGnrcPrntDual
      typeArgs:
        - !_DualArg
          dual: AltOutpGnrcPrntDual
    typeKind: !_TypeKind Output
  !_Identifier OutpGnrcPrntDualPrnt: !_TypeOutput
    name: OutpGnrcPrntDualPrnt
    parent: !_OutputBase
      output: RefOutpGnrcPrntDualPrnt
      typeArgs:
        - !_DualArg
          dual: AltOutpGnrcPrntDualPrnt
    typeKind: !_TypeKind Output
  !_Identifier OutpGnrcPrntParam: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: RefOutpGnrcPrntParam
        typeParam: ref
    name: OutpGnrcPrntParam
    parent: !_OutputBase
      output: RefOutpGnrcPrntParam
      typeArgs:
        - !_OutputArg
          output: AltOutpGnrcPrntParam
    typeKind: !_TypeKind Output
  !_Identifier OutpGnrcPrntParamPrnt: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: AltOutpGnrcPrntParamPrnt
        output: String
    allFields:
      - !_ObjectFor(_OutputField)
        name: alt
        object: AltOutpGnrcPrntParamPrnt
        type: !_OutputBase
          output: Number
    name: OutpGnrcPrntParamPrnt
    parent: !_OutputBase
      output: RefOutpGnrcPrntParamPrnt
      typeArgs:
        - !_OutputArg
          output: AltOutpGnrcPrntParamPrnt
    typeKind: !_TypeKind Output
  !_Identifier OutpGnrcValue: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: OutpGnrcValue
        output: RefOutpGnrcValue
        typeArgs:
          - !_OutputArg
            output: outpGnrcValue
    alternates:
      - !_OutputAlternate
        output: RefOutpGnrcValue
        typeArgs:
          - !_OutputArg
            output: outpGnrcValue
    name: OutpGnrcValue
    typeKind: !_TypeKind Output
  !_Identifier OutpParam: !_TypeOutput
    allFields:
      - !_ObjectFor(_OutputField)
        name: field
        object: OutpParam
        parameters:
          - !_InputParam
            input: InOutpParam
        type: !_DualBase
          dual: FldOutpParam
    fields:
      - !_OutputField
        name: field
        parameters:
          - !_InputParam
            input: InOutpParam
        type: !_DualBase
          dual: FldOutpParam
    name: OutpParam
    typeKind: !_TypeKind Output
  !_Identifier OutpParamDescr: !_TypeOutput
    allFields:
      - !_ObjectFor(_OutputField)
        name: field
        object: OutpParamDescr
        parameters:
          - !_InputParam
            description: 'Test Descr'
            input: InOutpParamDescr
        type: !_DualBase
          dual: FldOutpParamDescr
    fields:
      - !_OutputField
        name: field
        parameters:
          - !_InputParam
            description: 'Test Descr'
            input: InOutpParamDescr
        type: !_DualBase
          dual: FldOutpParamDescr
    name: OutpParamDescr
    typeKind: !_TypeKind Output
  !_Identifier OutpParamModDmn: !_TypeOutput
    allFields:
      - !_ObjectFor(_OutputField)
        name: field
        object: OutpParamModDmn
        parameters:
          - !_InputParam
            input: InOutpParamModDmn
            modifiers: [!_ModifierDictionary{by:DomOutpParamModDmn,modifierKind:!_ModifierKind Dict,typeKind:!_SimpleKind Domain}]
        type: !_OutputBase
          output: DomOutpParamModDmn
    fields:
      - !_OutputField
        name: field
        parameters:
          - !_InputParam
            input: InOutpParamModDmn
            modifiers: [!_ModifierDictionary{by:DomOutpParamModDmn,modifierKind:!_ModifierKind Dict,typeKind:!_SimpleKind Domain}]
        type: !_OutputBase
          output: DomOutpParamModDmn
    name: OutpParamModDmn
    typeKind: !_TypeKind Output
  !_Identifier OutpParamModParam: !_TypeOutput
    allFields:
      - !_ObjectFor(_OutputField)
        name: field
        object: OutpParamModParam
        parameters:
          - !_InputParam
            input: InOutpParamModParam
            modifiers: [!_ModifierTypeParam{by:mod,modifierKind:!_ModifierKind Param}]
        type: !_OutputBase
          output: DomOutpParamModParam
    fields:
      - !_OutputField
        name: field
        parameters:
          - !_InputParam
            input: InOutpParamModParam
            modifiers: [!_ModifierTypeParam{by:mod,modifierKind:!_ModifierKind Param}]
        type: !_OutputBase
          output: DomOutpParamModParam
    name: OutpParamModParam
    typeKind: !_TypeKind Output
    typeParams:
      - !_Named
        name: mod
  !_Identifier OutpParamTypeDescr: !_TypeOutput
    allFields:
      - !_ObjectFor(_OutputField)
        name: field
        object: OutpParamTypeDescr
        parameters:
          - !_InputParam
            input: InOutpParamTypeDescr
        type: !_DualBase
          description: 'Test Descr'
          dual: FldOutpParamTypeDescr
    fields:
      - !_OutputField
        name: field
        parameters:
          - !_InputParam
            input: InOutpParamTypeDescr
        type: !_DualBase
          description: 'Test Descr'
          dual: FldOutpParamTypeDescr
    name: OutpParamTypeDescr
    typeKind: !_TypeKind Output
  !_Identifier OutpPrnt: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: RefOutpPrnt
        output: String
    allFields:
      - !_ObjectFor(_OutputField)
        name: parent
        object: RefOutpPrnt
        type: !_OutputBase
          output: Number
    name: OutpPrnt
    parent: !_OutputBase
      output: RefOutpPrnt
    typeKind: !_TypeKind Output
  !_Identifier OutpPrntAlt: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: RefOutpPrntAlt
        output: String
      - !_ObjectFor(_OutputAlternate)
        object: OutpPrntAlt
        output: Number
    allFields:
      - !_ObjectFor(_OutputField)
        name: parent
        object: RefOutpPrntAlt
        type: !_OutputBase
          output: Number
    alternates:
      - !_OutputAlternate
        output: Number
    name: OutpPrntAlt
    parent: !_OutputBase
      output: RefOutpPrntAlt
    typeKind: !_TypeKind Output
  !_Identifier OutpPrntDescr: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: RefOutpPrntDescr
        output: String
    allFields:
      - !_ObjectFor(_OutputField)
        name: parent
        object: RefOutpPrntDescr
        type: !_OutputBase
          output: Number
    name: OutpPrntDescr
    parent: !_OutputBase
      description: 'Test Descr'
      output: RefOutpPrntDescr
    typeKind: !_TypeKind Output
  !_Identifier OutpPrntDual: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        dual: String
        object: RefOutpPrntDual
    allFields:
      - !_ObjectFor(_DualField)
        name: parent
        object: RefOutpPrntDual
        type: !_DualBase
          dual: Number
    name: OutpPrntDual
    parent: !_DualBase
      dual: RefOutpPrntDual
    typeKind: !_TypeKind Output
  !_Identifier OutpPrntField: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: RefOutpPrntField
        output: String
    allFields:
      - !_ObjectFor(_OutputField)
        name: parent
        object: RefOutpPrntField
        type: !_OutputBase
          output: Number
      - !_ObjectFor(_OutputField)
        name: field
        object: OutpPrntField
        type: !_OutputBase
          output: Number
    fields:
      - !_OutputField
        name: field
        type: !_OutputBase
          output: Number
    name: OutpPrntField
    parent: !_OutputBase
      output: RefOutpPrntField
    typeKind: !_TypeKind Output
  !_Identifier OutpPrntGnrc: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: OutpPrntGnrc
        output: RefOutpPrntGnrc
        typeArgs:
          - !_OutputArg
            label: prnt_outpPrntGnrc
            name: EnumOutpPrntGnrc
            typeKind: !_SimpleKind Enum
    alternates:
      - !_OutputAlternate
        output: RefOutpPrntGnrc
        typeArgs:
          - !_OutputArg
            label: prnt_outpPrntGnrc
            name: EnumOutpPrntGnrc
            typeKind: !_SimpleKind Enum
    name: OutpPrntGnrc
    typeKind: !_TypeKind Output
  !_Identifier OutpPrntParam: !_TypeOutput
    allFields:
      - !_ObjectFor(_OutputField)
        name: field
        object: PrntOutpPrntParam
        parameters:
          - !_InputParam
            input: PrntOutpPrntParamIn
        type: !_DualBase
          dual: FldOutpPrntParam
      - !_ObjectFor(_OutputField)
        name: field
        object: OutpPrntParam
        parameters:
          - !_InputParam
            input: InOutpPrntParam
        type: !_DualBase
          dual: FldOutpPrntParam
    fields:
      - !_OutputField
        name: field
        parameters:
          - !_InputParam
            input: InOutpPrntParam
        type: !_DualBase
          dual: FldOutpPrntParam
    name: OutpPrntParam
    parent: !_OutputBase
      output: PrntOutpPrntParam
    typeKind: !_TypeKind Output
  !_Identifier OutpPrntParamDiff: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: RefOutpPrntParamDiff
        typeParam: b
    allFields:
      - !_ObjectFor(_OutputField)
        name: field
        object: OutpPrntParamDiff
        type: !_OutputBase
          typeParam: a
    fields:
      - !_OutputField
        name: field
        type: !_OutputBase
          typeParam: a
    name: OutpPrntParamDiff
    parent: !_OutputBase
      output: RefOutpPrntParamDiff
      typeArgs:
        - !_OutputArg
          typeParam: a
    typeKind: !_TypeKind Output
    typeParams:
      - !_Named
        name: a
  !_Identifier OutpPrntParamSame: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: RefOutpPrntParamSame
        typeParam: a
    allFields:
      - !_ObjectFor(_OutputField)
        name: field
        object: OutpPrntParamSame
        type: !_OutputBase
          typeParam: a
    fields:
      - !_OutputField
        name: field
        type: !_OutputBase
          typeParam: a
    name: OutpPrntParamSame
    parent: !_OutputBase
      output: RefOutpPrntParamSame
      typeArgs:
        - !_OutputArg
          typeParam: a
    typeKind: !_TypeKind Output
    typeParams:
      - !_Named
        name: a
  !_Identifier PrntOutpFieldEnumPrnt: !_TypeEnum
    allItems:
      - !_EnumLabel
        enum: PrntOutpFieldEnumPrnt
        name: prnt_outpFieldEnumPrnt
    items:
      - !_Aliased
        name: prnt_outpFieldEnumPrnt
    name: PrntOutpFieldEnumPrnt
    typeKind: !_TypeKind Enum
  !_Identifier PrntOutpPrntGnrc: !_TypeEnum
    allItems:
      - !_EnumLabel
        enum: PrntOutpPrntGnrc
        name: prnt_outpPrntGnrc
    items:
      - !_Aliased
        name: prnt_outpPrntGnrc
    name: PrntOutpPrntGnrc
    typeKind: !_TypeKind Enum
  !_Identifier PrntOutpPrntParam: !_TypeOutput
    allFields:
      - !_ObjectFor(_OutputField)
        name: field
        object: PrntOutpPrntParam
        parameters:
          - !_InputParam
            input: PrntOutpPrntParamIn
        type: !_DualBase
          dual: FldOutpPrntParam
    fields:
      - !_OutputField
        name: field
        parameters:
          - !_InputParam
            input: PrntOutpPrntParamIn
        type: !_DualBase
          dual: FldOutpPrntParam
    name: PrntOutpPrntParam
    typeKind: !_TypeKind Output
  !_Identifier PrntOutpPrntParamIn: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        input: String
        object: PrntOutpPrntParamIn
    allFields:
      - !_ObjectFor(_InputField)
        name: parent
        object: PrntOutpPrntParamIn
        type: !_InputBase
          input: Number
    alternates:
      - !_InputAlternate
        input: String
    fields:
      - !_InputField
        name: parent
        type: !_InputBase
          input: Number
    name: PrntOutpPrntParamIn
    typeKind: !_TypeKind Input
  !_Identifier RefDualGnrcAltArg: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: RefDualGnrcAltArg
        typeParam: ref
    alternates:
      - !_DualAlternate
        typeParam: ref
    name: RefDualGnrcAltArg
    typeKind: !_TypeKind Dual
    typeParams:
      - !_Named
        name: ref
  !_Identifier RefDualGnrcAltArgDescr: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: RefDualGnrcAltArgDescr
        typeParam: ref
    alternates:
      - !_DualAlternate
        typeParam: ref
    name: RefDualGnrcAltArgDescr
    typeKind: !_TypeKind Dual
    typeParams:
      - !_Named
        name: ref
  !_Identifier RefDualGnrcAltDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: RefDualGnrcAltDual
        typeParam: ref
    alternates:
      - !_DualAlternate
        typeParam: ref
    name: RefDualGnrcAltDual
    typeKind: !_TypeKind Dual
    typeParams:
      - !_Named
        name: ref
  !_Identifier RefDualGnrcAltParam: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: RefDualGnrcAltParam
        typeParam: ref
    alternates:
      - !_DualAlternate
        typeParam: ref
    name: RefDualGnrcAltParam
    typeKind: !_TypeKind Dual
    typeParams:
      - !_Named
        name: ref
  !_Identifier RefDualGnrcAltSmpl: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: RefDualGnrcAltSmpl
        typeParam: ref
    alternates:
      - !_DualAlternate
        typeParam: ref
    name: RefDualGnrcAltSmpl
    typeKind: !_TypeKind Dual
    typeParams:
      - !_Named
        name: ref
  !_Identifier RefDualGnrcFieldArg: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: RefDualGnrcFieldArg
        typeParam: ref
    alternates:
      - !_DualAlternate
        typeParam: ref
    name: RefDualGnrcFieldArg
    typeKind: !_TypeKind Dual
    typeParams:
      - !_Named
        name: ref
  !_Identifier RefDualGnrcFieldDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: RefDualGnrcFieldDual
        typeParam: ref
    alternates:
      - !_DualAlternate
        typeParam: ref
    name: RefDualGnrcFieldDual
    typeKind: !_TypeKind Dual
    typeParams:
      - !_Named
        name: ref
  !_Identifier RefDualGnrcFieldParam: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: RefDualGnrcFieldParam
        typeParam: ref
    alternates:
      - !_DualAlternate
        typeParam: ref
    name: RefDualGnrcFieldParam
    typeKind: !_TypeKind Dual
    typeParams:
      - !_Named
        name: ref
  !_Identifier RefDualGnrcPrntArg: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: RefDualGnrcPrntArg
        typeParam: ref
    alternates:
      - !_DualAlternate
        typeParam: ref
    name: RefDualGnrcPrntArg
    typeKind: !_TypeKind Dual
    typeParams:
      - !_Named
        name: ref
  !_Identifier RefDualGnrcPrntDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: RefDualGnrcPrntDual
        typeParam: ref
    alternates:
      - !_DualAlternate
        typeParam: ref
    name: RefDualGnrcPrntDual
    typeKind: !_TypeKind Dual
    typeParams:
      - !_Named
        name: ref
  !_Identifier RefDualGnrcPrntDualPrnt: !_TypeDual
    name: RefDualGnrcPrntDualPrnt
    parent: !_DualBase
      typeParam: ref
    typeKind: !_TypeKind Dual
    typeParams:
      - !_Named
        name: ref
  !_Identifier RefDualGnrcPrntParam: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: RefDualGnrcPrntParam
        typeParam: ref
    alternates:
      - !_DualAlternate
        typeParam: ref
    name: RefDualGnrcPrntParam
    typeKind: !_TypeKind Dual
    typeParams:
      - !_Named
        name: ref
  !_Identifier RefDualGnrcPrntParamPrnt: !_TypeDual
    name: RefDualGnrcPrntParamPrnt
    parent: !_DualBase
      typeParam: ref
    typeKind: !_TypeKind Dual
    typeParams:
      - !_Named
        name: ref
  !_Identifier RefDualPrnt: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        dual: String
        object: RefDualPrnt
    allFields:
      - !_ObjectFor(_DualField)
        name: parent
        object: RefDualPrnt
        type: !_DualBase
          dual: Number
    alternates:
      - !_DualAlternate
        dual: String
    fields:
      - !_DualField
        name: parent
        type: !_DualBase
          dual: Number
    name: RefDualPrnt
    typeKind: !_TypeKind Dual
  !_Identifier RefDualPrntAlt: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        dual: String
        object: RefDualPrntAlt
    allFields:
      - !_ObjectFor(_DualField)
        name: parent
        object: RefDualPrntAlt
        type: !_DualBase
          dual: Number
    alternates:
      - !_DualAlternate
        dual: String
    fields:
      - !_DualField
        name: parent
        type: !_DualBase
          dual: Number
    name: RefDualPrntAlt
    typeKind: !_TypeKind Dual
  !_Identifier RefDualPrntDescr: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        dual: String
        object: RefDualPrntDescr
    allFields:
      - !_ObjectFor(_DualField)
        name: parent
        object: RefDualPrntDescr
        type: !_DualBase
          dual: Number
    alternates:
      - !_DualAlternate
        dual: String
    fields:
      - !_DualField
        name: parent
        type: !_DualBase
          dual: Number
    name: RefDualPrntDescr
    typeKind: !_TypeKind Dual
  !_Identifier RefDualPrntDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        dual: String
        object: RefDualPrntDual
    allFields:
      - !_ObjectFor(_DualField)
        name: parent
        object: RefDualPrntDual
        type: !_DualBase
          dual: Number
    alternates:
      - !_DualAlternate
        dual: String
    fields:
      - !_DualField
        name: parent
        type: !_DualBase
          dual: Number
    name: RefDualPrntDual
    typeKind: !_TypeKind Dual
  !_Identifier RefDualPrntField: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        dual: String
        object: RefDualPrntField
    allFields:
      - !_ObjectFor(_DualField)
        name: parent
        object: RefDualPrntField
        type: !_DualBase
          dual: Number
    alternates:
      - !_DualAlternate
        dual: String
    fields:
      - !_DualField
        name: parent
        type: !_DualBase
          dual: Number
    name: RefDualPrntField
    typeKind: !_TypeKind Dual
  !_Identifier RefDualPrntParamDiff: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: RefDualPrntParamDiff
        typeParam: b
    alternates:
      - !_DualAlternate
        typeParam: b
    name: RefDualPrntParamDiff
    typeKind: !_TypeKind Dual
    typeParams:
      - !_Named
        name: b
  !_Identifier RefDualPrntParamSame: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        object: RefDualPrntParamSame
        typeParam: a
    alternates:
      - !_DualAlternate
        typeParam: a
    name: RefDualPrntParamSame
    typeKind: !_TypeKind Dual
    typeParams:
      - !_Named
        name: a
  !_Identifier RefInpGnrcAltArg: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        object: RefInpGnrcAltArg
        typeParam: ref
    alternates:
      - !_InputAlternate
        typeParam: ref
    name: RefInpGnrcAltArg
    typeKind: !_TypeKind Input
    typeParams:
      - !_Named
        name: ref
  !_Identifier RefInpGnrcAltArgDescr: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        object: RefInpGnrcAltArgDescr
        typeParam: ref
    alternates:
      - !_InputAlternate
        typeParam: ref
    name: RefInpGnrcAltArgDescr
    typeKind: !_TypeKind Input
    typeParams:
      - !_Named
        name: ref
  !_Identifier RefInpGnrcAltDual: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        object: RefInpGnrcAltDual
        typeParam: ref
    alternates:
      - !_InputAlternate
        typeParam: ref
    name: RefInpGnrcAltDual
    typeKind: !_TypeKind Input
    typeParams:
      - !_Named
        name: ref
  !_Identifier RefInpGnrcAltParam: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        object: RefInpGnrcAltParam
        typeParam: ref
    alternates:
      - !_InputAlternate
        typeParam: ref
    name: RefInpGnrcAltParam
    typeKind: !_TypeKind Input
    typeParams:
      - !_Named
        name: ref
  !_Identifier RefInpGnrcAltSmpl: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        object: RefInpGnrcAltSmpl
        typeParam: ref
    alternates:
      - !_InputAlternate
        typeParam: ref
    name: RefInpGnrcAltSmpl
    typeKind: !_TypeKind Input
    typeParams:
      - !_Named
        name: ref
  !_Identifier RefInpGnrcFieldArg: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        object: RefInpGnrcFieldArg
        typeParam: ref
    alternates:
      - !_InputAlternate
        typeParam: ref
    name: RefInpGnrcFieldArg
    typeKind: !_TypeKind Input
    typeParams:
      - !_Named
        name: ref
  !_Identifier RefInpGnrcFieldDual: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        object: RefInpGnrcFieldDual
        typeParam: ref
    alternates:
      - !_InputAlternate
        typeParam: ref
    name: RefInpGnrcFieldDual
    typeKind: !_TypeKind Input
    typeParams:
      - !_Named
        name: ref
  !_Identifier RefInpGnrcFieldParam: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        object: RefInpGnrcFieldParam
        typeParam: ref
    alternates:
      - !_InputAlternate
        typeParam: ref
    name: RefInpGnrcFieldParam
    typeKind: !_TypeKind Input
    typeParams:
      - !_Named
        name: ref
  !_Identifier RefInpGnrcPrntArg: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        object: RefInpGnrcPrntArg
        typeParam: ref
    alternates:
      - !_InputAlternate
        typeParam: ref
    name: RefInpGnrcPrntArg
    typeKind: !_TypeKind Input
    typeParams:
      - !_Named
        name: ref
  !_Identifier RefInpGnrcPrntDual: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        object: RefInpGnrcPrntDual
        typeParam: ref
    alternates:
      - !_InputAlternate
        typeParam: ref
    name: RefInpGnrcPrntDual
    typeKind: !_TypeKind Input
    typeParams:
      - !_Named
        name: ref
  !_Identifier RefInpGnrcPrntDualPrnt: !_TypeInput
    name: RefInpGnrcPrntDualPrnt
    parent: !_InputBase
      typeParam: ref
    typeKind: !_TypeKind Input
    typeParams:
      - !_Named
        name: ref
  !_Identifier RefInpGnrcPrntParam: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        object: RefInpGnrcPrntParam
        typeParam: ref
    alternates:
      - !_InputAlternate
        typeParam: ref
    name: RefInpGnrcPrntParam
    typeKind: !_TypeKind Input
    typeParams:
      - !_Named
        name: ref
  !_Identifier RefInpGnrcPrntParamPrnt: !_TypeInput
    name: RefInpGnrcPrntParamPrnt
    parent: !_InputBase
      typeParam: ref
    typeKind: !_TypeKind Input
    typeParams:
      - !_Named
        name: ref
  !_Identifier RefInpPrnt: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        input: String
        object: RefInpPrnt
    allFields:
      - !_ObjectFor(_InputField)
        name: parent
        object: RefInpPrnt
        type: !_InputBase
          input: Number
    alternates:
      - !_InputAlternate
        input: String
    fields:
      - !_InputField
        name: parent
        type: !_InputBase
          input: Number
    name: RefInpPrnt
    typeKind: !_TypeKind Input
  !_Identifier RefInpPrntAlt: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        input: String
        object: RefInpPrntAlt
    allFields:
      - !_ObjectFor(_InputField)
        name: parent
        object: RefInpPrntAlt
        type: !_InputBase
          input: Number
    alternates:
      - !_InputAlternate
        input: String
    fields:
      - !_InputField
        name: parent
        type: !_InputBase
          input: Number
    name: RefInpPrntAlt
    typeKind: !_TypeKind Input
  !_Identifier RefInpPrntDescr: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        input: String
        object: RefInpPrntDescr
    allFields:
      - !_ObjectFor(_InputField)
        name: parent
        object: RefInpPrntDescr
        type: !_InputBase
          input: Number
    alternates:
      - !_InputAlternate
        input: String
    fields:
      - !_InputField
        name: parent
        type: !_InputBase
          input: Number
    name: RefInpPrntDescr
    typeKind: !_TypeKind Input
  !_Identifier RefInpPrntDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        dual: String
        object: RefInpPrntDual
    allFields:
      - !_ObjectFor(_DualField)
        name: parent
        object: RefInpPrntDual
        type: !_DualBase
          dual: Number
    alternates:
      - !_DualAlternate
        dual: String
    fields:
      - !_DualField
        name: parent
        type: !_DualBase
          dual: Number
    name: RefInpPrntDual
    typeKind: !_TypeKind Dual
  !_Identifier RefInpPrntField: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        input: String
        object: RefInpPrntField
    allFields:
      - !_ObjectFor(_InputField)
        name: parent
        object: RefInpPrntField
        type: !_InputBase
          input: Number
    alternates:
      - !_InputAlternate
        input: String
    fields:
      - !_InputField
        name: parent
        type: !_InputBase
          input: Number
    name: RefInpPrntField
    typeKind: !_TypeKind Input
  !_Identifier RefInpPrntParamDiff: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        object: RefInpPrntParamDiff
        typeParam: b
    alternates:
      - !_InputAlternate
        typeParam: b
    name: RefInpPrntParamDiff
    typeKind: !_TypeKind Input
    typeParams:
      - !_Named
        name: b
  !_Identifier RefInpPrntParamSame: !_TypeInput
    allAlternates:
      - !_ObjectFor(_InputAlternate)
        object: RefInpPrntParamSame
        typeParam: a
    alternates:
      - !_InputAlternate
        typeParam: a
    name: RefInpPrntParamSame
    typeKind: !_TypeKind Input
    typeParams:
      - !_Named
        name: a
  !_Identifier RefOutpGnrcAltArg: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: RefOutpGnrcAltArg
        typeParam: ref
    alternates:
      - !_OutputAlternate
        typeParam: ref
    name: RefOutpGnrcAltArg
    typeKind: !_TypeKind Output
    typeParams:
      - !_Named
        name: ref
  !_Identifier RefOutpGnrcAltArgDescr: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: RefOutpGnrcAltArgDescr
        typeParam: ref
    alternates:
      - !_OutputAlternate
        typeParam: ref
    name: RefOutpGnrcAltArgDescr
    typeKind: !_TypeKind Output
    typeParams:
      - !_Named
        name: ref
  !_Identifier RefOutpGnrcAltDual: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: RefOutpGnrcAltDual
        typeParam: ref
    alternates:
      - !_OutputAlternate
        typeParam: ref
    name: RefOutpGnrcAltDual
    typeKind: !_TypeKind Output
    typeParams:
      - !_Named
        name: ref
  !_Identifier RefOutpGnrcAltParam: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: RefOutpGnrcAltParam
        typeParam: ref
    alternates:
      - !_OutputAlternate
        typeParam: ref
    name: RefOutpGnrcAltParam
    typeKind: !_TypeKind Output
    typeParams:
      - !_Named
        name: ref
  !_Identifier RefOutpGnrcAltSmpl: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: RefOutpGnrcAltSmpl
        typeParam: ref
    alternates:
      - !_OutputAlternate
        typeParam: ref
    name: RefOutpGnrcAltSmpl
    typeKind: !_TypeKind Output
    typeParams:
      - !_Named
        name: ref
  !_Identifier RefOutpGnrcEnum: !_TypeOutput
    allFields:
      - !_ObjectFor(_OutputField)
        name: field
        object: RefOutpGnrcEnum
        type: !_OutputBase
          typeParam: type
    fields:
      - !_OutputField
        name: field
        type: !_OutputBase
          typeParam: type
    name: RefOutpGnrcEnum
    typeKind: !_TypeKind Output
    typeParams:
      - !_Named
        name: type
  !_Identifier RefOutpGnrcFieldArg: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: RefOutpGnrcFieldArg
        typeParam: ref
    alternates:
      - !_OutputAlternate
        typeParam: ref
    name: RefOutpGnrcFieldArg
    typeKind: !_TypeKind Output
    typeParams:
      - !_Named
        name: ref
  !_Identifier RefOutpGnrcFieldDual: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: RefOutpGnrcFieldDual
        typeParam: ref
    alternates:
      - !_OutputAlternate
        typeParam: ref
    name: RefOutpGnrcFieldDual
    typeKind: !_TypeKind Output
    typeParams:
      - !_Named
        name: ref
  !_Identifier RefOutpGnrcFieldParam: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: RefOutpGnrcFieldParam
        typeParam: ref
    alternates:
      - !_OutputAlternate
        typeParam: ref
    name: RefOutpGnrcFieldParam
    typeKind: !_TypeKind Output
    typeParams:
      - !_Named
        name: ref
  !_Identifier RefOutpGnrcPrntArg: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: RefOutpGnrcPrntArg
        typeParam: ref
    alternates:
      - !_OutputAlternate
        typeParam: ref
    name: RefOutpGnrcPrntArg
    typeKind: !_TypeKind Output
    typeParams:
      - !_Named
        name: ref
  !_Identifier RefOutpGnrcPrntDual: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: RefOutpGnrcPrntDual
        typeParam: ref
    alternates:
      - !_OutputAlternate
        typeParam: ref
    name: RefOutpGnrcPrntDual
    typeKind: !_TypeKind Output
    typeParams:
      - !_Named
        name: ref
  !_Identifier RefOutpGnrcPrntDualPrnt: !_TypeOutput
    name: RefOutpGnrcPrntDualPrnt
    parent: !_OutputBase
      typeParam: ref
    typeKind: !_TypeKind Output
    typeParams:
      - !_Named
        name: ref
  !_Identifier RefOutpGnrcPrntParam: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: RefOutpGnrcPrntParam
        typeParam: ref
    alternates:
      - !_OutputAlternate
        typeParam: ref
    name: RefOutpGnrcPrntParam
    typeKind: !_TypeKind Output
    typeParams:
      - !_Named
        name: ref
  !_Identifier RefOutpGnrcPrntParamPrnt: !_TypeOutput
    name: RefOutpGnrcPrntParamPrnt
    parent: !_OutputBase
      typeParam: ref
    typeKind: !_TypeKind Output
    typeParams:
      - !_Named
        name: ref
  !_Identifier RefOutpGnrcValue: !_TypeOutput
    allFields:
      - !_ObjectFor(_OutputField)
        name: field
        object: RefOutpGnrcValue
        type: !_OutputBase
          typeParam: type
    fields:
      - !_OutputField
        name: field
        type: !_OutputBase
          typeParam: type
    name: RefOutpGnrcValue
    typeKind: !_TypeKind Output
    typeParams:
      - !_Named
        name: type
  !_Identifier RefOutpPrnt: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: RefOutpPrnt
        output: String
    allFields:
      - !_ObjectFor(_OutputField)
        name: parent
        object: RefOutpPrnt
        type: !_OutputBase
          output: Number
    alternates:
      - !_OutputAlternate
        output: String
    fields:
      - !_OutputField
        name: parent
        type: !_OutputBase
          output: Number
    name: RefOutpPrnt
    typeKind: !_TypeKind Output
  !_Identifier RefOutpPrntAlt: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: RefOutpPrntAlt
        output: String
    allFields:
      - !_ObjectFor(_OutputField)
        name: parent
        object: RefOutpPrntAlt
        type: !_OutputBase
          output: Number
    alternates:
      - !_OutputAlternate
        output: String
    fields:
      - !_OutputField
        name: parent
        type: !_OutputBase
          output: Number
    name: RefOutpPrntAlt
    typeKind: !_TypeKind Output
  !_Identifier RefOutpPrntDescr: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: RefOutpPrntDescr
        output: String
    allFields:
      - !_ObjectFor(_OutputField)
        name: parent
        object: RefOutpPrntDescr
        type: !_OutputBase
          output: Number
    alternates:
      - !_OutputAlternate
        output: String
    fields:
      - !_OutputField
        name: parent
        type: !_OutputBase
          output: Number
    name: RefOutpPrntDescr
    typeKind: !_TypeKind Output
  !_Identifier RefOutpPrntDual: !_TypeDual
    allAlternates:
      - !_ObjectFor(_DualAlternate)
        dual: String
        object: RefOutpPrntDual
    allFields:
      - !_ObjectFor(_DualField)
        name: parent
        object: RefOutpPrntDual
        type: !_DualBase
          dual: Number
    alternates:
      - !_DualAlternate
        dual: String
    fields:
      - !_DualField
        name: parent
        type: !_DualBase
          dual: Number
    name: RefOutpPrntDual
    typeKind: !_TypeKind Dual
  !_Identifier RefOutpPrntField: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: RefOutpPrntField
        output: String
    allFields:
      - !_ObjectFor(_OutputField)
        name: parent
        object: RefOutpPrntField
        type: !_OutputBase
          output: Number
    alternates:
      - !_OutputAlternate
        output: String
    fields:
      - !_OutputField
        name: parent
        type: !_OutputBase
          output: Number
    name: RefOutpPrntField
    typeKind: !_TypeKind Output
  !_Identifier RefOutpPrntGnrc: !_TypeOutput
    allFields:
      - !_ObjectFor(_OutputField)
        name: field
        object: RefOutpPrntGnrc
        type: !_OutputBase
          typeParam: type
    fields:
      - !_OutputField
        name: field
        type: !_OutputBase
          typeParam: type
    name: RefOutpPrntGnrc
    typeKind: !_TypeKind Output
    typeParams:
      - !_Named
        name: type
  !_Identifier RefOutpPrntParamDiff: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: RefOutpPrntParamDiff
        typeParam: b
    alternates:
      - !_OutputAlternate
        typeParam: b
    name: RefOutpPrntParamDiff
    typeKind: !_TypeKind Output
    typeParams:
      - !_Named
        name: b
  !_Identifier RefOutpPrntParamSame: !_TypeOutput
    allAlternates:
      - !_ObjectFor(_OutputAlternate)
        object: RefOutpPrntParamSame
        typeParam: a
    alternates:
      - !_OutputAlternate
        typeParam: a
    name: RefOutpPrntParamSame
    typeKind: !_TypeKind Output
    typeParams:
      - !_Named
        name: a